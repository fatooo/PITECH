


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    6 00000000         ; ADC Registers
    7 00000000 400FE638 
                       RCGCADC EQU              0x400FE638  ; ADC clock registe
                                                            r
    8 00000000         ; ADC0 base address EQU 0x40038000
    9 00000000 40038000 
                       ADC0_ACTSS
                               EQU              0x40038000  ; Sample sequencer 
                                                            (ADC0 base address)
                                                            
   10 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
   11 00000000 40038008 
                       ADC0_IM EQU              0x40038008  ; Interrupt select
   12 00000000 40038034 
                       ADC0_ISC
                               EQU              0x40038034  ; Interrupt status 
                                                            and clear
   13 00000000 40038014 
                       ADC0_EMUX
                               EQU              0x40038014  ; Trigger select
   14 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
   15 00000000 400380A0 
                       ADC0_SSMUX3
                               EQU              0x400380A0  ; Input channel sel
                                                            ect
   16 00000000 400380A4 
                       ADC0_SSCTL3
                               EQU              0x400380A4  ; Sample sequence c
                                                            ontrol
   17 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                            
   18 00000000 40038FC4 
                       ADC0_PP EQU              0x40038FC4  ; Sample rate
   19 00000000         ; GPIO Registers
   20 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   21 00000000         ; PORT E base address EQU 0x40024000
   22 00000000 4002451C 
                       PORTE_DEN
                               EQU              0x4002451C  ; Digital Enable
   23 00000000 4002452C 
                       PORTE_PCTL
                               EQU              0x4002452C  ; Alternative funct
                                                            ion configuration



ARM Macro Assembler    Page 2 


   24 00000000 40024420 
                       PORTE_AFSEL
                               EQU              0x40024420  ; Alternate functio
                                                            n select
   25 00000000 40024528 
                       PORTE_AMSEL
                               EQU              0x40024528  ; Enable analog
   26 00000000 20004000 
                       data    EQU              0x20004000
   27 00000000         
   28 00000000         
   29 00000000         ***************************
   30 00000000         ;ADC1 FOR SAMPLING AIN1
   31 00000000         ***********************
   32 00000000 40039000 
                       ADC1_ACTSS
                               EQU              0x40039000  ; Sample sequencer 
                                                            (ADC1 base address)
                                                            
   33 00000000 40039004 
                       ADC1_RIS
                               EQU              0x40039004  ; Interrupt status
   34 00000000 40039008 
                       ADC1_IM EQU              0x40039008  ; Interrupt select
   35 00000000 40039034 
                       ADC1_ISC
                               EQU              0x40039034  ; Interrupt status 
                                                            and clear
   36 00000000 40039014 
                       ADC1_EMUX
                               EQU              0x40039014  ; Trigger select
   37 00000000 40039028 
                       ADC1_PSSI
                               EQU              0x40039028  ; Initiate sample
   38 00000000 400390A0 
                       ADC1_SSMUX3
                               EQU              0x400390A0  ; Input channel sel
                                                            ect
   39 00000000 400390A4 
                       ADC1_SSCTL3
                               EQU              0x400390A4  ; Sample sequence c
                                                            ontrol
   40 00000000 400390A8 
                       ADC1_SSFIFO3
                               EQU              0x400390A8  ; Channel 3 results
                                                            
   41 00000000 40039FC4 
                       ADC1_PP EQU              0x40039FC4  ; Sample rate 
   42 00000000         ; Start clocks for features to be used
   43 00000000         
   44 00000000         ;*******************************************************
                       ********
   45 00000000         ; INITIALIZE ADC FOR AIN0 AND AIN1 
   46 00000000         ;  PE3 AND PE2 IS GOIN TO BE USED
   47 00000000         ;*******************************************************
                       ******** 
   48 00000000         ;*******************************************************
                       ********
   49 00000000         ; Program section           



ARM Macro Assembler    Page 3 


   50 00000000         ;*******************************************************
                       ********
   51 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   52 00000000                 AREA             routines, READONLY, CODE
   53 00000000                 THUMB
   54 00000000                 EXPORT           ADC_INIT
   55 00000000         
   56 00000000         ;*******************************************************
                       ********
   57 00000000         ; ADC_INIT FUNCTION INITIALIZED ADC1 AND ADC0
   58 00000000         ;*******************************************************
                       ******** 
   59 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT    
   60 00000000         ADC_INIT
                               PROC
   61 00000000         
   62 00000000 B500            PUSH             {LR}
   63 00000002 4967            LDR              R1, =RCGCADC 
                                                            ; Turn on ADC clock
                                                            
   64 00000004 6808            LDR              R0, [R1]
   65 00000006 F040 0003       ORR              R0, R0, #0x03 ; set bit 0 to en
                                                            able ADC0 AND ADC1 
                                                            clock
   66 0000000A 6008            STR              R0, [R1]
   67 0000000C BF00            NOP
   68 0000000E BF00            NOP
   69 00000010 BF00            NOP                          ; Let clock stabili
                                                            ze
   70 00000012 4964            LDR              R1, =RCGCGPIO ; Turn on GPIO cl
                                                            ock
   71 00000014 6808            LDR              R0, [R1]
   72 00000016 F040 0010       ORR              R0, R0, #0x10 ; set bit 4 to en
                                                            able port E clock
   73 0000001A 6008            STR              R0, [R1]
   74 0000001C BF00            NOP
   75 0000001E BF00            NOP
   76 00000020 BF00            NOP                          ; Let clock stabili
                                                            ze
   77 00000022         ; Setup GPIO to make PE3 input for ADC0
   78 00000022         ; Enable alternate functions
   79 00000022 4961            LDR              R1, =PORTE_AFSEL
   80 00000024 6808            LDR              R0, [R1]
   81 00000026 F040 000C       ORR              R0, R0, #0x0C ; set bit 3 to en
                                                            able alt functions 
                                                            on PE3 AND SET BIT 
                                                            2 TO ENABLE PE2
   82 0000002A 6008            STR              R0, [R1]
   83 0000002C         ; PCTL does not have to be configured
   84 0000002C         ; since ADC0 is automatically selected when
   85 0000002C         ; port pin is set to analog. 
   86 0000002C         ; Disable digital on PE3
   87 0000002C 495F            LDR              R1, =PORTE_DEN
   88 0000002E 6808            LDR              R0, [R1]
   89 00000030 F020 000C       BIC              R0, R0, #0x0C ; clear bit 3 to 
                                                            disable analog on P
                                                            E3 AND PE2
   90 00000034 6008            STR              R0, [R1]
   91 00000036         ; Enable analog on PE3



ARM Macro Assembler    Page 4 


   92 00000036 495E            LDR              R1, =PORTE_AMSEL
   93 00000038 6808            LDR              R0, [R1]
   94 0000003A F040 000C       ORR              R0, R0, #0x0C ; set bit 3 to en
                                                            able analog on PE3
   95 0000003E 6008            STR              R0, [R1]
   96 00000040         ; Disable sequencer while ADC setup
   97 00000040         
   98 00000040         
   99 00000040         ;;;ENABLE ADC0 AND ADC PORTS 
  100 00000040         ;;ADC SETUPS WILL BE DONE 
  101 00000040         
  102 00000040         
  103 00000040 495C            LDR              R1, =ADC0_ACTSS
  104 00000042 6808            LDR              R0, [R1]
  105 00000044 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  106 00000048 6008            STR              R0, [R1]
  107 0000004A         ; Select trigger source
  108 0000004A 495B            LDR              R1, =ADC0_EMUX
  109 0000004C 6808            LDR              R0, [R1]
  110 0000004E F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select SOFTW
                                                            ARE trigger
  111 00000052 6008            STR              R0, [R1]
  112 00000054         ; Select input channel
  113 00000054 4959            LDR              R1, =ADC0_SSMUX3
  114 00000056 6808            LDR              R0, [R1]
  115 00000058         ;BIC R0, R0, #0x000F ; clear bits 3:0 to select AIN0
  116 00000058 F040 0002       ORR              R0, R0, #0x0002
  117 0000005C F020 000D       BIC              R0, R0, #0x000D
  118 00000060 6008            STR              R0, [R1]
  119 00000062         ; Config sample sequence
  120 00000062 4957            LDR              R1, =ADC0_SSCTL3
  121 00000064 6808            LDR              R0, [R1]
  122 00000066 F040 0006       ORR              R0, R0, #0x06 
                                                            ; set bit 1 (END0)
  123 0000006A 6008            STR              R0, [R1]
  124 0000006C         ; Set sample rate
  125 0000006C 4955            LDR              R1, =ADC0_PP
  126 0000006E 6808            LDR              R0, [R1]
  127 00000070 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125k sps
  128 00000074 6008            STR              R0, [R1]
  129 00000076         ; Done with setup, enable sequencer
  130 00000076 494F            LDR              R1, =ADC0_ACTSS
  131 00000078 6808            LDR              R0, [R1]
  132 0000007A F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  133 0000007E 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  134 00000080         
  135 00000080         ; ADC1 INITIALIZATION
  136 00000080         
  137 00000080 4951            LDR              R1, =ADC1_ACTSS
  138 00000082 6808            LDR              R0, [R1]
  139 00000084 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  140 00000088 6008            STR              R0, [R1]



ARM Macro Assembler    Page 5 


  141 0000008A         ; Select trigger source
  142 0000008A 4950            LDR              R1, =ADC1_EMUX
  143 0000008C 6808            LDR              R0, [R1]
  144 0000008E F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select SOFTW
                                                            ARE trigger
  145 00000092 6008            STR              R0, [R1]
  146 00000094         ; Select input channel
  147 00000094 494E            LDR              R1, =ADC1_SSMUX3
  148 00000096 6808            LDR              R0, [R1]
  149 00000098 F040 0001       ORR              R0 , #0x1   ; 
  150 0000009C F020 000E       BIC              R0, R0, #0x000E ; clear bits 3:
                                                            0 to select AIN1  0
                                                            0001
  151 000000A0 6008            STR              R0, [R1]
  152 000000A2         ; Config sample sequence
  153 000000A2 494C            LDR              R1, =ADC1_SSCTL3
  154 000000A4 6808            LDR              R0, [R1]
  155 000000A6 F040 0006       ORR              R0, R0, #0x06 
                                                            ; set bit 1 (END0)
  156 000000AA 6008            STR              R0, [R1]
  157 000000AC         ; Set sample rate
  158 000000AC 494A            LDR              R1, =ADC1_PP
  159 000000AE 6808            LDR              R0, [R1]
  160 000000B0 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125k sps
  161 000000B4 6008            STR              R0, [R1]
  162 000000B6         ; Done with setup, enable sequencer
  163 000000B6 4944            LDR              R1, =ADC1_ACTSS
  164 000000B8 6808            LDR              R0, [R1]
  165 000000BA F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  166 000000BE 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  167 000000C0         
  168 000000C0 F85D EB04       POP              {LR}
  169 000000C4 4770            BX               LR
  170 000000C6                 ENDP                         ;; END OF INITIALIZ
                                                            ATION
  171 000000C6         
  172 000000C6         
  173 000000C6         
  174 000000C6         ;*******************************************************
                       ********
  175 000000C6         ; ADC_READ_SHIP FUNCTION READS THE AIN0 AND AIN1 DATA 
  176 000000C6         ;   RETURNS YDATA XDATA IN R4 REGISTER
  177 000000C6         ;  COMPUTATION FOR SHIP PLACEMENT MADE IN THIS SUBMODULE
                       
  178 000000C6         ;*******************************************************
                       ******** 
  179 000000C6         ;LABEL  DIRECTIVE VALUE     COMMENT      
  180 000000C6         
  181 000000C6                 EXPORT           ADC_READ_SHIP
  182 000000C6         
  183 000000C6         ADC_READ_SHIP
                               PROC
  184 000000C6 B500            PUSH             {LR}
  185 000000C8         *******************************



ARM Macro Assembler    Page 6 


  186 000000C8         ; READ AIN0 FIRST 
  187 000000C8         ; PE3 CONTROLS X DATA
  188 000000C8         ; VERTICAL MOVEMENT
  189 000000C8         ; KEEPS DATA IN R5
  190 000000C8         *******************************
  191 000000C8         
  192 000000C8 4B44            LDR              R3, =ADC0_RIS 
                                                            ; interrupt address
                                                            
  193 000000CA 4C45            LDR              R4, =ADC0_SSFIFO3 
                                                            ; result address
  194 000000CC 4A45            LDR              R2, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
  195 000000CE 4E46            LDR              R6,= ADC0_ISC ; interrupt statu
                                                            s and clear
  196 000000D0         ; initiate sampling by enabling sequencer 3 in ADC0_PSSI
                       
  197 000000D0 6810    Smpl0   LDR              R0, [R2]
  198 000000D2 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  199 000000D6 6010            STR              R0, [R2]
  200 000000D8         ; check for sample complete (bit 3 of ADC0_RIS set)
  201 000000D8 6818    Cont0   LDR              R0, [R3]
  202 000000DA F010 0008       ANDS             R0, R0, #8  ;RIS bit
  203 000000DE D0FB            BEQ              Cont0
  204 000000E0 6825            LDR              R5,[R4]     ; R5 KEEPS THE ADC0
                                                             READING
  205 000000E2 F04F 0008       MOV              R0, #8
  206 000000E6 4E40            LDR              R6,= ADC0_ISC
  207 000000E8 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  208 000000EA         *******************************
  209 000000EA         ; READ AIN1 
  210 000000EA         ; PE2 CONTROLS Y DATA
  211 000000EA         ; HORIZONTAL MOVEMENT
  212 000000EA         ; KEEPS DATA IN R1
  213 000000EA         *******************************
  214 000000EA         
  215 000000EA         ADC1_READ
  216 000000EA 4B40            LDR              R3, =ADC1_RIS 
                                                            ; interrupt address
                                                            
  217 000000EC 4C40            LDR              R4, =ADC1_SSFIFO3 
                                                            ; result address
  218 000000EE 4A41            LDR              R2, =ADC1_PSSI ; sample sequenc
                                                            e initiate address
  219 000000F0 4E41            LDR              R6,= ADC1_ISC ; interrupt statu
                                                            s and clear
  220 000000F2         
  221 000000F2 6810    Smpl1   LDR              R0, [R2]
  222 000000F4 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  223 000000F8 6010            STR              R0, [R2]
  224 000000FA         ; check for sample complete (bit 3 of ADC0_RIS set)
  225 000000FA 6818    Cont1   LDR              R0, [R3]
  226 000000FC F010 0008       ANDS             R0, R0, #8  ;RIS bit
  227 00000100 D0FB            BEQ              Cont1
  228 00000102 6821            LDR              R1,[R4]     ; R1 KEEPS THE ADC1
                                                             READING



ARM Macro Assembler    Page 7 


  229 00000104 F04F 0008       MOV              R0, #8
  230 00000108 4E3B            LDR              R6,= ADC1_ISC
  231 0000010A 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  232 0000010C         
  233 0000010C         ****************
  234 0000010C         ; R1 KEEPS AIN1 READING
  235 0000010C         ; R5 KEEPS AIN0 READING
  236 0000010C         ; XDATA AND YDATA TRANSFORMS TO THE PIXEL VALUE
  237 0000010C         ; R4 KEEPS [YDATA, XDATA] 
  238 0000010C         ; LEAST SIGNIFICANT 4 BITS SHOWS X DATA
  239 0000010C         ; BITS FROM 3-7 SHOWS YDATA
  240 0000010C         
  241 0000010C         **********
  242 0000010C         
  243 0000010C         COMPUTE
  244 0000010C         
  245 0000010C F04F 0349       LDR              R3, =73     ; R3 IS THE DIVISOR
                                                            
  246 00000110 FBB5 F5F3       UDIV             R5, R5, R3  ; 
  247 00000114 F105 0506       ADD              R5, #6      ; R5 KEEPS THE X
  248 00000118         
  249 00000118 F04F 03AA       LDR              R3, =170    ;
  250 0000011C FBB1 F1F3       UDIV             R1, R1, R3  ;
  251 00000120 F101 0108       ADD              R1, #8      ;  ; R1 KEEPS THE Y
                                                             DATA
  252 00000124         
  253 00000124         
  254 00000124 EA4F 2101       LSL              R1,R1,#8    ; SHIFT Y DATA
  255 00000128 EB01 0405       ADD              R4, R1, R5  ; ADD XDATA YDATA 
  256 0000012C         ; R4 IS IN FROM [YDATA, XDATA]
  257 0000012C         
  258 0000012C         
  259 0000012C         
  260 0000012C F85D EB04       POP{LR}                      ; END OF THE OPERAT
                                                            ION
  261 00000130 4770            BX               LR
  262 00000132         
  263 00000132                 ENDP                         ; RETURN R4 
  264 00000132         
  265 00000132         
  266 00000132         
  267 00000132         
  268 00000132         
  269 00000132         ;*******************************************************
                       ********
  270 00000132         ; ADC_READ_CURSOR FUNCTION READS THE AIN0 AND AIN1 DATA 
                       
  271 00000132         ;   RETURNS YDATA XDATA IN R4 REGISTER
  272 00000132         ;  COMPUTATION FOR CURSOR PLACEMENT MADE IN THIS SUBMODU
                       LE
  273 00000132         ;*******************************************************
                       ******** 
  274 00000132         ;LABEL  DIRECTIVE VALUE     COMMENT      
  275 00000132         
  276 00000132                 EXPORT           ADC_READ_CURSOR
  277 00000132         
  278 00000132         ADC_READ_CURSOR
                               PROC



ARM Macro Assembler    Page 8 


  279 00000132 B500            PUSH             {LR}
  280 00000134 4B29            LDR              R3, =ADC0_RIS 
                                                            ; interrupt address
                                                            
  281 00000136 4C2A            LDR              R4, =ADC0_SSFIFO3 
                                                            ; result address
  282 00000138 4A2A            LDR              R2, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
  283 0000013A 4E2B            LDR              R6,= ADC0_ISC ; interrupt statu
                                                            s and clear
  284 0000013C         ; initiate sampling by enabling sequencer 3 in ADC0_PSSI
                       
  285 0000013C 6810    Smpl0_CURSOR
                               LDR              R0, [R2]
  286 0000013E F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  287 00000142 6010            STR              R0, [R2]
  288 00000144         ; check for sample complete (bit 3 of ADC0_RIS set)
  289 00000144 6818    Cont0_CURSOR
                               LDR              R0, [R3]
  290 00000146 F010 0008       ANDS             R0, R0, #8  ;RIS bit
  291 0000014A D0C5            BEQ              Cont0
  292 0000014C 6825            LDR              R5,[R4]     ; R5 KEEPS THE ADC0
                                                             READING
  293 0000014E F04F 0008       MOV              R0, #8
  294 00000152 4E25            LDR              R6,= ADC0_ISC
  295 00000154 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  296 00000156         
  297 00000156         
  298 00000156         ADC1_READ_CURSOR
  299 00000156 4B25            LDR              R3, =ADC1_RIS 
                                                            ; interrupt address
                                                            
  300 00000158 4C25            LDR              R4, =ADC1_SSFIFO3 
                                                            ; result address
  301 0000015A 4A26            LDR              R2, =ADC1_PSSI ; sample sequenc
                                                            e initiate address
  302 0000015C 4E26            LDR              R6,= ADC1_ISC ; interrupt statu
                                                            s and clear
  303 0000015E         
  304 0000015E 6810    Smpl1_CURSOR
                               LDR              R0, [R2]
  305 00000160 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  306 00000164 6010            STR              R0, [R2]
  307 00000166         ; check for sample complete (bit 3 of ADC0_RIS set)
  308 00000166 6818    Cont1_CURSOR
                               LDR              R0, [R3]
  309 00000168 F010 0008       ANDS             R0, R0, #8  ;RIS bit
  310 0000016C D0C5            BEQ              Cont1
  311 0000016E 6821            LDR              R1,[R4]     ; R1 KEEPS THE ADC1
                                                             READING
  312 00000170 F04F 0008       MOV              R0, #8
  313 00000174 4E20            LDR              R6,= ADC1_ISC
  314 00000176 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  315 00000178         
  316 00000178         ****************



ARM Macro Assembler    Page 9 


  317 00000178         ; R1 KEEPS ADC1 READING
  318 00000178         ; R5 KEEPS ADC0 READING
  319 00000178         
  320 00000178         **********
  321 00000178         
  322 00000178         COMPUTE_CURSOR
  323 00000178         
  324 00000178 F04F 0343       LDR              R3, =67     ; R3 IS THE DIVISOR
                                                            
  325 0000017C FBB5 F5F3       UDIV             R5, R5, R3  ; 
  326 00000180 F105 0507       ADD              R5, #7      ; R5 KEEPS THE X
  327 00000184         
  328 00000184 F04F 0389       LDR              R3, =137    ;
  329 00000188 FBB1 F1F3       UDIV             R1, R1, R3  ;
  330 0000018C F101 0109       ADD              R1, #9      ;  ; R1 KEEPS THE Y
                                                             DATA
  331 00000190         
  332 00000190         
  333 00000190 EA4F 2101       LSL              R1,R1,#8    ; SHIFT Y DATA
  334 00000194 EB01 0405       ADD              R4, R1, R5  ; ADD XDATA YDATA 
  335 00000198         ; R4 IS IN FROM [YDATA, XDATA]
  336 00000198         
  337 00000198 F85D EB04       POP{LR}                      ; RETURN R4 DATA 
  338 0000019C 4770            BX               LR
  339 0000019E         
  340 0000019E                 ENDP
  341 0000019E         
  342 0000019E 00 00           ALIGN
  343 000001A0                 END
              400FE638 
              400FE608 
              40024420 
              4002451C 
              40024528 
              40038000 
              40038014 
              400380A0 
              400380A4 
              40038FC4 
              40039000 
              40039014 
              400390A0 
              400390A4 
              40039FC4 
              40038004 
              400380A8 
              40038028 
              40038034 
              40039004 
              400390A8 
              40039028 
              40039034 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\adc_init.d -o.\objects\adc_init.o -I.\RTE\_Target_1 -
ID:\Work\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Work\ARM\CMSI
S\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" 
--predefine="TM4C123GH6PM SETA 1" --list=.\listings\adc_init.lst ADC_INIT.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC1_READ 000000EA

Symbol: ADC1_READ
   Definitions
      At line 215 in file ADC_INIT.s
   Uses
      None
Comment: ADC1_READ unused
ADC1_READ_CURSOR 00000156

Symbol: ADC1_READ_CURSOR
   Definitions
      At line 298 in file ADC_INIT.s
   Uses
      None
Comment: ADC1_READ_CURSOR unused
ADC_INIT 00000000

Symbol: ADC_INIT
   Definitions
      At line 60 in file ADC_INIT.s
   Uses
      At line 54 in file ADC_INIT.s
Comment: ADC_INIT used once
ADC_READ_CURSOR 00000132

Symbol: ADC_READ_CURSOR
   Definitions
      At line 278 in file ADC_INIT.s
   Uses
      At line 276 in file ADC_INIT.s
Comment: ADC_READ_CURSOR used once
ADC_READ_SHIP 000000C6

Symbol: ADC_READ_SHIP
   Definitions
      At line 183 in file ADC_INIT.s
   Uses
      At line 181 in file ADC_INIT.s
Comment: ADC_READ_SHIP used once
COMPUTE 0000010C

Symbol: COMPUTE
   Definitions
      At line 243 in file ADC_INIT.s
   Uses
      None
Comment: COMPUTE unused
COMPUTE_CURSOR 00000178

Symbol: COMPUTE_CURSOR
   Definitions
      At line 322 in file ADC_INIT.s
   Uses
      None
Comment: COMPUTE_CURSOR unused
Cont0 000000D8

Symbol: Cont0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 201 in file ADC_INIT.s
   Uses
      At line 203 in file ADC_INIT.s
      At line 291 in file ADC_INIT.s

Cont0_CURSOR 00000144

Symbol: Cont0_CURSOR
   Definitions
      At line 289 in file ADC_INIT.s
   Uses
      None
Comment: Cont0_CURSOR unused
Cont1 000000FA

Symbol: Cont1
   Definitions
      At line 225 in file ADC_INIT.s
   Uses
      At line 227 in file ADC_INIT.s
      At line 310 in file ADC_INIT.s

Cont1_CURSOR 00000166

Symbol: Cont1_CURSOR
   Definitions
      At line 308 in file ADC_INIT.s
   Uses
      None
Comment: Cont1_CURSOR unused
Smpl0 000000D0

Symbol: Smpl0
   Definitions
      At line 197 in file ADC_INIT.s
   Uses
      None
Comment: Smpl0 unused
Smpl0_CURSOR 0000013C

Symbol: Smpl0_CURSOR
   Definitions
      At line 285 in file ADC_INIT.s
   Uses
      None
Comment: Smpl0_CURSOR unused
Smpl1 000000F2

Symbol: Smpl1
   Definitions
      At line 221 in file ADC_INIT.s
   Uses
      None
Comment: Smpl1 unused
Smpl1_CURSOR 0000015E

Symbol: Smpl1_CURSOR
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 304 in file ADC_INIT.s
   Uses
      None
Comment: Smpl1_CURSOR unused
routines 00000000

Symbol: routines
   Definitions
      At line 52 in file ADC_INIT.s
   Uses
      None
Comment: routines unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ACTSS 40038000

Symbol: ADC0_ACTSS
   Definitions
      At line 9 in file ADC_INIT.s
   Uses
      At line 103 in file ADC_INIT.s
      At line 130 in file ADC_INIT.s

ADC0_EMUX 40038014

Symbol: ADC0_EMUX
   Definitions
      At line 13 in file ADC_INIT.s
   Uses
      At line 108 in file ADC_INIT.s
Comment: ADC0_EMUX used once
ADC0_IM 40038008

Symbol: ADC0_IM
   Definitions
      At line 11 in file ADC_INIT.s
   Uses
      None
Comment: ADC0_IM unused
ADC0_ISC 40038034

Symbol: ADC0_ISC
   Definitions
      At line 12 in file ADC_INIT.s
   Uses
      At line 195 in file ADC_INIT.s
      At line 206 in file ADC_INIT.s
      At line 283 in file ADC_INIT.s
      At line 294 in file ADC_INIT.s

ADC0_PP 40038FC4

Symbol: ADC0_PP
   Definitions
      At line 18 in file ADC_INIT.s
   Uses
      At line 125 in file ADC_INIT.s
Comment: ADC0_PP used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 14 in file ADC_INIT.s
   Uses
      At line 194 in file ADC_INIT.s
      At line 282 in file ADC_INIT.s

ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 10 in file ADC_INIT.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 192 in file ADC_INIT.s
      At line 280 in file ADC_INIT.s

ADC0_SSCTL3 400380A4

Symbol: ADC0_SSCTL3
   Definitions
      At line 16 in file ADC_INIT.s
   Uses
      At line 120 in file ADC_INIT.s
Comment: ADC0_SSCTL3 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 17 in file ADC_INIT.s
   Uses
      At line 193 in file ADC_INIT.s
      At line 281 in file ADC_INIT.s

ADC0_SSMUX3 400380A0

Symbol: ADC0_SSMUX3
   Definitions
      At line 15 in file ADC_INIT.s
   Uses
      At line 113 in file ADC_INIT.s
Comment: ADC0_SSMUX3 used once
ADC1_ACTSS 40039000

Symbol: ADC1_ACTSS
   Definitions
      At line 32 in file ADC_INIT.s
   Uses
      At line 137 in file ADC_INIT.s
      At line 163 in file ADC_INIT.s

ADC1_EMUX 40039014

Symbol: ADC1_EMUX
   Definitions
      At line 36 in file ADC_INIT.s
   Uses
      At line 142 in file ADC_INIT.s
Comment: ADC1_EMUX used once
ADC1_IM 40039008

Symbol: ADC1_IM
   Definitions
      At line 34 in file ADC_INIT.s
   Uses
      None
Comment: ADC1_IM unused
ADC1_ISC 40039034

Symbol: ADC1_ISC
   Definitions
      At line 35 in file ADC_INIT.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 219 in file ADC_INIT.s
      At line 230 in file ADC_INIT.s
      At line 302 in file ADC_INIT.s
      At line 313 in file ADC_INIT.s

ADC1_PP 40039FC4

Symbol: ADC1_PP
   Definitions
      At line 41 in file ADC_INIT.s
   Uses
      At line 158 in file ADC_INIT.s
Comment: ADC1_PP used once
ADC1_PSSI 40039028

Symbol: ADC1_PSSI
   Definitions
      At line 37 in file ADC_INIT.s
   Uses
      At line 218 in file ADC_INIT.s
      At line 301 in file ADC_INIT.s

ADC1_RIS 40039004

Symbol: ADC1_RIS
   Definitions
      At line 33 in file ADC_INIT.s
   Uses
      At line 216 in file ADC_INIT.s
      At line 299 in file ADC_INIT.s

ADC1_SSCTL3 400390A4

Symbol: ADC1_SSCTL3
   Definitions
      At line 39 in file ADC_INIT.s
   Uses
      At line 153 in file ADC_INIT.s
Comment: ADC1_SSCTL3 used once
ADC1_SSFIFO3 400390A8

Symbol: ADC1_SSFIFO3
   Definitions
      At line 40 in file ADC_INIT.s
   Uses
      At line 217 in file ADC_INIT.s
      At line 300 in file ADC_INIT.s

ADC1_SSMUX3 400390A0

Symbol: ADC1_SSMUX3
   Definitions
      At line 38 in file ADC_INIT.s
   Uses
      At line 147 in file ADC_INIT.s
Comment: ADC1_SSMUX3 used once
PORTE_AFSEL 40024420

Symbol: PORTE_AFSEL



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 24 in file ADC_INIT.s
   Uses
      At line 79 in file ADC_INIT.s
Comment: PORTE_AFSEL used once
PORTE_AMSEL 40024528

Symbol: PORTE_AMSEL
   Definitions
      At line 25 in file ADC_INIT.s
   Uses
      At line 92 in file ADC_INIT.s
Comment: PORTE_AMSEL used once
PORTE_DEN 4002451C

Symbol: PORTE_DEN
   Definitions
      At line 22 in file ADC_INIT.s
   Uses
      At line 87 in file ADC_INIT.s
Comment: PORTE_DEN used once
PORTE_PCTL 4002452C

Symbol: PORTE_PCTL
   Definitions
      At line 23 in file ADC_INIT.s
   Uses
      None
Comment: PORTE_PCTL unused
RCGCADC 400FE638

Symbol: RCGCADC
   Definitions
      At line 7 in file ADC_INIT.s
   Uses
      At line 63 in file ADC_INIT.s
Comment: RCGCADC used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 20 in file ADC_INIT.s
   Uses
      At line 70 in file ADC_INIT.s
Comment: RCGCGPIO used once
data 20004000

Symbol: data
   Definitions
      At line 26 in file ADC_INIT.s
   Uses
      None
Comment: data unused
27 symbols
379 symbols in table
