


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    6 00000000         ; ADC Registers
    7 00000000 400FE638 
                       RCGCADC EQU              0x400FE638  ; ADC clock registe
                                                            r
    8 00000000         ; ADC0 base address EQU 0x40038000
    9 00000000 40038000 
                       ADC0_ACTSS
                               EQU              0x40038000  ; Sample sequencer 
                                                            (ADC0 base address)
                                                            
   10 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
   11 00000000 40038008 
                       ADC0_IM EQU              0x40038008  ; Interrupt select
   12 00000000 40038034 
                       ADC0_ISC
                               EQU              0x40038034  ; Interrupt status 
                                                            and clear
   13 00000000 40038014 
                       ADC0_EMUX
                               EQU              0x40038014  ; Trigger select
   14 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
   15 00000000 400380A0 
                       ADC0_SSMUX3
                               EQU              0x400380A0  ; Input channel sel
                                                            ect
   16 00000000 400380A4 
                       ADC0_SSCTL3
                               EQU              0x400380A4  ; Sample sequence c
                                                            ontrol
   17 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                            
   18 00000000 40038FC4 
                       ADC0_PP EQU              0x40038FC4  ; Sample rate
   19 00000000 40038030 
                       ADC0_SAC
                               EQU              0x40038030  ; Sample rate
   20 00000000         ; GPIO Registers
   21 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   22 00000000         ; PORT E base address EQU 0x40024000
   23 00000000 4002451C 
                       PORTE_DEN
                               EQU              0x4002451C  ; Digital Enable
   24 00000000 4002452C 



ARM Macro Assembler    Page 2 


                       PORTE_PCTL
                               EQU              0x4002452C  ; Alternative funct
                                                            ion configuration
   25 00000000 40024420 
                       PORTE_AFSEL
                               EQU              0x40024420  ; Alternate functio
                                                            n select
   26 00000000 40024528 
                       PORTE_AMSEL
                               EQU              0x40024528  ; Enable analog
   27 00000000 20004000 
                       data    EQU              0x20004000
   28 00000000         
   29 00000000         
   30 00000000         ***************************
   31 00000000         ;ADC1 FOR SAMPLING AIN1
   32 00000000         ***********************
   33 00000000 40039000 
                       ADC1_ACTSS
                               EQU              0x40039000  ; Sample sequencer 
                                                            (ADC1 base address)
                                                            
   34 00000000 40039004 
                       ADC1_RIS
                               EQU              0x40039004  ; Interrupt status
   35 00000000 40039008 
                       ADC1_IM EQU              0x40039008  ; Interrupt select
   36 00000000 40039034 
                       ADC1_ISC
                               EQU              0x40039034  ; Interrupt status 
                                                            and clear
   37 00000000 40039014 
                       ADC1_EMUX
                               EQU              0x40039014  ; Trigger select
   38 00000000 40039028 
                       ADC1_PSSI
                               EQU              0x40039028  ; Initiate sample
   39 00000000 400390A0 
                       ADC1_SSMUX3
                               EQU              0x400390A0  ; Input channel sel
                                                            ect
   40 00000000 400390A4 
                       ADC1_SSCTL3
                               EQU              0x400390A4  ; Sample sequence c
                                                            ontrol
   41 00000000 400390A8 
                       ADC1_SSFIFO3
                               EQU              0x400390A8  ; Channel 3 results
                                                            
   42 00000000 40039FC4 
                       ADC1_PP EQU              0x40039FC4  ; Sample rate 
   43 00000000 40039030 
                       ADC1_SAC
                               EQU              0x40039030  ; Sample rate
   44 00000000         ; Start clocks for features to be used
   45 00000000         
   46 00000000         ;*******************************************************
                       ********
   47 00000000         ; INITIALIZE ADC FOR AIN0 AND AIN1 



ARM Macro Assembler    Page 3 


   48 00000000         ;  PE3 AND PE2 IS GOIN TO BE USED
   49 00000000         ;*******************************************************
                       ******** 
   50 00000000         ;*******************************************************
                       ********
   51 00000000         ; Program section           
   52 00000000         ;*******************************************************
                       ********
   53 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   54 00000000                 AREA             routines, READONLY, CODE
   55 00000000                 THUMB
   56 00000000                 EXPORT           ADC_INIT
   57 00000000         
   58 00000000         ;*******************************************************
                       ********
   59 00000000         ; ADC_INIT FUNCTION INITIALIZED ADC1 AND ADC0
   60 00000000         ;*******************************************************
                       ******** 
   61 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT    
   62 00000000         ADC_INIT
                               PROC
   63 00000000         
   64 00000000 B500            PUSH             {LR}
   65 00000002 496C            LDR              R1, =RCGCADC 
                                                            ; Turn on ADC clock
                                                            
   66 00000004 6808            LDR              R0, [R1]
   67 00000006 F040 0003       ORR              R0, R0, #0x03 ; set bit 0 to en
                                                            able ADC0 AND ADC1 
                                                            clock
   68 0000000A 6008            STR              R0, [R1]
   69 0000000C BF00            NOP
   70 0000000E BF00            NOP
   71 00000010 BF00            NOP                          ; Let clock stabili
                                                            ze
   72 00000012 4969            LDR              R1, =RCGCGPIO ; Turn on GPIO cl
                                                            ock
   73 00000014 6808            LDR              R0, [R1]
   74 00000016 F040 0010       ORR              R0, R0, #0x10 ; set bit 4 to en
                                                            able port E clock
   75 0000001A 6008            STR              R0, [R1]
   76 0000001C BF00            NOP
   77 0000001E BF00            NOP
   78 00000020 BF00            NOP                          ; Let clock stabili
                                                            ze
   79 00000022         ; Setup GPIO to make PE3 input for ADC0
   80 00000022         ; Enable alternate functions
   81 00000022 4966            LDR              R1, =PORTE_AFSEL
   82 00000024 6808            LDR              R0, [R1]
   83 00000026 F040 000C       ORR              R0, R0, #0x0C ; set bit 3 to en
                                                            able alt functions 
                                                            on PE3 AND SET BIT 
                                                            2 TO ENABLE PE2
   84 0000002A 6008            STR              R0, [R1]
   85 0000002C         ; PCTL does not have to be configured
   86 0000002C         ; since ADC0 is automatically selected when
   87 0000002C         ; port pin is set to analog. 
   88 0000002C         ; Disable digital on PE3
   89 0000002C 4964            LDR              R1, =PORTE_DEN



ARM Macro Assembler    Page 4 


   90 0000002E 6808            LDR              R0, [R1]
   91 00000030 F020 000C       BIC              R0, R0, #0x0C ; clear bit 3 to 
                                                            disable analog on P
                                                            E3 AND PE2
   92 00000034 6008            STR              R0, [R1]
   93 00000036         ; Enable analog on PE3
   94 00000036 4963            LDR              R1, =PORTE_AMSEL
   95 00000038 6808            LDR              R0, [R1]
   96 0000003A F040 000C       ORR              R0, R0, #0x0C ; set bit 3 to en
                                                            able analog on PE3
   97 0000003E 6008            STR              R0, [R1]
   98 00000040         ; Disable sequencer while ADC setup
   99 00000040         
  100 00000040         
  101 00000040         ;;;ENABLE ADC0 AND ADC PORTS 
  102 00000040         ;;ADC SETUPS WILL BE DONE 
  103 00000040         
  104 00000040         
  105 00000040 4961            LDR              R1, =ADC0_ACTSS
  106 00000042 6808            LDR              R0, [R1]
  107 00000044 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  108 00000048 6008            STR              R0, [R1]
  109 0000004A         ; Select trigger source
  110 0000004A 4960            LDR              R1, =ADC0_EMUX
  111 0000004C 6808            LDR              R0, [R1]
  112 0000004E F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select SOFTW
                                                            ARE trigger
  113 00000052 6008            STR              R0, [R1]
  114 00000054         ; Select input channel
  115 00000054 495E            LDR              R1, =ADC0_SSMUX3
  116 00000056 6808            LDR              R0, [R1]
  117 00000058         ;BIC R0, R0, #0x000F ; clear bits 3:0 to select AIN0
  118 00000058 F040 0002       ORR              R0, R0, #0x0002
  119 0000005C F020 000D       BIC              R0, R0, #0x000D
  120 00000060 6008            STR              R0, [R1]
  121 00000062         ; Config sample sequence
  122 00000062 495C            LDR              R1, =ADC0_SSCTL3
  123 00000064 6808            LDR              R0, [R1]
  124 00000066 F040 0006       ORR              R0, R0, #0x06 
                                                            ; set bit 1 (END0)
  125 0000006A 6008            STR              R0, [R1]
  126 0000006C         ; Set sample rate
  127 0000006C 495A            LDR              R1, =ADC0_PP
  128 0000006E 6808            LDR              R0, [R1]
  129 00000070 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125k sps
  130 00000074 6008            STR              R0, [R1]
  131 00000076         ; Done with setup, enable sequencer
  132 00000076 4954            LDR              R1, =ADC0_ACTSS
  133 00000078 6808            LDR              R0, [R1]
  134 0000007A F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  135 0000007E 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  136 00000080         
  137 00000080 4956            LDR              R1, =ADC0_SAC



ARM Macro Assembler    Page 5 


  138 00000082 6808            LDR              R0, [R1]
  139 00000084 F040 0002       ORR              R0, R0, #0x02 ; set bit 3 to en
                                                            able seq 3
  140 00000088 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  141 0000008A         
  142 0000008A         
  143 0000008A         ; ADC1 INITIALIZATION
  144 0000008A         
  145 0000008A 4955            LDR              R1, =ADC1_ACTSS
  146 0000008C 6808            LDR              R0, [R1]
  147 0000008E F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  148 00000092 6008            STR              R0, [R1]
  149 00000094         ; Select trigger source
  150 00000094 4953            LDR              R1, =ADC1_EMUX
  151 00000096 6808            LDR              R0, [R1]
  152 00000098 F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select SOFTW
                                                            ARE trigger
  153 0000009C 6008            STR              R0, [R1]
  154 0000009E         ; Select input channel
  155 0000009E 4952            LDR              R1, =ADC1_SSMUX3
  156 000000A0 6808            LDR              R0, [R1]
  157 000000A2 F040 0001       ORR              R0 , #0x1   ; 
  158 000000A6 F020 000E       BIC              R0, R0, #0x000E ; clear bits 3:
                                                            0 to select AIN1  0
                                                            0001
  159 000000AA 6008            STR              R0, [R1]
  160 000000AC         ; Config sample sequence
  161 000000AC 494F            LDR              R1, =ADC1_SSCTL3
  162 000000AE 6808            LDR              R0, [R1]
  163 000000B0 F040 0006       ORR              R0, R0, #0x06 
                                                            ; set bit 1 (END0)
  164 000000B4 6008            STR              R0, [R1]
  165 000000B6         ; Set sample rate
  166 000000B6 494E            LDR              R1, =ADC1_PP
  167 000000B8 6808            LDR              R0, [R1]
  168 000000BA F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125k sps
  169 000000BE 6008            STR              R0, [R1]
  170 000000C0         ; Done with setup, enable sequencer
  171 000000C0 4947            LDR              R1, =ADC1_ACTSS
  172 000000C2 6808            LDR              R0, [R1]
  173 000000C4 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  174 000000C8 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  175 000000CA         
  176 000000CA 494A            LDR              R1, =ADC1_SAC
  177 000000CC 6808            LDR              R0, [R1]
  178 000000CE F040 0002       ORR              R0, R0, #0x02 ; set bit 3 to en
                                                            able seq 3
  179 000000D2 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  180 000000D4 F85D EB04       POP              {LR}



ARM Macro Assembler    Page 6 


  181 000000D8 4770            BX               LR
  182 000000DA                 ENDP                         ;; END OF INITIALIZ
                                                            ATION
  183 000000DA         
  184 000000DA         
  185 000000DA         
  186 000000DA         ;*******************************************************
                       ********
  187 000000DA         ; ADC_READ_SHIP FUNCTION READS THE AIN0 AND AIN1 DATA 
  188 000000DA         ;   RETURNS YDATA XDATA IN R4 REGISTER
  189 000000DA         ;  COMPUTATION FOR SHIP PLACEMENT MADE IN THIS SUBMODULE
                       
  190 000000DA         ;*******************************************************
                       ******** 
  191 000000DA         ;LABEL  DIRECTIVE VALUE     COMMENT      
  192 000000DA         
  193 000000DA                 EXPORT           ADC_READ_SHIP
  194 000000DA         
  195 000000DA         ADC_READ_SHIP
                               PROC
  196 000000DA B500            PUSH             {LR}
  197 000000DC         *******************************
  198 000000DC         ; READ AIN0 FIRST 
  199 000000DC         ; PE3 CONTROLS X DATA
  200 000000DC         ; VERTICAL MOVEMENT
  201 000000DC         ; KEEPS DATA IN R5
  202 000000DC         *******************************
  203 000000DC         
  204 000000DC 4B46            LDR              R3, =ADC0_RIS 
                                                            ; interrupt address
                                                            
  205 000000DE 4C47            LDR              R4, =ADC0_SSFIFO3 
                                                            ; result address
  206 000000E0 4A47            LDR              R2, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
  207 000000E2 4E48            LDR              R6,= ADC0_ISC ; interrupt statu
                                                            s and clear
  208 000000E4         ; initiate sampling by enabling sequencer 3 in ADC0_PSSI
                       
  209 000000E4 6810    Smpl0   LDR              R0, [R2]
  210 000000E6 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  211 000000EA 6010            STR              R0, [R2]
  212 000000EC         ; check for sample complete (bit 3 of ADC0_RIS set)
  213 000000EC 6818    Cont0   LDR              R0, [R3]
  214 000000EE F010 0008       ANDS             R0, R0, #8  ;RIS bit
  215 000000F2 D0FB            BEQ              Cont0
  216 000000F4 6825            LDR              R5,[R4]     ; R5 KEEPS THE ADC0
                                                             READING
  217 000000F6 F04F 0008       MOV              R0, #8
  218 000000FA 4E42            LDR              R6,= ADC0_ISC
  219 000000FC 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  220 000000FE         *******************************
  221 000000FE         ; READ AIN1 
  222 000000FE         ; PE2 CONTROLS Y DATA
  223 000000FE         ; HORIZONTAL MOVEMENT
  224 000000FE         ; KEEPS DATA IN R1
  225 000000FE         *******************************



ARM Macro Assembler    Page 7 


  226 000000FE         
  227 000000FE         ADC1_READ
  228 000000FE 4B42            LDR              R3, =ADC1_RIS 
                                                            ; interrupt address
                                                            
  229 00000100 4C42            LDR              R4, =ADC1_SSFIFO3 
                                                            ; result address
  230 00000102 4A43            LDR              R2, =ADC1_PSSI ; sample sequenc
                                                            e initiate address
  231 00000104 4E43            LDR              R6,= ADC1_ISC ; interrupt statu
                                                            s and clear
  232 00000106         
  233 00000106 6810    Smpl1   LDR              R0, [R2]
  234 00000108 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  235 0000010C 6010            STR              R0, [R2]
  236 0000010E         ; check for sample complete (bit 3 of ADC0_RIS set)
  237 0000010E 6818    Cont1   LDR              R0, [R3]
  238 00000110 F010 0008       ANDS             R0, R0, #8  ;RIS bit
  239 00000114 D0FB            BEQ              Cont1
  240 00000116 6821            LDR              R1,[R4]     ; R1 KEEPS THE ADC1
                                                             READING
  241 00000118 F04F 0008       MOV              R0, #8
  242 0000011C 4E3D            LDR              R6,= ADC1_ISC
  243 0000011E 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  244 00000120         
  245 00000120         ****************
  246 00000120         ; R1 KEEPS AIN1 READING
  247 00000120         ; R5 KEEPS AIN0 READING
  248 00000120         ; XDATA AND YDATA TRANSFORMS TO THE PIXEL VALUE
  249 00000120         ; R4 KEEPS [YDATA, XDATA] 
  250 00000120         ; LEAST SIGNIFICANT 4 BITS SHOWS X DATA
  251 00000120         ; BITS FROM 3-7 SHOWS YDATA
  252 00000120         
  253 00000120         **********
  254 00000120         
  255 00000120         COMPUTE
  256 00000120         
  257 00000120 F04F 0349       LDR              R3, =73     ; R3 IS THE DIVISOR
                                                            
  258 00000124 FBB5 F5F3       UDIV             R5, R5, R3  ; 
  259 00000128 F105 0506       ADD              R5, #6      ; R5 KEEPS THE X
  260 0000012C         
  261 0000012C F04F 03AA       LDR              R3, =170    ;
  262 00000130 FBB1 F1F3       UDIV             R1, R1, R3  ;
  263 00000134 F101 0108       ADD              R1, #8      ;  ; R1 KEEPS THE Y
                                                             DATA
  264 00000138         
  265 00000138         
  266 00000138 EA4F 2101       LSL              R1,R1,#8    ; SHIFT Y DATA
  267 0000013C EB01 0405       ADD              R4, R1, R5  ; ADD XDATA YDATA 
  268 00000140         ; R4 IS IN FROM [YDATA, XDATA]
  269 00000140         
  270 00000140         
  271 00000140         
  272 00000140 F85D EB04       POP{LR}                      ; END OF THE OPERAT
                                                            ION
  273 00000144 4770            BX               LR



ARM Macro Assembler    Page 8 


  274 00000146         
  275 00000146                 ENDP                         ; RETURN R4 
  276 00000146         
  277 00000146         
  278 00000146         
  279 00000146         
  280 00000146         
  281 00000146         ;*******************************************************
                       ********
  282 00000146         ; ADC_READ_CURSOR FUNCTION READS THE AIN0 AND AIN1 DATA 
                       
  283 00000146         ;   RETURNS YDATA XDATA IN R4 REGISTER
  284 00000146         ;  COMPUTATION FOR CURSOR PLACEMENT MADE IN THIS SUBMODU
                       LE
  285 00000146         ;*******************************************************
                       ******** 
  286 00000146         ;LABEL  DIRECTIVE VALUE     COMMENT      
  287 00000146         
  288 00000146                 EXPORT           ADC_READ_CURSOR
  289 00000146         
  290 00000146         ADC_READ_CURSOR
                               PROC
  291 00000146 B500            PUSH             {LR}
  292 00000148 4B2B            LDR              R3, =ADC0_RIS 
                                                            ; interrupt address
                                                            
  293 0000014A 4C2C            LDR              R4, =ADC0_SSFIFO3 
                                                            ; result address
  294 0000014C 4A2C            LDR              R2, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
  295 0000014E 4E2D            LDR              R6,= ADC0_ISC ; interrupt statu
                                                            s and clear
  296 00000150         ; initiate sampling by enabling sequencer 3 in ADC0_PSSI
                       
  297 00000150 6810    Smpl0_CURSOR
                               LDR              R0, [R2]
  298 00000152 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  299 00000156 6010            STR              R0, [R2]
  300 00000158         ; check for sample complete (bit 3 of ADC0_RIS set)
  301 00000158 6818    Cont0_CURSOR
                               LDR              R0, [R3]
  302 0000015A F010 0008       ANDS             R0, R0, #8  ;RIS bit
  303 0000015E D0C5            BEQ              Cont0
  304 00000160 6825            LDR              R5,[R4]     ; R5 KEEPS THE ADC0
                                                             READING
  305 00000162 F04F 0008       MOV              R0, #8
  306 00000166 4E27            LDR              R6,= ADC0_ISC
  307 00000168 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  308 0000016A         
  309 0000016A         
  310 0000016A         ADC1_READ_CURSOR
  311 0000016A 4B27            LDR              R3, =ADC1_RIS 
                                                            ; interrupt address
                                                            
  312 0000016C 4C27            LDR              R4, =ADC1_SSFIFO3 
                                                            ; result address
  313 0000016E 4A28            LDR              R2, =ADC1_PSSI ; sample sequenc



ARM Macro Assembler    Page 9 


                                                            e initiate address
  314 00000170 4E28            LDR              R6,= ADC1_ISC ; interrupt statu
                                                            s and clear
  315 00000172         
  316 00000172 6810    Smpl1_CURSOR
                               LDR              R0, [R2]
  317 00000174 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  318 00000178 6010            STR              R0, [R2]
  319 0000017A         ; check for sample complete (bit 3 of ADC0_RIS set)
  320 0000017A 6818    Cont1_CURSOR
                               LDR              R0, [R3]
  321 0000017C F010 0008       ANDS             R0, R0, #8  ;RIS bit
  322 00000180 D0C5            BEQ              Cont1
  323 00000182 6821            LDR              R1,[R4]     ; R1 KEEPS THE ADC1
                                                             READING
  324 00000184 F04F 0008       MOV              R0, #8
  325 00000188 4E22            LDR              R6,= ADC1_ISC
  326 0000018A 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  327 0000018C         
  328 0000018C         ****************
  329 0000018C         ; R1 KEEPS ADC1 READING
  330 0000018C         ; R5 KEEPS ADC0 READING
  331 0000018C         
  332 0000018C         **********
  333 0000018C         
  334 0000018C         COMPUTE_CURSOR
  335 0000018C         
  336 0000018C F04F 0343       LDR              R3, =67     ; R3 IS THE DIVISOR
                                                            
  337 00000190 FBB5 F5F3       UDIV             R5, R5, R3  ; 
  338 00000194 F105 0507       ADD              R5, #7      ; R5 KEEPS THE X
  339 00000198         
  340 00000198 F04F 0389       LDR              R3, =137    ;
  341 0000019C FBB1 F1F3       UDIV             R1, R1, R3  ;
  342 000001A0 F101 0109       ADD              R1, #9      ;  ; R1 KEEPS THE Y
                                                             DATA
  343 000001A4         
  344 000001A4         
  345 000001A4 EA4F 2101       LSL              R1,R1,#8    ; SHIFT Y DATA
  346 000001A8 EB01 0405       ADD              R4, R1, R5  ; ADD XDATA YDATA 
  347 000001AC         ; R4 IS IN FROM [YDATA, XDATA]
  348 000001AC         
  349 000001AC F85D EB04       POP{LR}                      ; RETURN R4 DATA 
  350 000001B0 4770            BX               LR
  351 000001B2         
  352 000001B2                 ENDP
  353 000001B2         
  354 000001B2 00 00           ALIGN
  355 000001B4                 END
              400FE638 
              400FE608 
              40024420 
              4002451C 
              40024528 
              40038000 
              40038014 
              400380A0 



ARM Macro Assembler    Page 10 


              400380A4 
              40038FC4 
              40038030 
              40039000 
              40039014 
              400390A0 
              400390A4 
              40039FC4 
              40039030 
              40038004 
              400380A8 
              40038028 
              40038034 
              40039004 
              400390A8 
              40039028 
              40039034 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\adc_init.d -o.\objects\adc_init.o -I.\RTE\_Target_1 -
IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\AR
M\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA
 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\adc_init.lst ADC_INIT
.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC1_READ 000000FE

Symbol: ADC1_READ
   Definitions
      At line 227 in file ADC_INIT.s
   Uses
      None
Comment: ADC1_READ unused
ADC1_READ_CURSOR 0000016A

Symbol: ADC1_READ_CURSOR
   Definitions
      At line 310 in file ADC_INIT.s
   Uses
      None
Comment: ADC1_READ_CURSOR unused
ADC_INIT 00000000

Symbol: ADC_INIT
   Definitions
      At line 62 in file ADC_INIT.s
   Uses
      At line 56 in file ADC_INIT.s
Comment: ADC_INIT used once
ADC_READ_CURSOR 00000146

Symbol: ADC_READ_CURSOR
   Definitions
      At line 290 in file ADC_INIT.s
   Uses
      At line 288 in file ADC_INIT.s
Comment: ADC_READ_CURSOR used once
ADC_READ_SHIP 000000DA

Symbol: ADC_READ_SHIP
   Definitions
      At line 195 in file ADC_INIT.s
   Uses
      At line 193 in file ADC_INIT.s
Comment: ADC_READ_SHIP used once
COMPUTE 00000120

Symbol: COMPUTE
   Definitions
      At line 255 in file ADC_INIT.s
   Uses
      None
Comment: COMPUTE unused
COMPUTE_CURSOR 0000018C

Symbol: COMPUTE_CURSOR
   Definitions
      At line 334 in file ADC_INIT.s
   Uses
      None
Comment: COMPUTE_CURSOR unused
Cont0 000000EC

Symbol: Cont0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 213 in file ADC_INIT.s
   Uses
      At line 215 in file ADC_INIT.s
      At line 303 in file ADC_INIT.s

Cont0_CURSOR 00000158

Symbol: Cont0_CURSOR
   Definitions
      At line 301 in file ADC_INIT.s
   Uses
      None
Comment: Cont0_CURSOR unused
Cont1 0000010E

Symbol: Cont1
   Definitions
      At line 237 in file ADC_INIT.s
   Uses
      At line 239 in file ADC_INIT.s
      At line 322 in file ADC_INIT.s

Cont1_CURSOR 0000017A

Symbol: Cont1_CURSOR
   Definitions
      At line 320 in file ADC_INIT.s
   Uses
      None
Comment: Cont1_CURSOR unused
Smpl0 000000E4

Symbol: Smpl0
   Definitions
      At line 209 in file ADC_INIT.s
   Uses
      None
Comment: Smpl0 unused
Smpl0_CURSOR 00000150

Symbol: Smpl0_CURSOR
   Definitions
      At line 297 in file ADC_INIT.s
   Uses
      None
Comment: Smpl0_CURSOR unused
Smpl1 00000106

Symbol: Smpl1
   Definitions
      At line 233 in file ADC_INIT.s
   Uses
      None
Comment: Smpl1 unused
Smpl1_CURSOR 00000172

Symbol: Smpl1_CURSOR
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 316 in file ADC_INIT.s
   Uses
      None
Comment: Smpl1_CURSOR unused
routines 00000000

Symbol: routines
   Definitions
      At line 54 in file ADC_INIT.s
   Uses
      None
Comment: routines unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ACTSS 40038000

Symbol: ADC0_ACTSS
   Definitions
      At line 9 in file ADC_INIT.s
   Uses
      At line 105 in file ADC_INIT.s
      At line 132 in file ADC_INIT.s

ADC0_EMUX 40038014

Symbol: ADC0_EMUX
   Definitions
      At line 13 in file ADC_INIT.s
   Uses
      At line 110 in file ADC_INIT.s
Comment: ADC0_EMUX used once
ADC0_IM 40038008

Symbol: ADC0_IM
   Definitions
      At line 11 in file ADC_INIT.s
   Uses
      None
Comment: ADC0_IM unused
ADC0_ISC 40038034

Symbol: ADC0_ISC
   Definitions
      At line 12 in file ADC_INIT.s
   Uses
      At line 207 in file ADC_INIT.s
      At line 218 in file ADC_INIT.s
      At line 295 in file ADC_INIT.s
      At line 306 in file ADC_INIT.s

ADC0_PP 40038FC4

Symbol: ADC0_PP
   Definitions
      At line 18 in file ADC_INIT.s
   Uses
      At line 127 in file ADC_INIT.s
Comment: ADC0_PP used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 14 in file ADC_INIT.s
   Uses
      At line 206 in file ADC_INIT.s
      At line 294 in file ADC_INIT.s

ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 10 in file ADC_INIT.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 204 in file ADC_INIT.s
      At line 292 in file ADC_INIT.s

ADC0_SAC 40038030

Symbol: ADC0_SAC
   Definitions
      At line 19 in file ADC_INIT.s
   Uses
      At line 137 in file ADC_INIT.s
Comment: ADC0_SAC used once
ADC0_SSCTL3 400380A4

Symbol: ADC0_SSCTL3
   Definitions
      At line 16 in file ADC_INIT.s
   Uses
      At line 122 in file ADC_INIT.s
Comment: ADC0_SSCTL3 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 17 in file ADC_INIT.s
   Uses
      At line 205 in file ADC_INIT.s
      At line 293 in file ADC_INIT.s

ADC0_SSMUX3 400380A0

Symbol: ADC0_SSMUX3
   Definitions
      At line 15 in file ADC_INIT.s
   Uses
      At line 115 in file ADC_INIT.s
Comment: ADC0_SSMUX3 used once
ADC1_ACTSS 40039000

Symbol: ADC1_ACTSS
   Definitions
      At line 33 in file ADC_INIT.s
   Uses
      At line 145 in file ADC_INIT.s
      At line 171 in file ADC_INIT.s

ADC1_EMUX 40039014

Symbol: ADC1_EMUX
   Definitions
      At line 37 in file ADC_INIT.s
   Uses
      At line 150 in file ADC_INIT.s
Comment: ADC1_EMUX used once
ADC1_IM 40039008

Symbol: ADC1_IM
   Definitions
      At line 35 in file ADC_INIT.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: ADC1_IM unused
ADC1_ISC 40039034

Symbol: ADC1_ISC
   Definitions
      At line 36 in file ADC_INIT.s
   Uses
      At line 231 in file ADC_INIT.s
      At line 242 in file ADC_INIT.s
      At line 314 in file ADC_INIT.s
      At line 325 in file ADC_INIT.s

ADC1_PP 40039FC4

Symbol: ADC1_PP
   Definitions
      At line 42 in file ADC_INIT.s
   Uses
      At line 166 in file ADC_INIT.s
Comment: ADC1_PP used once
ADC1_PSSI 40039028

Symbol: ADC1_PSSI
   Definitions
      At line 38 in file ADC_INIT.s
   Uses
      At line 230 in file ADC_INIT.s
      At line 313 in file ADC_INIT.s

ADC1_RIS 40039004

Symbol: ADC1_RIS
   Definitions
      At line 34 in file ADC_INIT.s
   Uses
      At line 228 in file ADC_INIT.s
      At line 311 in file ADC_INIT.s

ADC1_SAC 40039030

Symbol: ADC1_SAC
   Definitions
      At line 43 in file ADC_INIT.s
   Uses
      At line 176 in file ADC_INIT.s
Comment: ADC1_SAC used once
ADC1_SSCTL3 400390A4

Symbol: ADC1_SSCTL3
   Definitions
      At line 40 in file ADC_INIT.s
   Uses
      At line 161 in file ADC_INIT.s
Comment: ADC1_SSCTL3 used once
ADC1_SSFIFO3 400390A8

Symbol: ADC1_SSFIFO3
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 41 in file ADC_INIT.s
   Uses
      At line 229 in file ADC_INIT.s
      At line 312 in file ADC_INIT.s

ADC1_SSMUX3 400390A0

Symbol: ADC1_SSMUX3
   Definitions
      At line 39 in file ADC_INIT.s
   Uses
      At line 155 in file ADC_INIT.s
Comment: ADC1_SSMUX3 used once
PORTE_AFSEL 40024420

Symbol: PORTE_AFSEL
   Definitions
      At line 25 in file ADC_INIT.s
   Uses
      At line 81 in file ADC_INIT.s
Comment: PORTE_AFSEL used once
PORTE_AMSEL 40024528

Symbol: PORTE_AMSEL
   Definitions
      At line 26 in file ADC_INIT.s
   Uses
      At line 94 in file ADC_INIT.s
Comment: PORTE_AMSEL used once
PORTE_DEN 4002451C

Symbol: PORTE_DEN
   Definitions
      At line 23 in file ADC_INIT.s
   Uses
      At line 89 in file ADC_INIT.s
Comment: PORTE_DEN used once
PORTE_PCTL 4002452C

Symbol: PORTE_PCTL
   Definitions
      At line 24 in file ADC_INIT.s
   Uses
      None
Comment: PORTE_PCTL unused
RCGCADC 400FE638

Symbol: RCGCADC
   Definitions
      At line 7 in file ADC_INIT.s
   Uses
      At line 65 in file ADC_INIT.s
Comment: RCGCADC used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 21 in file ADC_INIT.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 72 in file ADC_INIT.s
Comment: RCGCGPIO used once
data 20004000

Symbol: data
   Definitions
      At line 27 in file ADC_INIT.s
   Uses
      None
Comment: data unused
29 symbols
381 symbols in table
