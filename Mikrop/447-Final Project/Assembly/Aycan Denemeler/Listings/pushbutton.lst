


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    6 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
    7 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
    8 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
    9 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   10 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   11 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   12 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   13 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   14 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   15 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   16 00000000 00000002 
                       RED     EQU              0x02
   17 00000000 00000004 
                       BLUE    EQU              0x04
   18 00000000 00000008 
                       GREEN   EQU              0x08
   19 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   20 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   21 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   22 00000000         
   23 00000000 20001100 
                       SHIP1   EQU              0x20001100
   24 00000000 20001110 



ARM Macro Assembler    Page 2 


                       SHIP2   EQU              0x20001110
   25 00000000 20001120 
                       SHIP3   EQU              0x20001120
   26 00000000 20001130 
                       SHIP4   EQU              0x20001130
   27 00000000         
   28 00000000 20001150 
                       CURSOR1 EQU              0x20001150
   29 00000000 20001160 
                       CURSOR2 EQU              0x20001160
   30 00000000 20001170 
                       CURSOR3 EQU              0x20001170
   31 00000000 20001180 
                       CURSOR4 EQU              0x20001180
   32 00000000         
   33 00000000         
   34 00000000         
   35 00000000         ;*******************************************************
                       ********
   36 00000000         ; Directives - This Data Section is part of the code
   37 00000000         ; It is in the read only section  so values cannot be ch
                       anged.
   38 00000000         ;*******************************************************
                       ******** 
   39 00000000         
   40 00000000         ;*******************************************************
                       ********
   41 00000000         ; Program section           
   42 00000000         ;*******************************************************
                       ********
   43 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   44 00000000                 AREA             routines,READONLY,CODE
   45 00000000                 THUMB
   46 00000000                 ALIGN
   47 00000000                 EXTERN           WINNER
   48 00000000                 EXTERN           LOSER
   49 00000000         
   50 00000000         ; EXTERN SHIP_CURSOR
   51 00000000         ;*******************************************************
                       ********
   52 00000000         ; PORTF INITIALIZATION
   53 00000000         ; INITIALIZE PF0 AND PF4 FOR PUSH BUTTONS ON THE BOARD
   54 00000000         ;*******************************************************
                       ******** 
   55 00000000                 EXPORT           PORTF_INIT
   56 00000000         PORTF_INIT
                               PROC
   57 00000000 B500            PUSH             {LR}
   58 00000002 4943            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
   59 00000004 6808            LDR              R0, [R1]
   60 00000006 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
   61 0000000A 6008            STR              R0, [R1]
   62 0000000C BF00            NOP
   63 0000000E BF00            NOP                          ; allow time for cl
                                                            ock to finish
   64 00000010 4940            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl



ARM Macro Assembler    Page 3 


                                                            ock the lock regist
                                                            er
   65 00000012 4841            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
   66 00000014 6008            STR              R0, [R1]
   67 00000016 4941            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
   68 00000018 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
   69 0000001C 6008            STR              R0, [R1]
   70 0000001E 4940            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
   71 00000020 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
   72 00000024 6008            STR              R0, [R1]
   73 00000026 493F            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
   74 00000028 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
   75 0000002C 6008            STR              R0, [R1]
   76 0000002E 493E            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
   77 00000030 F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
   78 00000034 6008            STR              R0, [R1]
   79 00000036 493D            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
   80 00000038 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
   81 0000003C 6008            STR              R0, [R1]
   82 0000003E 493C            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
   83 00000040 F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
   84 00000044 6008            STR              R0, [R1]
   85 00000046 493B            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
   86 00000048 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
   87 0000004C 6008            STR              R0, [R1]
   88 0000004E F85D EB04       POP{LR}
   89 00000052 4770            BX               LR
   90 00000054                 ENDP
   91 00000054         
   92 00000054         ;------------delay------------
   93 00000054         ; Delay function for testing, which delays about 3*count
                        cycles.
   94 00000054         ; Input: R0  count
   95 00000054         ; Output: none
   96 00000054 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock



ARM Macro Assembler    Page 4 


   97 00000054 00145855 
                       QUARTERSEC
                               EQU              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
   98 00000054 001046AA 
                       FIFTHSEC
                               EQU              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
   99 00000054 00082355 
                       TENTHSEC
                               EQU              533333
  100 00000054                 EXPORT           delay
  101 00000054         delay   PROC
  102 00000054         ;PUSH {LR}
  103 00000054 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  104 00000056 D1FE            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
  105 00000058         ; POP{LR}
  106 00000058 4770            BX               LR          ; return
  107 0000005A                 ENDP
  108 0000005A         
  109 0000005A         
  110 0000005A         ;------------PortF_Input------------
  111 0000005A         ; Read and return the status of the switches.
  112 0000005A         ; R0 keeps the data according to push buttons
  113 0000005A                 EXPORT           PortF_Input
  114 0000005A         PortF_Input
                               PROC
  115 0000005A B500            PUSH             {LR}
  116 0000005C 4936            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  117 0000005E 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  118 00000060 F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  119 00000064 F85D EB04       POP              {LR}
  120 00000068 4770            BX               LR          ; return R0 with in
                                                            puts      GPIO PORT
                                                            F DATA KEEPS THE PU
                                                            SH BUTTON OPTIONS
  121 0000006A                 ENDP
  122 0000006A         
  123 0000006A         
  124 0000006A         
  125 0000006A         ;*******************************************************
                       ********
  126 0000006A         ; THIS IS THE LOOP TO CHECK WHETHER THE PUSH BUTTON IS P
                       RESSED OR NOT
  127 0000006A         ;  POLLING OPERATION
  128 0000006A         ;   BRANCHS TO VISUALIZING SHIP SUBROUTINE
  129 0000006A         ; BRANCHS TO ADC MODULES TO GET THE LOCATION
  130 0000006A         ;*******************************************************
                       ******** 
  131 0000006A                 EXTERN           ADC_READ_SHIP ; INCLUDE ADC REA
                                                            DING MODULES
  132 0000006A                 EXTERN           ADC_READ_CURSOR



ARM Macro Assembler    Page 5 


  133 0000006A         ; EXTERN delay
  134 0000006A         ; EXTERN PortF_Input
  135 0000006A                 EXTERN           ADDRESS_CHANGE
  136 0000006A                 EXTERN           SHIP_CURSOR
  137 0000006A                 EXTERN           PLAYER2
  138 0000006A                 EXPORT           PUSHBUTTON
  139 0000006A         ;LABEL  DIRECTIVE VALUE     COMMENT
  140 0000006A         
  141 0000006A         PUSHBUTTON
                               PROC
  142 0000006A B500            PUSH             {LR}
  143 0000006C         loop
  144 0000006C         
  145 0000006C 4833            LDR              R0, =TENTHSEC ; R0 = FIFTHSEC (
                                                            delay 0.2 second) 0
                                                            .1 DELAY
  146 0000006E F7FF FFFE       BL               delay       ; delay at least (3
                                                            *R0) cycles
  147 00000072         
  148 00000072 F7FF FFFE       BL               ADC_READ_SHIP ;;; READ SHIP LOC
                                                            ATION 
  149 00000076 F7FF FFFE       BL               PortF_Input ; read all of the s
                                                            witches on Port F
  150 0000007A         
  151 0000007A 2800            CMP              R0, #0      ;  
  152 0000007C D03A            BEQ              CONT
  153 0000007E         
  154 0000007E 2803            CMP              R0, #3      ;
  155 00000080 D038            BEQ              CONT
  156 00000082         
  157 00000082         ;; IF R0 EITHER 01 OR 10 MEANS CIVILIAN OR BATTLESHIP 
  158 00000082         
  159 00000082         ;01 CIVILIAN
  160 00000082         ;10 BATLLESHIP
  161 00000082         
  162 00000082         
  163 00000082         
  164 00000082         
  165 00000082 EA4F 6000       LSL              R0,R0, #24  ; ;; SHIFT 24 TIMES
                                                            
  166 00000086 4404            ADD              R4, R4, R0  ;  R4 KEEPS STATUS 
                                                            OF PUSHBUTTONS AND 
                                                            XY DATA
  167 00000088         
  168 00000088         
  169 00000088 EA4F 6010       LSR              R0, #24     ; SHIFT RIGHT AGAIN
                                                            
  170 0000008C         ;;; CHECK STATUS FOR MAPPING CONDITION
  171 0000008C         ;;;;; CHECK IF THE SHIP HAS A COLLISION WITH PREVIOUSLY 
                       DEPLOYED SHIP
  172 0000008C 2800            CMP              R0, #0      ;  
  173 0000008E D031            BEQ              CONT        ;NO DEPLOYMENT 
  174 00000090 2803            CMP              R0, #3      ;
  175 00000092 D02F            BEQ              CONT        ; NO DEPLOYMENT
  176 00000094         ;; IF R0 EITHER 01 OR 10 MEANS CIVILIAN OR BATTLESHIP 
  177 00000094         
  178 00000094         ;01 CIVILIAN
  179 00000094         ;10 BATLLESHIP
  180 00000094         



ARM Macro Assembler    Page 6 


  181 00000094 482A            LDR              R0, =SHIP1
  182 00000096         
  183 00000096         nextlocation
  184 00000096         
  185 00000096 6801            LDR              R1, [R0]    ; R0 KEEPS THE SHIP
                                                             1 VALUE ADDRESS
  186 00000098         ; R1 KEEPS THE SHIP1 LOCATIONDATA
  187 00000098 2900            CMP              R1, #0      ; IF EMPTY BLOCK 
  188 0000009A D02A            BEQ              MAPPING
  189 0000009C F000 05F0       AND              R5,R0, #0xF0 ;   AND IT R5 SHOW
                                                            S THE 2ND DIGIT 
  190 000000A0 2D30            CMP              R5, #0x30   ; last ship locatio
                                                            n ss full so 4 ship
                                                            s demployed
  191 000000A2 D02A            BEQ              FINISH      ; end this push but
                                                            ton loop  4 SHIPS D
                                                            EPLOYED
  192 000000A4         
  193 000000A4 F001 020F       AND              R2, R1, #0x0F ;; R2 SHOWS XDATA
                                                             OFF NEW SHIP
  194 000000A8 F004 030F       AND              R3, R4, #0x0F ; R3 SHOWS THE SH
                                                            IP1S X DATA
  195 000000AC 4293            CMP              R3, R2
  196 000000AE DC01            BGT              GREATER
  197 000000B0 DB05            BLT              LESSTHAN
  198 000000B2 D01F            BEQ              CONT        ; IF EQUAL SKIP THE
                                                             MAPPING
  199 000000B4         
  200 000000B4 EBA3 0302 
                       GREATER SUB              R3, R2
  201 000000B8 2B08            CMP              R3, #8
  202 000000BA DD1B            BLE              CONT        ;; COLLISION CONDIT
                                                            ON SKIP MAPPING
  203 000000BC DC04            BGT              YDATACHECK  ; NO X COLLISION CH
                                                            ECK Y COLIISON 
  204 000000BE EBA2 0303 
                       LESSTHAN
                               SUB              R3,R2, R3
  205 000000C2 2B08            CMP              R3, #8
  206 000000C4 DD16            BLE              CONT        ;; THERE IS COLLISI
                                                            ON CONDITON SKIP MA
                                                            PPING
  207 000000C6 DCFF            BGT              YDATACHECK
  208 000000C8         
  209 000000C8         ;; XDATA CHECK DOES NOT SHOW ANY COLLISON MOCE TO THE YD
                       ATA CHECK
  210 000000C8 F001 02F0 
                       YDATACHECK
                               AND              R2, R1, #0xF0 ;; R2 SHOWS YDATA
                                                             OFF NEW SHIP
  211 000000CC F004 03F0       AND              R3, R4, #0xF0 ; R3 SHOWS THE SH
                                                            IP1S Y DATA
  212 000000D0 4293            CMP              R3, R2
  213 000000D2 DC01            BGT              GREATER_Y
  214 000000D4 DB05            BLT              LESSTHAN_Y
  215 000000D6 D00D            BEQ              CONT        ; IF EQUAL SKIP THE
                                                             MAPPING
  216 000000D8         
  217 000000D8 EBA3 0302 



ARM Macro Assembler    Page 7 


                       GREATER_Y
                               SUB              R3, R2
  218 000000DC 2B08            CMP              R3, #8
  219 000000DE DD09            BLE              CONT        ;; COLLISION CONDIT
                                                            ON SKIP MAPPING
  220 000000E0 DC04            BGT              NEXT
  221 000000E2 EBA2 0303 
                       LESSTHAN_Y
                               SUB              R3,R2, R3
  222 000000E6 2B08            CMP              R3, #8
  223 000000E8 DD04            BLE              CONT        ;; COLLISION CONDIT
                                                            ON SKIP MAPPING
  224 000000EA DCFF            BGT              NEXT
  225 000000EC         
  226 000000EC         
  227 000000EC F100 0010 
                       NEXT    ADD              R0, #0x10
  228 000000F0 E7D1            B                nextlocation
  229 000000F2         
  230 000000F2 6004    MAPPING STR              R4, [R0]
  231 000000F4         
  232 000000F4         
  233 000000F4         
  234 000000F4         
  235 000000F4 F7FF FFFE 
                       CONT    BL               SHIP_CURSOR
  236 000000F8         
  237 000000F8         
  238 000000F8 E7B8            B                loop
  239 000000FA         
  240 000000FA         
  241 000000FA         
  242 000000FA F7FF FFFE 
                       FINISH  BL               PortF_Input ; read all of the s
                                                            witches on Port F
  243 000000FE 2800            CMP              R0, #0      ;  
  244 00000100 D0FB            BEQ              FINISH
  245 00000102         
  246 00000102 2803            CMP              R0, #3      ;
  247 00000104 D0F9            BEQ              FINISH
  248 00000106         
  249 00000106         
  250 00000106         ; CLEAR SCREEN IF A BUTTON PRESSED
  251 00000106         
  252 00000106 F7FF FFFE       BL               PLAYER2
  253 0000010A         ;; SHOW SHIPS CHECK TUS CONDITION 
  254 0000010A F85D EB04       POP{LR}                      ; EXIT THE SUBMODUL
                                                            E IF THERE ARE 4 SH
                                                            IPS
  255 0000010E 4770            BX               LR
  256 00000110                 ENDP
  257 00000110         
  258 00000110         
  259 00000110         
  260 00000110                 ALIGN                        ; 
  261 00000110                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 



ARM Macro Assembler    Page 8 


              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
              00082355 
              20001100 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\pushbutton.d -o.\objects\pushbutton.o -I.\RTE\_Target
_1 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v
5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION 
SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\pushbutton.lst PU
SHBUTTON.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONT 000000F4

Symbol: CONT
   Definitions
      At line 235 in file PUSHBUTTON.s
   Uses
      At line 152 in file PUSHBUTTON.s
      At line 155 in file PUSHBUTTON.s
      At line 173 in file PUSHBUTTON.s
      At line 175 in file PUSHBUTTON.s
      At line 198 in file PUSHBUTTON.s
      At line 202 in file PUSHBUTTON.s
      At line 206 in file PUSHBUTTON.s
      At line 215 in file PUSHBUTTON.s
      At line 219 in file PUSHBUTTON.s
      At line 223 in file PUSHBUTTON.s

FINISH 000000FA

Symbol: FINISH
   Definitions
      At line 242 in file PUSHBUTTON.s
   Uses
      At line 191 in file PUSHBUTTON.s
      At line 244 in file PUSHBUTTON.s
      At line 247 in file PUSHBUTTON.s

GREATER 000000B4

Symbol: GREATER
   Definitions
      At line 200 in file PUSHBUTTON.s
   Uses
      At line 196 in file PUSHBUTTON.s
Comment: GREATER used once
GREATER_Y 000000D8

Symbol: GREATER_Y
   Definitions
      At line 217 in file PUSHBUTTON.s
   Uses
      At line 213 in file PUSHBUTTON.s
Comment: GREATER_Y used once
LESSTHAN 000000BE

Symbol: LESSTHAN
   Definitions
      At line 204 in file PUSHBUTTON.s
   Uses
      At line 197 in file PUSHBUTTON.s
Comment: LESSTHAN used once
LESSTHAN_Y 000000E2

Symbol: LESSTHAN_Y
   Definitions
      At line 221 in file PUSHBUTTON.s
   Uses
      At line 214 in file PUSHBUTTON.s
Comment: LESSTHAN_Y used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

MAPPING 000000F2

Symbol: MAPPING
   Definitions
      At line 230 in file PUSHBUTTON.s
   Uses
      At line 188 in file PUSHBUTTON.s
Comment: MAPPING used once
NEXT 000000EC

Symbol: NEXT
   Definitions
      At line 227 in file PUSHBUTTON.s
   Uses
      At line 220 in file PUSHBUTTON.s
      At line 224 in file PUSHBUTTON.s

PORTF_INIT 00000000

Symbol: PORTF_INIT
   Definitions
      At line 56 in file PUSHBUTTON.s
   Uses
      At line 55 in file PUSHBUTTON.s
Comment: PORTF_INIT used once
PUSHBUTTON 0000006A

Symbol: PUSHBUTTON
   Definitions
      At line 141 in file PUSHBUTTON.s
   Uses
      At line 138 in file PUSHBUTTON.s
Comment: PUSHBUTTON used once
PortF_Input 0000005A

Symbol: PortF_Input
   Definitions
      At line 114 in file PUSHBUTTON.s
   Uses
      At line 113 in file PUSHBUTTON.s
      At line 149 in file PUSHBUTTON.s
      At line 242 in file PUSHBUTTON.s

YDATACHECK 000000C8

Symbol: YDATACHECK
   Definitions
      At line 210 in file PUSHBUTTON.s
   Uses
      At line 203 in file PUSHBUTTON.s
      At line 207 in file PUSHBUTTON.s

delay 00000054

Symbol: delay
   Definitions
      At line 101 in file PUSHBUTTON.s
   Uses
      At line 100 in file PUSHBUTTON.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 104 in file PUSHBUTTON.s
      At line 146 in file PUSHBUTTON.s

loop 0000006C

Symbol: loop
   Definitions
      At line 143 in file PUSHBUTTON.s
   Uses
      At line 238 in file PUSHBUTTON.s
Comment: loop used once
nextlocation 00000096

Symbol: nextlocation
   Definitions
      At line 183 in file PUSHBUTTON.s
   Uses
      At line 228 in file PUSHBUTTON.s
Comment: nextlocation used once
routines 00000000

Symbol: routines
   Definitions
      At line 44 in file PUSHBUTTON.s
   Uses
      None
Comment: routines unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 17 in file PUSHBUTTON.s
   Uses
      None
Comment: BLUE unused
CURSOR1 20001150

Symbol: CURSOR1
   Definitions
      At line 28 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR1 unused
CURSOR2 20001160

Symbol: CURSOR2
   Definitions
      At line 29 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR2 unused
CURSOR3 20001170

Symbol: CURSOR3
   Definitions
      At line 30 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR3 unused
CURSOR4 20001180

Symbol: CURSOR4
   Definitions
      At line 31 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR4 unused
FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 98 in file PUSHBUTTON.s
   Uses
      None
Comment: FIFTHSEC unused
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 15 in file PUSHBUTTON.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 8 in file PUSHBUTTON.s
   Uses
      At line 79 in file PUSHBUTTON.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 13 in file PUSHBUTTON.s
   Uses
      At line 70 in file PUSHBUTTON.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 12 in file PUSHBUTTON.s
   Uses
      At line 67 in file PUSHBUTTON.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 6 in file PUSHBUTTON.s
   Uses
      At line 116 in file PUSHBUTTON.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 10 in file PUSHBUTTON.s
   Uses
      At line 85 in file PUSHBUTTON.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 7 in file PUSHBUTTON.s
   Uses
      At line 76 in file PUSHBUTTON.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 11 in file PUSHBUTTON.s
   Uses
      At line 64 in file PUSHBUTTON.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 14 in file PUSHBUTTON.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 73 in file PUSHBUTTON.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 9 in file PUSHBUTTON.s
   Uses
      At line 82 in file PUSHBUTTON.s
Comment: GPIO_PORTF_PUR_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
      At line 18 in file PUSHBUTTON.s
   Uses
      None
Comment: GREEN unused
ONESEC 00516155

Symbol: ONESEC
   Definitions
      At line 96 in file PUSHBUTTON.s
   Uses
      None
Comment: ONESEC unused
QUARTERSEC 00145855

Symbol: QUARTERSEC
   Definitions
      At line 97 in file PUSHBUTTON.s
   Uses
      None
Comment: QUARTERSEC unused
RED 00000002

Symbol: RED
   Definitions
      At line 16 in file PUSHBUTTON.s
   Uses
      None
Comment: RED unused
SHIP1 20001100

Symbol: SHIP1
   Definitions
      At line 23 in file PUSHBUTTON.s
   Uses
      At line 181 in file PUSHBUTTON.s
Comment: SHIP1 used once
SHIP2 20001110

Symbol: SHIP2
   Definitions
      At line 24 in file PUSHBUTTON.s
   Uses
      None
Comment: SHIP2 unused
SHIP3 20001120



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: SHIP3
   Definitions
      At line 25 in file PUSHBUTTON.s
   Uses
      None
Comment: SHIP3 unused
SHIP4 20001130

Symbol: SHIP4
   Definitions
      At line 26 in file PUSHBUTTON.s
   Uses
      None
Comment: SHIP4 unused
SW1 00000010

Symbol: SW1
   Definitions
      At line 19 in file PUSHBUTTON.s
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
      At line 20 in file PUSHBUTTON.s
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 21 in file PUSHBUTTON.s
   Uses
      At line 58 in file PUSHBUTTON.s
Comment: SYSCTL_RCGCGPIO_R used once
TENTHSEC 00082355

Symbol: TENTHSEC
   Definitions
      At line 99 in file PUSHBUTTON.s
   Uses
      At line 145 in file PUSHBUTTON.s
Comment: TENTHSEC used once
28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC_READ_CURSOR 00000000

Symbol: ADC_READ_CURSOR
   Definitions
      At line 132 in file PUSHBUTTON.s
   Uses
      None
Comment: ADC_READ_CURSOR unused
ADC_READ_SHIP 00000000

Symbol: ADC_READ_SHIP
   Definitions
      At line 131 in file PUSHBUTTON.s
   Uses
      At line 148 in file PUSHBUTTON.s
Comment: ADC_READ_SHIP used once
ADDRESS_CHANGE 00000000

Symbol: ADDRESS_CHANGE
   Definitions
      At line 135 in file PUSHBUTTON.s
   Uses
      None
Comment: ADDRESS_CHANGE unused
LOSER 00000000

Symbol: LOSER
   Definitions
      At line 48 in file PUSHBUTTON.s
   Uses
      None
Comment: LOSER unused
PLAYER2 00000000

Symbol: PLAYER2
   Definitions
      At line 137 in file PUSHBUTTON.s
   Uses
      At line 252 in file PUSHBUTTON.s
Comment: PLAYER2 used once
SHIP_CURSOR 00000000

Symbol: SHIP_CURSOR
   Definitions
      At line 136 in file PUSHBUTTON.s
   Uses
      At line 235 in file PUSHBUTTON.s
Comment: SHIP_CURSOR used once
WINNER 00000000

Symbol: WINNER
   Definitions
      At line 47 in file PUSHBUTTON.s
   Uses
      None
Comment: WINNER unused
7 symbols
387 symbols in table
