


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    6 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
    7 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
    8 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
    9 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   10 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   11 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   12 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   13 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   14 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   15 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   16 00000000 00000002 
                       RED     EQU              0x02
   17 00000000 00000004 
                       BLUE    EQU              0x04
   18 00000000 00000008 
                       GREEN   EQU              0x08
   19 00000000 00000010 
                       SW1     EQU              0x10        ; on the left side 
                                                            of the Launchpad bo
                                                            ard
   20 00000000 00000001 
                       SW2     EQU              0x01        ; on the right side
                                                             of the Launchpad b
                                                            oard
   21 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   22 00000000         
   23 00000000 20001100 
                       SHIP1   EQU              0x20001100
   24 00000000 20001110 



ARM Macro Assembler    Page 2 


                       SHIP2   EQU              0x20001110
   25 00000000 20001120 
                       SHIP3   EQU              0x20001120
   26 00000000         
   27 00000000 20001130 
                       SHIP4   EQU              0x20001130
   28 00000000         
   29 00000000 20001150 
                       CURSOR1 EQU              0x20001150
   30 00000000 20001160 
                       CURSOR2 EQU              0x20001160
   31 00000000 20001170 
                       CURSOR3 EQU              0x20001170
   32 00000000 20001180 
                       CURSOR4 EQU              0x20001180
   33 00000000         
   34 00000000 20000400 
                       EMPTY_FIELD
                               EQU              0x20000400  ;400-5F7
   35 00000000 20000600 
                       PLAYFIELD
                               EQU              0x20000600  ;600-7F7
   36 00000000         
   37 00000000         
   38 00000000         ;*******************************************************
                       ********
   39 00000000         ; Directives - This Data Section is part of the code
   40 00000000         ; It is in the read only section  so values cannot be ch
                       anged.
   41 00000000         ;*******************************************************
                       ******** 
   42 00000000         
   43 00000000         ;*******************************************************
                       ********
   44 00000000         ; Program section           
   45 00000000         ;*******************************************************
                       ********
   46 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   47 00000000                 AREA             routines,READONLY,CODE
   48 00000000                 THUMB
   49 00000000                 ALIGN
   50 00000000                 EXTERN           WINNER
   51 00000000                 EXTERN           LOSER
   52 00000000         
   53 00000000                 EXTERN           SHIP_CURSOR
   54 00000000         ;*******************************************************
                       ********
   55 00000000         ; PORTF INITIALIZATION
   56 00000000         ; INITIALIZE PF0 AND PF4 FOR PUSH BUTTONS ON THE BOARD
   57 00000000         ;*******************************************************
                       ******** 
   58 00000000                 EXPORT           PORTF_INIT
   59 00000000         PORTF_INIT
                               PROC
   60 00000000 B500            PUSH             {LR}
   61 00000002 493A            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
   62 00000004 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 3 


   63 00000006 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
   64 0000000A 6008            STR              R0, [R1]
   65 0000000C BF00            NOP
   66 0000000E BF00            NOP                          ; allow time for cl
                                                            ock to finish
   67 00000010 4937            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
   68 00000012 4838            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
   69 00000014 6008            STR              R0, [R1]
   70 00000016 4938            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
   71 00000018 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
   72 0000001C 6008            STR              R0, [R1]
   73 0000001E 4937            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
   74 00000020 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
   75 00000024 6008            STR              R0, [R1]
   76 00000026 4936            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
   77 00000028 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
   78 0000002C 6008            STR              R0, [R1]
   79 0000002E 4935            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
   80 00000030 F04F 000E       MOV              R0,#0x0E    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
   81 00000034 6008            STR              R0, [R1]
   82 00000036 4934            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
   83 00000038 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
   84 0000003C 6008            STR              R0, [R1]
   85 0000003E 4933            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
   86 00000040 F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
   87 00000044 6008            STR              R0, [R1]
   88 00000046 4932            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
   89 00000048 F04F 00FF       MOV              R0, #0xFF   ; 1 means enable di
                                                            gital I/O
   90 0000004C 6008            STR              R0, [R1]
   91 0000004E F85D EB04       POP{LR}
   92 00000052 4770            BX               LR
   93 00000054                 ENDP
   94 00000054         
   95 00000054         ;------------delay------------
   96 00000054         ; Delay function for testing, which delays about 3*count



ARM Macro Assembler    Page 4 


                        cycles.
   97 00000054         ; Input: R0  count
   98 00000054         ; Output: none
   99 00000054 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
  100 00000054 0028B0AA 
                       HALFSEC EQU              2666666
  101 00000054 00145855 
                       QUARTERSEC
                               EQU              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
  102 00000054 001046AA 
                       FIFTHSEC
                               EQU              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
  103 00000054 00082355 
                       TENTHSEC
                               EQU              533333
  104 00000054                 EXPORT           delay
  105 00000054         delay   PROC
  106 00000054         ;PUSH {LR}
  107 00000054 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
  108 00000056 D1FE            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
  109 00000058         ; POP{LR}
  110 00000058 4770            BX               LR          ; return
  111 0000005A                 ENDP
  112 0000005A         
  113 0000005A         
  114 0000005A         ;------------PortF_Input------------
  115 0000005A         ; Read and return the status of the switches.
  116 0000005A         ; R0 keeps the data according to push buttons
  117 0000005A                 EXPORT           PortF_Input
  118 0000005A         PortF_Input
                               PROC
  119 0000005A B500            PUSH             {LR}
  120 0000005C 492D            LDR              R1, =GPIO_PORTF_DATA_R ; pointe
                                                            r to Port F data
  121 0000005E 6808            LDR              R0, [R1]    ; read all of Port 
                                                            F
  122 00000060 F000 0011       AND              R0,R0,#0x11 ; just the input pi
                                                            ns PF0 and PF4
  123 00000064 F85D EB04       POP              {LR}
  124 00000068 4770            BX               LR          ; return R0 with in
                                                            puts      GPIO PORT
                                                            F DATA KEEPS THE PU
                                                            SH BUTTON OPTIONS
  125 0000006A                 ENDP
  126 0000006A         
  127 0000006A         
  128 0000006A         
  129 0000006A         ;*******************************************************
                       ********
  130 0000006A         ; THIS IS THE LOOP TO CHECK WHETHER THE PUSH BUTTON IS P



ARM Macro Assembler    Page 5 


                       RESSED OR NOT
  131 0000006A         ;  POLLING OPERATION
  132 0000006A         ;   BRANCHS TO VISUALIZING SHIP SUBROUTINE
  133 0000006A         ; BRANCHS TO ADC MODULES TO GET THE LOCATION
  134 0000006A         ;*******************************************************
                       ******** 
  135 0000006A                 EXTERN           ADC_READ_SHIP ; INCLUDE ADC REA
                                                            DING MODULES
  136 0000006A                 EXTERN           ADC_READ_CURSOR
  137 0000006A         ; EXTERN delay
  138 0000006A         ; EXTERN PortF_Input
  139 0000006A                 EXTERN           ADDRESS_CHANGE
  140 0000006A                 EXTERN           SHIP_CURSOR
  141 0000006A                 EXTERN           PLAYER2
  142 0000006A                 EXTERN           DATA_WRITE
  143 0000006A                 EXPORT           PUSHBUTTON
  144 0000006A         ;LABEL  DIRECTIVE VALUE     COMMENT
  145 0000006A         
  146 0000006A         PUSHBUTTON
                               PROC
  147 0000006A B500            PUSH             {LR}
  148 0000006C         loop
  149 0000006C 482A            LDR              R0, =FIFTHSEC ; R0 = FIFTHSEC (
                                                            delay 0.2 second) 0
                                                            .1 DELAY
  150 0000006E F7FF FFFE       BL               delay       ; delay at least (3
                                                            *R0) cycles
  151 00000072         
  152 00000072 F7FF FFFE       BL               ADC_READ_SHIP ;;; READ SHIP LOC
                                                            ATION 
  153 00000076 F7FF FFFE       BL               PortF_Input ; read all of the s
                                                            witches on Port F
  154 0000007A         
  155 0000007A         ;; IF R0 EITHER 01 OR 10 MEANS CIVILIAN OR BATTLESHIP   
                       
  156 0000007A         ;01 CIVILIAN
  157 0000007A         ;10 BATLLESHIP
  158 0000007A EA4F 6000       LSL              R0,R0, #24  ; ;; SHIFT 24 TIMES
                                                            
  159 0000007E 4404            ADD              R4, R4, R0  ;  R4 KEEPS STATUS 
                                                            OF PUSHBUTTONS AND 
                                                            XY DATA  
  160 00000080 EA4F 6010       LSR              R0, #24     ; SHIFT RIGHT AGAIN
                                                            
  161 00000084         ;;; CHECK STATUS FOR MAPPING CONDITION
  162 00000084         ;;;;; CHECK IF THE SHIP HAS A COLLISION WITH PREVIOUSLY 
                       DEPLOYED SHIP
  163 00000084 2811            CMP              R0, #0x11   ;  
  164 00000086 D00D            BEQ              CONT        ;NO DEPLOYMENT 
  165 00000088 2800            CMP              R0, #0x00   ;
  166 0000008A D00B            BEQ              CONT        ; NO DEPLOYMENT
  167 0000008C         ;; IF R0 EITHER 01 OR 10 MEANS CIVILIAN OR BATTLESHIP   
                        
  168 0000008C         ;01 CIVILIAN
  169 0000008C         ;10 BATLLESHIP
  170 0000008C 4823            LDR              R0, =SHIP1
  171 0000008E         
  172 0000008E         nextlocation
  173 0000008E 6801            LDR              R1, [R0]    ; R0 KEEPS THE SHIP



ARM Macro Assembler    Page 6 


                                                             1 VALUE ADDRESS
  174 00000090         ; R1 KEEPS THE SHIP1 LOCATIONDATA
  175 00000090 2900            CMP              R1, #0      ; IF EMPTY BLOCK 
  176 00000092 D006            BEQ              MAPPING
  177 00000094 F000 05F0       AND              R5,R0, #0xF0 ;   AND IT R5 SHOW
                                                            S THE 2ND DIGIT 
  178 00000098 2D30            CMP              R5, #0x30   ; last ship locatio
                                                            n ss full so 4 ship
                                                            s demployed
  179 0000009A D006            BEQ              FINISH      ; end this push but
                                                            ton loop  4 SHIPS D
                                                            EPLOYED
  180 0000009C         
  181 0000009C F100 0010       ADD              R0, #0x10
  182 000000A0 E7F5            B                nextlocation
  183 000000A2         
  184 000000A2 6004    MAPPING STR              R4, [R0]
  185 000000A4         
  186 000000A4         
  187 000000A4 F7FF FFFE 
                       CONT    BL               SHIP_CURSOR
  188 000000A8 E7E0            B                loop
  189 000000AA         
  190 000000AA         
  191 000000AA         FINISH                               ; delay at least (3
                                                            *R0) cycles
  192 000000AA F7FF FFFE       BL               PortF_Input ; read all of the s
                                                            witches on Port F
  193 000000AE 2800            CMP              R0, #0x00   ;  
  194 000000B0 D0FB            BEQ              FINISH
  195 000000B2         
  196 000000B2 2811            CMP              R0, #0x11   ;
  197 000000B4 D0F9            BEQ              FINISH
  198 000000B6         
  199 000000B6         
  200 000000B6         ; CLEAR SCREEN IF A BUTTON PRESSED
  201 000000B6         ; PLAYER2'S TURN SHOWN ON SCREEN
  202 000000B6         
  203 000000B6 F7FF FFFE       BL               PLAYER2
  204 000000BA F7FF FFFE 
                       wait    BL               PortF_Input ; read all of the s
                                                            witches on Port F
  205 000000BE 2800            CMP              R0, #0x00   ;  
  206 000000C0 D0FB            BEQ              wait
  207 000000C2         
  208 000000C2 2811            CMP              R0, #0x11   ;
  209 000000C4 D0F9            BEQ              wait
  210 000000C6         
  211 000000C6 F04F 0400       LDR              R4, = 0x0
  212 000000CA F7FF FFFE       BL               ADDRESS_CHANGE
  213 000000CE         
  214 000000CE F44F 70FC       LDR              R0, =0x1F8
  215 000000D2 4D13            LDR              R5,= PLAYFIELD
  216 000000D4 F815 4B01 
                       LOOP    LDRB             R4 ,[R5], #1
  217 000000D8 F7FF FFFE       BL               DATA_WRITE
  218 000000DC 1E40            SUBS             R0, R0, #1
  219 000000DE D1F9            BNE              LOOP
  220 000000E0         



ARM Macro Assembler    Page 7 


  221 000000E0 4810            LDR              R0, =HALFSEC ; R0 = FIFTHSEC (d
                                                            elay 0.2 second) 0.
                                                            1 DELAY
  222 000000E2 F7FF FFFE       BL               delay
  223 000000E6         
  224 000000E6         ;; SHOW SHIPS CHECK TUS CONDITION 
  225 000000E6 F85D EB04       POP{LR}                      ; EXIT THE SUBMODUL
                                                            E IF THERE ARE 4 SH
                                                            IPS
  226 000000EA 4770            BX               LR
  227 000000EC                 ENDP
  228 000000EC         
  229 000000EC         
  230 000000EC         
  231 000000EC                 ALIGN                        ; 
  232 000000EC                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
              001046AA 
              20001100 
              20000600 
              0028B0AA 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\pushbutton.d -o.\objects\pushbutton.o -I.\RTE\_Target
_1 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v
5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION 
SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\pushbutton.lst PU
SHBUTTON.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONT 000000A4

Symbol: CONT
   Definitions
      At line 187 in file PUSHBUTTON.s
   Uses
      At line 164 in file PUSHBUTTON.s
      At line 166 in file PUSHBUTTON.s

FINISH 000000AA

Symbol: FINISH
   Definitions
      At line 191 in file PUSHBUTTON.s
   Uses
      At line 179 in file PUSHBUTTON.s
      At line 194 in file PUSHBUTTON.s
      At line 197 in file PUSHBUTTON.s

LOOP 000000D4

Symbol: LOOP
   Definitions
      At line 216 in file PUSHBUTTON.s
   Uses
      At line 219 in file PUSHBUTTON.s
Comment: LOOP used once
MAPPING 000000A2

Symbol: MAPPING
   Definitions
      At line 184 in file PUSHBUTTON.s
   Uses
      At line 176 in file PUSHBUTTON.s
Comment: MAPPING used once
PORTF_INIT 00000000

Symbol: PORTF_INIT
   Definitions
      At line 59 in file PUSHBUTTON.s
   Uses
      At line 58 in file PUSHBUTTON.s
Comment: PORTF_INIT used once
PUSHBUTTON 0000006A

Symbol: PUSHBUTTON
   Definitions
      At line 146 in file PUSHBUTTON.s
   Uses
      At line 143 in file PUSHBUTTON.s
Comment: PUSHBUTTON used once
PortF_Input 0000005A

Symbol: PortF_Input
   Definitions
      At line 118 in file PUSHBUTTON.s
   Uses
      At line 117 in file PUSHBUTTON.s
      At line 153 in file PUSHBUTTON.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 192 in file PUSHBUTTON.s
      At line 204 in file PUSHBUTTON.s

delay 00000054

Symbol: delay
   Definitions
      At line 105 in file PUSHBUTTON.s
   Uses
      At line 104 in file PUSHBUTTON.s
      At line 108 in file PUSHBUTTON.s
      At line 150 in file PUSHBUTTON.s
      At line 222 in file PUSHBUTTON.s

loop 0000006C

Symbol: loop
   Definitions
      At line 148 in file PUSHBUTTON.s
   Uses
      At line 188 in file PUSHBUTTON.s
Comment: loop used once
nextlocation 0000008E

Symbol: nextlocation
   Definitions
      At line 172 in file PUSHBUTTON.s
   Uses
      At line 182 in file PUSHBUTTON.s
Comment: nextlocation used once
routines 00000000

Symbol: routines
   Definitions
      At line 47 in file PUSHBUTTON.s
   Uses
      None
Comment: routines unused
wait 000000BA

Symbol: wait
   Definitions
      At line 204 in file PUSHBUTTON.s
   Uses
      At line 206 in file PUSHBUTTON.s
      At line 209 in file PUSHBUTTON.s

12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BLUE 00000004

Symbol: BLUE
   Definitions
      At line 17 in file PUSHBUTTON.s
   Uses
      None
Comment: BLUE unused
CURSOR1 20001150

Symbol: CURSOR1
   Definitions
      At line 29 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR1 unused
CURSOR2 20001160

Symbol: CURSOR2
   Definitions
      At line 30 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR2 unused
CURSOR3 20001170

Symbol: CURSOR3
   Definitions
      At line 31 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR3 unused
CURSOR4 20001180

Symbol: CURSOR4
   Definitions
      At line 32 in file PUSHBUTTON.s
   Uses
      None
Comment: CURSOR4 unused
EMPTY_FIELD 20000400

Symbol: EMPTY_FIELD
   Definitions
      At line 34 in file PUSHBUTTON.s
   Uses
      None
Comment: EMPTY_FIELD unused
FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 102 in file PUSHBUTTON.s
   Uses
      At line 149 in file PUSHBUTTON.s
Comment: FIFTHSEC used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 15 in file PUSHBUTTON.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 8 in file PUSHBUTTON.s
   Uses
      At line 82 in file PUSHBUTTON.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 13 in file PUSHBUTTON.s
   Uses
      At line 73 in file PUSHBUTTON.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 12 in file PUSHBUTTON.s
   Uses
      At line 70 in file PUSHBUTTON.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 6 in file PUSHBUTTON.s
   Uses
      At line 120 in file PUSHBUTTON.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 10 in file PUSHBUTTON.s
   Uses
      At line 88 in file PUSHBUTTON.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 7 in file PUSHBUTTON.s
   Uses
      At line 79 in file PUSHBUTTON.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 11 in file PUSHBUTTON.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 67 in file PUSHBUTTON.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 14 in file PUSHBUTTON.s
   Uses
      At line 76 in file PUSHBUTTON.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 9 in file PUSHBUTTON.s
   Uses
      At line 85 in file PUSHBUTTON.s
Comment: GPIO_PORTF_PUR_R used once
GREEN 00000008

Symbol: GREEN
   Definitions
      At line 18 in file PUSHBUTTON.s
   Uses
      None
Comment: GREEN unused
HALFSEC 0028B0AA

Symbol: HALFSEC
   Definitions
      At line 100 in file PUSHBUTTON.s
   Uses
      At line 221 in file PUSHBUTTON.s
Comment: HALFSEC used once
ONESEC 00516155

Symbol: ONESEC
   Definitions
      At line 99 in file PUSHBUTTON.s
   Uses
      None
Comment: ONESEC unused
PLAYFIELD 20000600

Symbol: PLAYFIELD
   Definitions
      At line 35 in file PUSHBUTTON.s
   Uses
      At line 215 in file PUSHBUTTON.s
Comment: PLAYFIELD used once
QUARTERSEC 00145855

Symbol: QUARTERSEC
   Definitions
      At line 101 in file PUSHBUTTON.s
   Uses
      None
Comment: QUARTERSEC unused
RED 00000002



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: RED
   Definitions
      At line 16 in file PUSHBUTTON.s
   Uses
      None
Comment: RED unused
SHIP1 20001100

Symbol: SHIP1
   Definitions
      At line 23 in file PUSHBUTTON.s
   Uses
      At line 170 in file PUSHBUTTON.s
Comment: SHIP1 used once
SHIP2 20001110

Symbol: SHIP2
   Definitions
      At line 24 in file PUSHBUTTON.s
   Uses
      None
Comment: SHIP2 unused
SHIP3 20001120

Symbol: SHIP3
   Definitions
      At line 25 in file PUSHBUTTON.s
   Uses
      None
Comment: SHIP3 unused
SHIP4 20001130

Symbol: SHIP4
   Definitions
      At line 27 in file PUSHBUTTON.s
   Uses
      None
Comment: SHIP4 unused
SW1 00000010

Symbol: SW1
   Definitions
      At line 19 in file PUSHBUTTON.s
   Uses
      None
Comment: SW1 unused
SW2 00000001

Symbol: SW2
   Definitions
      At line 20 in file PUSHBUTTON.s
   Uses
      None
Comment: SW2 unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 21 in file PUSHBUTTON.s
   Uses
      At line 61 in file PUSHBUTTON.s
Comment: SYSCTL_RCGCGPIO_R used once
TENTHSEC 00082355

Symbol: TENTHSEC
   Definitions
      At line 103 in file PUSHBUTTON.s
   Uses
      None
Comment: TENTHSEC unused
31 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC_READ_CURSOR 00000000

Symbol: ADC_READ_CURSOR
   Definitions
      At line 136 in file PUSHBUTTON.s
   Uses
      None
Comment: ADC_READ_CURSOR unused
ADC_READ_SHIP 00000000

Symbol: ADC_READ_SHIP
   Definitions
      At line 135 in file PUSHBUTTON.s
   Uses
      At line 152 in file PUSHBUTTON.s
Comment: ADC_READ_SHIP used once
ADDRESS_CHANGE 00000000

Symbol: ADDRESS_CHANGE
   Definitions
      At line 139 in file PUSHBUTTON.s
   Uses
      At line 212 in file PUSHBUTTON.s
Comment: ADDRESS_CHANGE used once
DATA_WRITE 00000000

Symbol: DATA_WRITE
   Definitions
      At line 142 in file PUSHBUTTON.s
   Uses
      At line 217 in file PUSHBUTTON.s
Comment: DATA_WRITE used once
LOSER 00000000

Symbol: LOSER
   Definitions
      At line 51 in file PUSHBUTTON.s
   Uses
      None
Comment: LOSER unused
PLAYER2 00000000

Symbol: PLAYER2
   Definitions
      At line 141 in file PUSHBUTTON.s
   Uses
      At line 203 in file PUSHBUTTON.s
Comment: PLAYER2 used once
SHIP_CURSOR 00000000

Symbol: SHIP_CURSOR
   Definitions
      At line 53 in file PUSHBUTTON.s
      At line 140 in file PUSHBUTTON.s
   Uses
      At line 187 in file PUSHBUTTON.s
Warning: SHIP_CURSOR multiply definedComment: SHIP_CURSOR used once
WINNER 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: WINNER
   Definitions
      At line 50 in file PUSHBUTTON.s
   Uses
      None
Comment: WINNER unused
8 symbols
387 symbols in table
