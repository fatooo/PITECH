


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    6 00000000 40005008 
                       OUT_PORTB_DC
                               EQU              0x40005008  ;00000010
    7 00000000         
    8 00000000 20001000 
                       OLD_CURSOR_LOC_X
                               EQU              0x20001000  ;1000
    9 00000000 20001001 
                       OLD_CURSOR_LOC_Y
                               EQU              0x20001001  ;1001
   10 00000000 20002000 
                       MINEFIELD
                               EQU              0x20002000  ;2000-21F
   11 00000000 20000818 
                       CURSOR  EQU              0x20000818  ;818-81A
   12 00000000 2000081B 
                       MINE    EQU              0x2000081B  ;81B-81D
   13 00000000         
   14 00000000         ;*******************************************************
                       ********
   15 00000000         ; Directives - This Data Section is part of the code
   16 00000000         ; It is in the read only section  so values cannot be ch
                       anged.
   17 00000000         ;*******************************************************
                       ******** 
   18 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   19 00000000                 AREA             sdata, DATA, READONLY
   20 00000000                 THUMB
   21 00000000         
   22 00000000         ;*******************************************************
                       ********
   23 00000000         ; Program section           
   24 00000000         ;*******************************************************
                       ********
   25 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   26 00000000                 AREA             routines,READONLY,CODE
   27 00000000                 THUMB
   28 00000000                 ALIGN
   29 00000000                 EXTERN           DELAY_1ms
   30 00000000                 EXTERN           ADDRESS_CHANGE
   31 00000000                 EXTERN           DATA_WRITE
   32 00000000                 EXPORT           MINE_CURSOR
   33 00000000         
   34 00000000         ;*******************************************************
                       ********
   35 00000000         ; Main Function
   36 00000000         ; Takes Op mode, y location and x location
   37 00000000         ; Data format M = 
   38 00000000         ; 0000.00MM.0000.0000.YYYY.YYYY.XXXX.XXXX
   39 00000000         ;*******************************************************
                       ******** 
   40 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT



ARM Macro Assembler    Page 2 


   41 00000000         MINE_CURSOR
                               PROC
   42 00000000 B500            PUSH             {LR}
   43 00000002 B41F            PUSH             {R0-R4}
   44 00000004         
   45 00000004 F240 1501       LDR              R5,=0x0101
   46 00000008 EBA4 0405       SUB              R4,R4,R5
   47 0000000C         
   48 0000000C         
   49 0000000C 4D6D            LDR              R5,=OLD_CURSOR_LOC_Y
   50 0000000E 7828            LDRB             R0,[R5]
   51 00000010 EA4F 2000       LSL              R0,R0,#8
   52 00000014 4D6C            LDR              R5,=OLD_CURSOR_LOC_X
   53 00000016 7829            LDRB             R1,[R5]
   54 00000018 4408            ADD              R0,R0,R1
   55 0000001A F64F 72FF       LDR              R2,=0xFFFF
   56 0000001E EA04 0102       AND              R1,R4,R2    ;Compare new locati
                                                            on with old one
   57 00000022 B410            PUSH             {R4}        ;Save R4 
   58 00000024 4281            CMP              R1,R0
   59 00000026 D036            BEQ              Skip_clear  ;if they are same s
                                                            kip clear phase
   60 00000028         
   61 00000028         ;*******************************************************
                       ********
   62 00000028         ;clear screen stage
   63 00000028         ;*******************************************************
                       ********  
   64 00000028         
   65 00000028         Clear
   66 00000028 4D66            LDR              R5,=OLD_CURSOR_LOC_Y
   67 0000002A 7828            LDRB             R0,[R5]
   68 0000002C EA4F 00D0       LSR              R0,R0,#3    ;Extract the fracti
                                                            onal part
   69 00000030 EA4F 2400       LSL              R4,R0,#8
   70 00000034         
   71 00000034 4D64            LDR              R5,=OLD_CURSOR_LOC_X
   72 00000036 7829            LDRB             R1,[R5]
   73 00000038 440C            ADD              R4,R4,R1    ;create Yloc-Xloc s
                                                            tructure for addres
                                                            s change
   74 0000003A F7FF FFFE       BL               ADDRESS_CHANGE
   75 0000003E         
   76 0000003E F04F 0354       MOV              R3,#0x54
   77 00000042 FB00 F203       MUL              R2,R0,R3    ;multiply Y coordin
                                                            ate with 84
   78 00000046 440A            ADD              R2,R2,R1    ;find vertical mode
                                                             address of pixel
   79 00000048         
   80 00000048 F04F 2520       LDR              R5,=MINEFIELD
   81 0000004C 4415            ADD              R5,R5,R2    ;find corresponding
                                                             address of R5
   82 0000004E F04F 0303       MOV              R3,#3       ;write 3 byte of da
                                                            ta
   83 00000052         
   84 00000052 F815 4B01 
                       minefield
                               LDRB             R4,[R5],#1
   85 00000056 F7FF FFFE       BL               DATA_WRITE



ARM Macro Assembler    Page 3 


   86 0000005A 1E5B            SUBS             R3,R3,#1
   87 0000005C D1F9            BNE              minefield
   88 0000005E         
   89 0000005E         
   90 0000005E 4B59            LDR              R3,=OLD_CURSOR_LOC_Y
   91 00000060 7818            LDRB             R0,[R3]
   92 00000062 F010 0107       ANDS             R1,R0,#0x07 ;control fractional
                                                             part
   93 00000066 D016            BEQ              Skip_clear
   94 00000068         
   95 00000068 4B56            LDR              R3,=OLD_CURSOR_LOC_Y
   96 0000006A 7818            LDRB             R0,[R3]
   97 0000006C EA4F 00D0       LSR              R0,R0,#3    ;Extract the fracti
                                                            onal part
   98 00000070 EA4F 2400       LSL              R4,R0,#8
   99 00000074         
  100 00000074 4B54            LDR              R3,=OLD_CURSOR_LOC_X
  101 00000076 7819            LDRB             R1,[R3]
  102 00000078 440C            ADD              R4,R4,R1    ;create Yloc-Xloc s
                                                            tructure for addres
                                                            s change
  103 0000007A F504 7480       ADD              R4,R4,#0x100 ;jump to next line
                                                            
  104 0000007E F7FF FFFE       BL               ADDRESS_CHANGE
  105 00000082         
  106 00000082 F105 0551       ADD              R5,R5,#0x51
  107 00000086 F04F 0303       MOV              R3,#3
  108 0000008A         
  109 0000008A F815 4B01 
                       minefield2
                               LDRB             R4,[R5],#1
  110 0000008E F7FF FFFE       BL               DATA_WRITE
  111 00000092 1E5B            SUBS             R3,R3,#1
  112 00000094 D1F9            BNE              minefield2
  113 00000096         
  114 00000096         
  115 00000096         ;*******************************************************
                       ********
  116 00000096         ; case determine stage
  117 00000096         ;*******************************************************
                       ********
  118 00000096         
  119 00000096         
  120 00000096 BC10    Skip_clear
                               POP              {R4}
  121 00000098 EA4F 6314       LSR              R3,R4,#0x18 ;extact operation f
                                                            rom coordinates
  122 0000009C         
  123 0000009C 4D4A            LDR              R5,=OLD_CURSOR_LOC_X
  124 0000009E F004 00FF       AND              R0,R4,#0xFF
  125 000000A2 7028            STRB             R0,[R5]
  126 000000A4 4D47            LDR              R5,=OLD_CURSOR_LOC_Y
  127 000000A6 F404 407F       AND              R0,R4,#0xFF00
  128 000000AA EA4F 2010       LSR              R0,R0,#8
  129 000000AE 7028            STRB             R0,[R5]
  130 000000B0         
  131 000000B0         
  132 000000B0 2B01            CMP              R3,#0x01
  133 000000B2 D002            BEQ              mine



ARM Macro Assembler    Page 4 


  134 000000B4 2B10            CMP              R3,#0x10
  135 000000B6 D000            BEQ              mine
  136 000000B8 E035            B                on_screen
  137 000000BA         
  138 000000BA         ;*******************************************************
                       ********
  139 000000BA         ;mine placement stage
  140 000000BA         ;*******************************************************
                       ********
  141 000000BA         
  142 000000BA 4D43    mine    LDR              R5,=OLD_CURSOR_LOC_X ;extract X
                                                             coordinate
  143 000000BC 7828            LDRB             R0,[R5]
  144 000000BE 4D41            LDR              R5,=OLD_CURSOR_LOC_Y ;extract Y
                                                             coordinate
  145 000000C0 7829            LDRB             R1,[R5]
  146 000000C2 F001 0207       AND              R2,R1,#0x07 ;extract fractional
                                                             Y coordinate
  147 000000C6 EA4F 01D1       LSR              R1,R1,#0x03 ;extract whole part
                                                            
  148 000000CA         
  149 000000CA F04F 0354       MOV              R3,#0x54
  150 000000CE FB01 F303       MUL              R3,R1,R3    ;multiply Y coordin
                                                            ate with 84
  151 000000D2 4403            ADD              R3,R3,R0    ;find vertical mode
                                                             address of pixel
  152 000000D4         
  153 000000D4 F04F 2520       LDR              R5,=MINEFIELD ;take minefield a
                                                            ddress for writing 
                                                            op
  154 000000D8 441D            ADD              R5,R5,R3    ;adjust to mine loc
                                                            ation
  155 000000DA 4E3C            LDR              R6,=MINE    ;take mine pattern
  156 000000DC F04F 0303       MOV              R3,#3
  157 000000E0         
  158 000000E0 7828    mine_memo
                               LDRB             R0,[R5]
  159 000000E2 F816 1B01       LDRB             R1,[R6],#1
  160 000000E6 FA01 F102       LSL              R1,R1,R2    ;shift with fractio
                                                            nal part to adjust 
                                                            mine
  161 000000EA F001 01FF       AND              R1,R1,#0xFF
  162 000000EE EA41 0100       ORR              R1,R1,R0    ;combine field data
                                                             with mine data
  163 000000F2 F805 1B01       STRB             R1,[R5],#1  ;write into the mem
                                                            ory
  164 000000F6 1E5B            SUBS             R3,R3,#1
  165 000000F8 D1F2            BNE              mine_memo
  166 000000FA         
  167 000000FA 2A00            CMP              R2,#0x00    ;if data is divided
                                                             repeat same step f
                                                            or
  168 000000FC D013            BEQ              on_screen   ;lower byte frames
  169 000000FE F04F 0303       MOV              R3,#3
  170 00000102         
  171 00000102 F105 0551       ADD              R5,R5,#0x51
  172 00000106 F1A6 0603       SUB              R6,R6,#0x03
  173 0000010A F816 1B01 
                       mine_memo2



ARM Macro Assembler    Page 5 


                               LDRB             R1,[R6],#1
  174 0000010E FA01 F102       LSL              R1,R1,R2
  175 00000112 EA4F 2111       LSR              R1,R1,#8
  176 00000116 7828            LDRB             R0,[R5]
  177 00000118 EA41 0100       ORR              R1,R1,R0
  178 0000011C F805 1B01       STRB             R1,[R5],#1
  179 00000120 1E5B            SUBS             R3,R3,#1
  180 00000122 D1F2            BNE              mine_memo2
  181 00000124         
  182 00000124 E7FF            B                on_screen
  183 00000126         
  184 00000126         ;*******************************************************
                       ********
  185 00000126         ;write screen stage
  186 00000126         ;*******************************************************
                       ********   
  187 00000126         
  188 00000126 4D28    on_screen
                               LDR              R5,=OLD_CURSOR_LOC_X ;extract X
                                                             coordinate
  189 00000128 7828            LDRB             R0,[R5]
  190 0000012A 4D26            LDR              R5,=OLD_CURSOR_LOC_Y ;extract Y
                                                             coordinate
  191 0000012C 7829            LDRB             R1,[R5]
  192 0000012E F001 0207       AND              R2,R1,#0x07 ;extract fractional
                                                             Y coordinate
  193 00000132 EA4F 01D1       LSR              R1,R1,#0x03 ;extract whole part
                                                            
  194 00000136         
  195 00000136 EA4F 2401       LSL              R4,R1,#8
  196 0000013A 4404            ADD              R4,R4,R0
  197 0000013C F7FF FFFE       BL               ADDRESS_CHANGE
  198 00000140         
  199 00000140 F04F 0354       MOV              R3,#0x54
  200 00000144 FB01 F303       MUL              R3,R1,R3    ;multiply Y coordin
                                                            ate with 84
  201 00000148 4403            ADD              R3,R3,R0    ;find vertical mode
                                                             address of pixel
  202 0000014A         
  203 0000014A F04F 2520       LDR              R5,=MINEFIELD ;take playfield a
                                                            ddress for writing 
                                                            op
  204 0000014E 441D            ADD              R5,R5,R3    ;adjust to ship loc
                                                            ation
  205 00000150 4E1F            LDR              R6,=CURSOR  ;take empty ship pa
                                                            ttern
  206 00000152 F04F 0303       MOV              R3,#3
  207 00000156         
  208 00000156 F815 0B01 
                       first_line
                               LDRB             R0,[R5],#1
  209 0000015A F816 1B01       LDRB             R1,[R6],#1
  210 0000015E FA01 F102       LSL              R1,R1,R2    ;shift with fractio
                                                            nal part to adjust 
                                                            ship
  211 00000162 F001 01FF       AND              R1,R1,#0xFF
  212 00000166 EA41 0400       ORR              R4,R1,R0    ;combine field data
                                                             with ship data
  213 0000016A F7FF FFFE       BL               DATA_WRITE  ;write to screen



ARM Macro Assembler    Page 6 


  214 0000016E 1E5B            SUBS             R3,R3,#1
  215 00000170 D1F1            BNE              first_line
  216 00000172         
  217 00000172         
  218 00000172 2A00            CMP              R2,#0x00    ;if data is divided
                                                             repeat same step f
                                                            or
  219 00000174 D021            BEQ              endline     ;lower byte frames
  220 00000176         
  221 00000176         
  222 00000176 4B14            LDR              R3,=OLD_CURSOR_LOC_X ;extract X
                                                             coordinate from ne
                                                            wly written memory
  223 00000178 7818            LDRB             R0,[R3]
  224 0000017A 4B12            LDR              R3,=OLD_CURSOR_LOC_Y ;extract Y
                                                             coordinate from ne
                                                            wly written memory
  225 0000017C 7819            LDRB             R1,[R3]
  226 0000017E EA4F 01D1       LSR              R1,R1,#0x03 ;extract whole part
                                                            
  227 00000182 F101 0101       ADD              R1,R1,#0x01 ;increment Y locati
                                                            on
  228 00000186 EA4F 2101       LSL              R1,R1,#0x08
  229 0000018A EB01 0400       ADD              R4,R1,R0
  230 0000018E F7FF FFFE       BL               ADDRESS_CHANGE
  231 00000192         
  232 00000192 F04F 0303       MOV              R3,#3
  233 00000196 4E0E            LDR              R6,=CURSOR  ;take cursor patter
                                                            n   
  234 00000198 F105 0551       ADD              R5,R5,#0x51
  235 0000019C F816 1B01 
                       second_line
                               LDRB             R1,[R6],#1
  236 000001A0 FA01 F102       LSL              R1,R1,R2    ;shift with fractio
                                                            nal part to adjust 
                                                            cursor
  237 000001A4 EA4F 2111       LSR              R1,R1,#8
  238 000001A8 F001 01FF       AND              R1,R1,#0xFF
  239 000001AC 7828            LDRB             R0,[R5]
  240 000001AE EA41 0400       ORR              R4,R1,R0    ;combine field data
                                                             with mine data
  241 000001B2 F7FF FFFE       BL               DATA_WRITE  ;write to screen
  242 000001B6 1E5B            SUBS             R3,R3,#1
  243 000001B8 D1F0            BNE              second_line
  244 000001BA         
  245 000001BA         endline
  246 000001BA         
  247 000001BA BC1F            POP              {R0-R4}
  248 000001BC F85D EB04       POP              {LR}
  249 000001C0 4770            BX               LR
  250 000001C2         ;*******************************************************
                       ********
  251 000001C2         ; End of the program  section
  252 000001C2         ;*******************************************************
                       ********
  253 000001C2         ;LABEL      DIRECTIVE       VALUE                       
                           COMMENT
  254 000001C2                 ENDP
  255 000001C2 00 00           ALIGN



ARM Macro Assembler    Page 7 


  256 000001C4                 END
              20001001 
              20001000 
              2000081B 
              20000818 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\mine_cursor.d -o.\objects\mine_cursor.o -I.\RTE\_Targ
et_1 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil
_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSIO
N SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\mine_cursor.lst
 MINE_CURSOR.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

sdata 00000000

Symbol: sdata
   Definitions
      At line 19 in file MINE_CURSOR.s
   Uses
      None
Comment: sdata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Clear 00000028

Symbol: Clear
   Definitions
      At line 65 in file MINE_CURSOR.s
   Uses
      None
Comment: Clear unused
MINE_CURSOR 00000000

Symbol: MINE_CURSOR
   Definitions
      At line 41 in file MINE_CURSOR.s
   Uses
      At line 32 in file MINE_CURSOR.s
Comment: MINE_CURSOR used once
Skip_clear 00000096

Symbol: Skip_clear
   Definitions
      At line 120 in file MINE_CURSOR.s
   Uses
      At line 59 in file MINE_CURSOR.s
      At line 93 in file MINE_CURSOR.s

endline 000001BA

Symbol: endline
   Definitions
      At line 245 in file MINE_CURSOR.s
   Uses
      At line 219 in file MINE_CURSOR.s
Comment: endline used once
first_line 00000156

Symbol: first_line
   Definitions
      At line 208 in file MINE_CURSOR.s
   Uses
      At line 215 in file MINE_CURSOR.s
Comment: first_line used once
mine 000000BA

Symbol: mine
   Definitions
      At line 142 in file MINE_CURSOR.s
   Uses
      At line 133 in file MINE_CURSOR.s
      At line 135 in file MINE_CURSOR.s

mine_memo 000000E0

Symbol: mine_memo
   Definitions
      At line 158 in file MINE_CURSOR.s
   Uses
      At line 165 in file MINE_CURSOR.s
Comment: mine_memo used once
mine_memo2 0000010A



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: mine_memo2
   Definitions
      At line 173 in file MINE_CURSOR.s
   Uses
      At line 180 in file MINE_CURSOR.s
Comment: mine_memo2 used once
minefield 00000052

Symbol: minefield
   Definitions
      At line 84 in file MINE_CURSOR.s
   Uses
      At line 87 in file MINE_CURSOR.s
Comment: minefield used once
minefield2 0000008A

Symbol: minefield2
   Definitions
      At line 109 in file MINE_CURSOR.s
   Uses
      At line 112 in file MINE_CURSOR.s
Comment: minefield2 used once
on_screen 00000126

Symbol: on_screen
   Definitions
      At line 188 in file MINE_CURSOR.s
   Uses
      At line 136 in file MINE_CURSOR.s
      At line 168 in file MINE_CURSOR.s
      At line 182 in file MINE_CURSOR.s

routines 00000000

Symbol: routines
   Definitions
      At line 26 in file MINE_CURSOR.s
   Uses
      None
Comment: routines unused
second_line 0000019C

Symbol: second_line
   Definitions
      At line 235 in file MINE_CURSOR.s
   Uses
      At line 243 in file MINE_CURSOR.s
Comment: second_line used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CURSOR 20000818

Symbol: CURSOR
   Definitions
      At line 11 in file MINE_CURSOR.s
   Uses
      At line 205 in file MINE_CURSOR.s
      At line 233 in file MINE_CURSOR.s

MINE 2000081B

Symbol: MINE
   Definitions
      At line 12 in file MINE_CURSOR.s
   Uses
      At line 155 in file MINE_CURSOR.s
Comment: MINE used once
MINEFIELD 20002000

Symbol: MINEFIELD
   Definitions
      At line 10 in file MINE_CURSOR.s
   Uses
      At line 80 in file MINE_CURSOR.s
      At line 153 in file MINE_CURSOR.s
      At line 203 in file MINE_CURSOR.s

OLD_CURSOR_LOC_X 20001000

Symbol: OLD_CURSOR_LOC_X
   Definitions
      At line 8 in file MINE_CURSOR.s
   Uses
      At line 52 in file MINE_CURSOR.s
      At line 71 in file MINE_CURSOR.s
      At line 100 in file MINE_CURSOR.s
      At line 123 in file MINE_CURSOR.s
      At line 142 in file MINE_CURSOR.s
      At line 188 in file MINE_CURSOR.s
      At line 222 in file MINE_CURSOR.s

OLD_CURSOR_LOC_Y 20001001

Symbol: OLD_CURSOR_LOC_Y
   Definitions
      At line 9 in file MINE_CURSOR.s
   Uses
      At line 49 in file MINE_CURSOR.s
      At line 66 in file MINE_CURSOR.s
      At line 90 in file MINE_CURSOR.s
      At line 95 in file MINE_CURSOR.s
      At line 126 in file MINE_CURSOR.s
      At line 144 in file MINE_CURSOR.s
      At line 190 in file MINE_CURSOR.s
      At line 224 in file MINE_CURSOR.s

OUT_PORTB_DC 40005008

Symbol: OUT_PORTB_DC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 6 in file MINE_CURSOR.s
   Uses
      None
Comment: OUT_PORTB_DC unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADDRESS_CHANGE 00000000

Symbol: ADDRESS_CHANGE
   Definitions
      At line 30 in file MINE_CURSOR.s
   Uses
      At line 74 in file MINE_CURSOR.s
      At line 104 in file MINE_CURSOR.s
      At line 197 in file MINE_CURSOR.s
      At line 230 in file MINE_CURSOR.s

DATA_WRITE 00000000

Symbol: DATA_WRITE
   Definitions
      At line 31 in file MINE_CURSOR.s
   Uses
      At line 85 in file MINE_CURSOR.s
      At line 110 in file MINE_CURSOR.s
      At line 213 in file MINE_CURSOR.s
      At line 241 in file MINE_CURSOR.s

DELAY_1ms 00000000

Symbol: DELAY_1ms
   Definitions
      At line 29 in file MINE_CURSOR.s
   Uses
      None
Comment: DELAY_1ms unused
3 symbols
359 symbols in table
