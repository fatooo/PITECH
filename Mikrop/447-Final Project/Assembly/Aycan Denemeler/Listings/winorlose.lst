


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ; SHOWS THE MEMORY LOCATION TO POSTION AND TYPES OF SHIP
                       S AND CURSORS
    5 00000000         ;*******************************************************
                       ********
    6 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    7 00000000         ; ADC Registers
    8 00000000         
    9 00000000 20001000 
                       SHIP1   EQU              0x20001000
   10 00000000 20001010 
                       SHIP2   EQU              0x20001010
   11 00000000 20001020 
                       SHIP3   EQU              0x20001020
   12 00000000 20001030 
                       SHIP4   EQU              0x20001030
   13 00000000         
   14 00000000 20001050 
                       CURSOR1 EQU              0x20001050
   15 00000000 20001060 
                       CURSOR2 EQU              0x20001060
   16 00000000 20001070 
                       CURSOR3 EQU              0x20001070
   17 00000000 20001080 
                       CURSOR4 EQU              0x20001080
   18 00000000         
   19 00000000         ;*******************************************************
                       ********
   20 00000000         
   21 00000000         ;*******************************************************
                       ******** 
   22 00000000         ;*******************************************************
                       ********
   23 00000000         ; Program section           
   24 00000000         ;*******************************************************
                       ********
   25 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   26 00000000                 AREA             routines, READONLY, CODE
   27 00000000                 THUMB
   28 00000000                 EXPORT           WINORLOSE
   29 00000000                 EXTERN           WINNER
   30 00000000                 EXTERN           LOSER
   31 00000000         
   32 00000000         ;*******************************************************
                       ********
   33 00000000         ; WINORLOSE ROUTINE GIVES WINNER OR LOSER AS OUTPUT
   34 00000000         ;  WINNING CONDITIONS ARE CHECKED 
   35 00000000         ;*******************************************************
                       ******** 
   36 00000000         WINORLOSE
                               PROC
   37 00000000         
   38 00000000 B500            PUSH             {LR}
   39 00000002 B47F            PUSH{R0-R6}
   40 00000004         
   41 00000004 4825            LDR              R0, = SHIP1 ; R0 KEEPS THE LOCA



ARM Macro Assembler    Page 2 


                                                            TION IN THE MEMORY 
                                                             OF SHIPS
   42 00000006         ; DONT CHANGE MEMORY FROM NOW ON
   43 00000006 6801    nextship
                               LDR              R1, [R0]    ; LOAD SHIP1 VALUE 
                                                            
   44 00000008 EA4F 6211       LSR              R2, R1, #24 ; R2 KEEPS THE STAT
                                                            US
   45 0000000C         ;STATUS REGISTERS ARE 01 OR 10  SHOWS CIVILIAN OR BATTLE
                       SHIPS
   46 0000000C 4B24            LDR              R3,= CURSOR1 ; R3 KEEPS CURSOR 
                                                            LOCATION FOR FIRST 
                                                            CURSOR
   47 0000000E 2A01            CMP              R2, #1      ; CHECK IF IT IS BA
                                                            TTLESHIP 
   48 00000010 D001            BEQ              BATTLESHIP
   49 00000012 2A02            CMP              R2, #2
   50 00000014 D018            BEQ              CIVILIAN
   51 00000016         ********
   52 00000016         ; R0 KEEPS THE SHIP LOCATION IN THE MOMORY
   53 00000016         ; R3 KEEPS THE CURSOR LOCATION
   54 00000016         ;R1 KEEPS THE SHIP DATA 
   55 00000016         ; R4 KEEPS THE CURSOR DATA
   56 00000016         ******
   57 00000016         
   58 00000016         BATTLESHIP
   59 00000016 681C            LDR              R4, [R3]
   60 00000018 F001 02F0       AND              R2, R1, #0x0F0 ; r2 now keeps y
                                                             data of the ship
   61 0000001C F004 05F0       AND              R5, R4, #0x0F0 ; R5 KEEPS THE Y
                                                             DATA OF CURSOR
   62 00000020         
   63 00000020 1AAD            SUBS             R5, R2      ;  if the cursor da
                                                            ta on top of the ot
                                                            her data check new
   64 00000022 DB0A            BLT              checknewcursor ;
   65 00000024         
   66 00000024 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
   67 00000026 DC08            BGT              checknewcursor
   68 00000028         
   69 00000028 F001 020F       AND              R2, R1, #0x00F ; r2 now keeps x
                                                             data of the ship
   70 0000002C F004 050F       AND              R5, R4, #0x00F ; R5 KEEPS THE x
                                                             DATA OF CURSOR
   71 00000030         
   72 00000030 1AAD            SUBS             R5, R2      ;  if the cursor da
                                                            ta on top of the ot
                                                            her data check new
   73 00000032 DB02            BLT              checknewcursor ;
   74 00000034         
   75 00000034 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
   76 00000036 DC00            BGT              checknewcursor
   77 00000038         
   78 00000038 E01F            B                checknewship ; a cursor in this
                                                             area has been foun



ARM Macro Assembler    Page 3 


                                                            d check new ship
   79 0000003A         
   80 0000003A         ;;;; CHECK NEXT CURSOR UNTILL A MATCH FOUND ELSE B LOSE 
                       CONDITION     
   81 0000003A         
   82 0000003A F003 05F0 
                       checknewcursor
                               AND              R5,R3, #0xF0 ;   AND IT R5 SHOW
                                                            S THE 2ND DIGIT 
   83 0000003E 2D80            CMP              R5, #0x80   ; CURSOR SHOWS THE 
                                                            LAST CURSOR LOCATIO
                                                            N
   84 00000040 D022            BEQ              LOSE
   85 00000042 F103 030A       ADD              R3,R3, #10  ; INCREASE THE CURS
                                                            OR LOCATION
   86 00000046 E7E6            B                BATTLESHIP
   87 00000048         
   88 00000048         
   89 00000048         
   90 00000048 681C    CIVILIAN
                               LDR              R4, [R3]
   91 0000004A F001 02F0       AND              R2, R1, #0x0F0 ; r2 now keeps y
                                                             data of the ship
   92 0000004E F004 05F0       AND              R5, R4, #0x0F0 ; R5 KEEPS THE Y
                                                             DATA OF CURSOR
   93 00000052         
   94 00000052 1AAD            SUBS             R5, R2      ;  if the cursor da
                                                            ta on top of the ot
                                                            her data check new
   95 00000054 DB0A            BLT              checknewcursor_civil ;
   96 00000056         
   97 00000056 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
   98 00000058 DC08            BGT              checknewcursor_civil
   99 0000005A         
  100 0000005A F001 020F       AND              R2, R1, #0x00F ; r2 now keeps x
                                                             data of the ship
  101 0000005E F004 050F       AND              R5, R4, #0x00F ; R5 KEEPS THE x
                                                             DATA OF CURSOR
  102 00000062         
  103 00000062 1AAD            SUBS             R5, R2      ;  if the cursor da
                                                            ta on top of the ot
                                                            her data check new
  104 00000064 DB02            BLT              checknewcursor_civil ;
  105 00000066         
  106 00000066 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
  107 00000068 DC00            BGT              checknewcursor_civil
  108 0000006A         
  109 0000006A E00D            B                LOSE        ; if the cursor in 
                                                            the civil area bran
                                                            ch to lose
  110 0000006C         
  111 0000006C         
  112 0000006C         ;;;; CHECK NEXT CURSOR UNTILL A MATCH FOUND ELSE B LOSE 
                       CONDITION     
  113 0000006C         



ARM Macro Assembler    Page 4 


  114 0000006C         
  115 0000006C F003 05F0 
                       checknewcursor_civil
                               AND              R5,R3, #0xF0 ;   AND IT R5 SHOW
                                                            S THE 2ND DIGIT 
  116 00000070 2D80            CMP              R5, #0x80   ; CURSOR SHOWS THE 
                                                            LAST CURSOR LOCATIO
                                                            N
  117 00000072 D002            BEQ              checknewship
  118 00000074 F103 030A       ADD              R3,R3, #10  ; INCREASE THE CURS
                                                            OR LOCATION
  119 00000078 E7E6            B                CIVILIAN
  120 0000007A         
  121 0000007A         
  122 0000007A         
  123 0000007A F000 05F0 
                       checknewship
                               AND              R5,R0, #0xF0 ;   AND IT R5 SHOW
                                                            S THE 2ND DIGIT 
  124 0000007E 2D30            CMP              R5, #0x30   ; CURSOR SHOWS THE 
                                                            LAST CURSOR LOCATIO
                                                            N
  125 00000080 D005            BEQ              WIN
  126 00000082 F100 000A       ADD              R0,R0, #10  ; INCREASE THE CURS
                                                            OR LOCATION
  127 00000086 E7BE            B                nextship
  128 00000088         
  129 00000088         
  130 00000088         
  131 00000088 F7FF FFFE 
                       LOSE    BL               LOSER
  132 0000008C E002            B                FINISH
  133 0000008E         
  134 0000008E         
  135 0000008E F7FF FFFE 
                       WIN     BL               WINNER
  136 00000092 E7FF            B                FINISH
  137 00000094         
  138 00000094         FINISH
  139 00000094 BC7F            POP{R0-R6}
  140 00000096 F85D EB04       POP{LR}
  141 0000009A 4770            BX               LR
  142 0000009C                 ENDP
  143 0000009C                 ALIGN
  144 0000009C                 END
              20001000 
              20001050 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\winorlose.d -o.\objects\winorlose.o -I.\RTE\_Target_1
 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\
ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SE
TA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\winorlose.lst WINOR
LOSE.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLESHIP 00000016

Symbol: BATTLESHIP
   Definitions
      At line 58 in file WINORLOSE.s
   Uses
      At line 48 in file WINORLOSE.s
      At line 86 in file WINORLOSE.s

CIVILIAN 00000048

Symbol: CIVILIAN
   Definitions
      At line 90 in file WINORLOSE.s
   Uses
      At line 50 in file WINORLOSE.s
      At line 119 in file WINORLOSE.s

FINISH 00000094

Symbol: FINISH
   Definitions
      At line 138 in file WINORLOSE.s
   Uses
      At line 132 in file WINORLOSE.s
      At line 136 in file WINORLOSE.s

LOSE 00000088

Symbol: LOSE
   Definitions
      At line 131 in file WINORLOSE.s
   Uses
      At line 84 in file WINORLOSE.s
      At line 109 in file WINORLOSE.s

WIN 0000008E

Symbol: WIN
   Definitions
      At line 135 in file WINORLOSE.s
   Uses
      At line 125 in file WINORLOSE.s
Comment: WIN used once
WINORLOSE 00000000

Symbol: WINORLOSE
   Definitions
      At line 36 in file WINORLOSE.s
   Uses
      At line 28 in file WINORLOSE.s
Comment: WINORLOSE used once
checknewcursor 0000003A

Symbol: checknewcursor
   Definitions
      At line 82 in file WINORLOSE.s
   Uses
      At line 64 in file WINORLOSE.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 67 in file WINORLOSE.s
      At line 73 in file WINORLOSE.s
      At line 76 in file WINORLOSE.s

checknewcursor_civil 0000006C

Symbol: checknewcursor_civil
   Definitions
      At line 115 in file WINORLOSE.s
   Uses
      At line 95 in file WINORLOSE.s
      At line 98 in file WINORLOSE.s
      At line 104 in file WINORLOSE.s
      At line 107 in file WINORLOSE.s

checknewship 0000007A

Symbol: checknewship
   Definitions
      At line 123 in file WINORLOSE.s
   Uses
      At line 78 in file WINORLOSE.s
      At line 117 in file WINORLOSE.s

nextship 00000006

Symbol: nextship
   Definitions
      At line 43 in file WINORLOSE.s
   Uses
      At line 127 in file WINORLOSE.s
Comment: nextship used once
routines 00000000

Symbol: routines
   Definitions
      At line 26 in file WINORLOSE.s
   Uses
      None
Comment: routines unused
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CURSOR1 20001050

Symbol: CURSOR1
   Definitions
      At line 14 in file WINORLOSE.s
   Uses
      At line 46 in file WINORLOSE.s
Comment: CURSOR1 used once
CURSOR2 20001060

Symbol: CURSOR2
   Definitions
      At line 15 in file WINORLOSE.s
   Uses
      None
Comment: CURSOR2 unused
CURSOR3 20001070

Symbol: CURSOR3
   Definitions
      At line 16 in file WINORLOSE.s
   Uses
      None
Comment: CURSOR3 unused
CURSOR4 20001080

Symbol: CURSOR4
   Definitions
      At line 17 in file WINORLOSE.s
   Uses
      None
Comment: CURSOR4 unused
SHIP1 20001000

Symbol: SHIP1
   Definitions
      At line 9 in file WINORLOSE.s
   Uses
      At line 41 in file WINORLOSE.s
Comment: SHIP1 used once
SHIP2 20001010

Symbol: SHIP2
   Definitions
      At line 10 in file WINORLOSE.s
   Uses
      None
Comment: SHIP2 unused
SHIP3 20001020

Symbol: SHIP3
   Definitions
      At line 11 in file WINORLOSE.s
   Uses
      None
Comment: SHIP3 unused
SHIP4 20001030

Symbol: SHIP4



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 12 in file WINORLOSE.s
   Uses
      None
Comment: SHIP4 unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LOSER 00000000

Symbol: LOSER
   Definitions
      At line 30 in file WINORLOSE.s
   Uses
      At line 131 in file WINORLOSE.s
Comment: LOSER used once
WINNER 00000000

Symbol: WINNER
   Definitions
      At line 29 in file WINORLOSE.s
   Uses
      At line 135 in file WINORLOSE.s
Comment: WINNER used once
2 symbols
357 symbols in table
