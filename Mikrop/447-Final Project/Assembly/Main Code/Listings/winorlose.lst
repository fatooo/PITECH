


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ; SHOWS THE MEMORY LOCATION TO POSTION AND TYPES OF SHIP
                       S AND CURSORS
    5 00000000         ;*******************************************************
                       ********
    6 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    7 00000000         
    8 00000000 20001100 
                       SHIP_MEMO
                               EQU              0x20001100  ;1100-1149
    9 00000000 20001150 
                       MINE_MEMO
                               EQU              0x20001150  ;1150-1199
   10 00000000         
   11 00000000         
   12 00000000 20001100 
                       SHIP1   EQU              0x20001100
   13 00000000 20001110 
                       SHIP2   EQU              0x20001110
   14 00000000 20001120 
                       SHIP3   EQU              0x20001120
   15 00000000 20001130 
                       SHIP4   EQU              0x20001130
   16 00000000         
   17 00000000 20001150 
                       CURSOR1 EQU              0x20001150
   18 00000000 20001160 
                       CURSOR2 EQU              0x20001160
   19 00000000 20001170 
                       CURSOR3 EQU              0x20001170
   20 00000000 20001180 
                       CURSOR4 EQU              0x20001180
   21 00000000         
   22 00000000         ;*******************************************************
                       ********
   23 00000000         ; Directives - This Data Section is part of the code
   24 00000000         ; It is in the read only section  so values cannot be ch
                       anged.
   25 00000000         ;*******************************************************
                       ******** 
   26 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   27 00000000                 AREA             sdata, DATA, READONLY
   28 00000000                 THUMB
   29 00000000         
   30 00000000         ;*******************************************************
                       ********
   31 00000000         ; Program section           
   32 00000000         ;*******************************************************
                       ********
   33 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   34 00000000                 AREA             routines, READONLY, CODE
   35 00000000                 THUMB
   36 00000000                 EXTERN           WINNER
   37 00000000                 EXTERN           LOSER
   38 00000000                 EXPORT           WINORLOSE
   39 00000000         ;*******************************************************



ARM Macro Assembler    Page 2 


                       ********
   40 00000000         ; WINORLOSE ROUTINE GIVES WINNER OR LOSER AS OUTPUT
   41 00000000         ;  WINNING CONDITIONS ARE CHECKED 
   42 00000000         ;*******************************************************
                       ******** 
   43 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   44 00000000         WINORLOSE
                               PROC
   45 00000000         
   46 00000000 B500            PUSH             {LR}
   47 00000002 B47F            PUSH             {R0-R6}
   48 00000004         
   49 00000004 4825            LDR              R0, = SHIP1 ; R0 KEEPS THE LOCA
                                                            TION IN THE MEMORY 
                                                             OF SHIPS
   50 00000006         ; DONT CHANGE MEMORY FROM NOW ON
   51 00000006 6801    nextship
                               LDR              R1, [R0]    ; LOAD SHIP1 VALUE 
                                                            
   52 00000008 EA4F 6211       LSR              R2, R1, #24 ; R2 KEEPS THE STAT
                                                            US
   53 0000000C         ; STATUS REGISTERS ARE 01 OR 10  SHOWS CIVILIAN OR BATTL
                       ESHIPS
   54 0000000C 4B24            LDR              R3,= CURSOR1 ; R3 KEEPS CURSOR 
                                                            LOCATION FOR FIRST 
                                                            CURSOR
   55 0000000E 2A10            CMP              R2, #0x10   ; CHECK IF IT IS BA
                                                            TTLESHIP 
   56 00000010 D001            BEQ              BATTLESHIP
   57 00000012 2A01            CMP              R2, #0x01
   58 00000014 D018            BEQ              CIVILIAN
   59 00000016         ;*******************************************************
                       ********
   60 00000016         ; R0 KEEPS THE SHIP LOCATION IN THE MOMORY
   61 00000016         ; R3 KEEPS THE CURSOR LOCATION
   62 00000016         ;R1 KEEPS THE SHIP DATA 
   63 00000016         ; R4 KEEPS THE CURSOR DATA
   64 00000016         ;*******************************************************
                       ********
   65 00000016         ;LABEL  DIRECTIVE VALUE     COMMENT
   66 00000016 681C    BATTLESHIP
                               LDR              R4, [R3]
   67 00000018 F401 427F       AND              R2, R1, #0x0FF00 ; r2 now keeps
                                                             y data of the ship
                                                            
   68 0000001C F404 457F       AND              R5, R4, #0x0FF00 ; R5 KEEPS THE
                                                             Y DATA OF CURSOR
   69 00000020         
   70 00000020 1AAD            SUBS             R5, R2      ; if the cursor dat
                                                            a on top of the oth
                                                            er data check new
   71 00000022 DB0A            BLT              checknewcursor ;
   72 00000024         
   73 00000024 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
   74 00000026 DC08            BGT              checknewcursor
   75 00000028         
   76 00000028 F001 02FF       AND              R2, R1, #0x00FF ; r2 now keeps 



ARM Macro Assembler    Page 3 


                                                            x data of the ship
   77 0000002C F004 05FF       AND              R5, R4, #0x00FF ; R5 KEEPS THE 
                                                            x DATA OF CURSOR
   78 00000030         
   79 00000030 1AAD            SUBS             R5, R2      ; if the cursor dat
                                                            a on top of the oth
                                                            er data check new
   80 00000032 DB02            BLT              checknewcursor ;
   81 00000034         
   82 00000034 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
   83 00000036 DC00            BGT              checknewcursor
   84 00000038         
   85 00000038 E01F            B                checknewship ; a cursor in this
                                                             area has been foun
                                                            d check new ship
   86 0000003A         
   87 0000003A         ;;;; CHECK NEXT CURSOR UNTILL A MATCH FOUND ELSE B LOSE 
                       CONDITION     
   88 0000003A         
   89 0000003A         checknewcursor
   90 0000003A F003 05F0       AND              R5,R3, #0xF0 ; AND IT R5 SHOWS 
                                                            THE 2ND DIGIT 
   91 0000003E 2D80            CMP              R5, #0x80   ; CURSOR SHOWS THE 
                                                            LAST CURSOR LOCATIO
                                                            N
   92 00000040 D022            BEQ              LOSE
   93 00000042 F103 0310       ADD              R3,R3, #0x10 ; INCREASE THE CUR
                                                            SOR LOCATION
   94 00000046 E7E6            B                BATTLESHIP
   95 00000048         
   96 00000048         
   97 00000048         
   98 00000048 681C    CIVILIAN
                               LDR              R4, [R3]
   99 0000004A F401 427F       AND              R2, R1, #0x0Ff00 ; r2 now keeps
                                                             y data of the ship
                                                            
  100 0000004E F404 457F       AND              R5, R4, #0x0Ff00 ; R5 KEEPS THE
                                                             Y DATA OF CURSOR
  101 00000052         
  102 00000052 1AAD            SUBS             R5, R2      ;  if the cursor da
                                                            ta on top of the ot
                                                            her data check new
  103 00000054 DB0A            BLT              checknewcursor_civil ;
  104 00000056         
  105 00000056 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
  106 00000058 DC08            BGT              checknewcursor_civil
  107 0000005A         
  108 0000005A F001 02FF       AND              R2, R1, #0x00Ff ; r2 now keeps 
                                                            x data of the ship
  109 0000005E F004 05FF       AND              R5, R4, #0x00Ff ; R5 KEEPS THE 
                                                            x DATA OF CURSOR
  110 00000062         
  111 00000062 1AAD            SUBS             R5, R2      ; if the cursor dat
                                                            a on top of the oth



ARM Macro Assembler    Page 4 


                                                            er data check new
  112 00000064 DB02            BLT              checknewcursor_civil ;
  113 00000066         
  114 00000066 2D08            CMP              R5, #8      ; COMPARE IF THE CU
                                                            RSOR IN THE SHIP AR
                                                            EA 
  115 00000068 DC00            BGT              checknewcursor_civil
  116 0000006A         
  117 0000006A E00D            B                LOSE        ; if the cursor in 
                                                            the civil area bran
                                                            ch to lose
  118 0000006C         
  119 0000006C         
  120 0000006C         ;;;; CHECK NEXT CURSOR UNTILL A MATCH FOUND ELSE B LOSE 
                       CONDITION     
  121 0000006C         
  122 0000006C         
  123 0000006C         checknewcursor_civil
  124 0000006C F003 05F0       AND              R5,R3, #0xF0 ; AND IT R5 SHOWS 
                                                            THE 2ND DIGIT 
  125 00000070 2D80            CMP              R5, #0x80   ; CURSOR SHOWS THE 
                                                            LAST CURSOR LOCATIO
                                                            N
  126 00000072 D002            BEQ              checknewship
  127 00000074 F103 0310       ADD              R3,R3, #0x10 ; INCREASE THE CUR
                                                            SOR LOCATION
  128 00000078 E7E6            B                CIVILIAN
  129 0000007A         
  130 0000007A         
  131 0000007A         
  132 0000007A         checknewship
  133 0000007A F000 05F0       AND              R5,R0, #0xF0 ; AND IT R5 SHOWS 
                                                            THE 2ND DIGIT 
  134 0000007E 2D30            CMP              R5, #0x30   ; SHIP SHOWS THE LA
                                                            ST SHIP LOCATION
  135 00000080 D005            BEQ              WIN
  136 00000082 F100 0010       ADD              R0,R0, #0x10 ; INCREASE THE CUR
                                                            SOR LOCATION
  137 00000086 E7BE            B                nextship
  138 00000088         
  139 00000088 F7FF FFFE 
                       LOSE    BL               LOSER
  140 0000008C E002            B                FINISH
  141 0000008E         
  142 0000008E         
  143 0000008E F7FF FFFE 
                       WIN     BL               WINNER
  144 00000092 E7FF            B                FINISH
  145 00000094         
  146 00000094         FINISH
  147 00000094 BC7F            POP              {R0-R6}
  148 00000096 F85D EB04       POP              {LR}
  149 0000009A 4770            BX               LR
  150 0000009C                 ENDP
  151 0000009C                 ALIGN
  152 0000009C                 END
              20001100 
              20001150 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int



ARM Macro Assembler    Page 5 


erwork --depend=.\objects\winorlose.d -o.\objects\winorlose.o -I.\RTE\_Target_1
 -ID:\Work\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -ID:\Work\ARM\CM
SIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526
" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\winorlose.lst WINORLOSE.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

sdata 00000000

Symbol: sdata
   Definitions
      At line 27 in file WINORLOSE.s
   Uses
      None
Comment: sdata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BATTLESHIP 00000016

Symbol: BATTLESHIP
   Definitions
      At line 66 in file WINORLOSE.s
   Uses
      At line 56 in file WINORLOSE.s
      At line 94 in file WINORLOSE.s

CIVILIAN 00000048

Symbol: CIVILIAN
   Definitions
      At line 98 in file WINORLOSE.s
   Uses
      At line 58 in file WINORLOSE.s
      At line 128 in file WINORLOSE.s

FINISH 00000094

Symbol: FINISH
   Definitions
      At line 146 in file WINORLOSE.s
   Uses
      At line 140 in file WINORLOSE.s
      At line 144 in file WINORLOSE.s

LOSE 00000088

Symbol: LOSE
   Definitions
      At line 139 in file WINORLOSE.s
   Uses
      At line 92 in file WINORLOSE.s
      At line 117 in file WINORLOSE.s

WIN 0000008E

Symbol: WIN
   Definitions
      At line 143 in file WINORLOSE.s
   Uses
      At line 135 in file WINORLOSE.s
Comment: WIN used once
WINORLOSE 00000000

Symbol: WINORLOSE
   Definitions
      At line 44 in file WINORLOSE.s
   Uses
      At line 38 in file WINORLOSE.s
Comment: WINORLOSE used once
checknewcursor 0000003A

Symbol: checknewcursor
   Definitions
      At line 89 in file WINORLOSE.s
   Uses
      At line 71 in file WINORLOSE.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 74 in file WINORLOSE.s
      At line 80 in file WINORLOSE.s
      At line 83 in file WINORLOSE.s

checknewcursor_civil 0000006C

Symbol: checknewcursor_civil
   Definitions
      At line 123 in file WINORLOSE.s
   Uses
      At line 103 in file WINORLOSE.s
      At line 106 in file WINORLOSE.s
      At line 112 in file WINORLOSE.s
      At line 115 in file WINORLOSE.s

checknewship 0000007A

Symbol: checknewship
   Definitions
      At line 132 in file WINORLOSE.s
   Uses
      At line 85 in file WINORLOSE.s
      At line 126 in file WINORLOSE.s

nextship 00000006

Symbol: nextship
   Definitions
      At line 51 in file WINORLOSE.s
   Uses
      At line 137 in file WINORLOSE.s
Comment: nextship used once
routines 00000000

Symbol: routines
   Definitions
      At line 34 in file WINORLOSE.s
   Uses
      None
Comment: routines unused
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CURSOR1 20001150

Symbol: CURSOR1
   Definitions
      At line 17 in file WINORLOSE.s
   Uses
      At line 54 in file WINORLOSE.s
Comment: CURSOR1 used once
CURSOR2 20001160

Symbol: CURSOR2
   Definitions
      At line 18 in file WINORLOSE.s
   Uses
      None
Comment: CURSOR2 unused
CURSOR3 20001170

Symbol: CURSOR3
   Definitions
      At line 19 in file WINORLOSE.s
   Uses
      None
Comment: CURSOR3 unused
CURSOR4 20001180

Symbol: CURSOR4
   Definitions
      At line 20 in file WINORLOSE.s
   Uses
      None
Comment: CURSOR4 unused
MINE_MEMO 20001150

Symbol: MINE_MEMO
   Definitions
      At line 9 in file WINORLOSE.s
   Uses
      None
Comment: MINE_MEMO unused
SHIP1 20001100

Symbol: SHIP1
   Definitions
      At line 12 in file WINORLOSE.s
   Uses
      At line 49 in file WINORLOSE.s
Comment: SHIP1 used once
SHIP2 20001110

Symbol: SHIP2
   Definitions
      At line 13 in file WINORLOSE.s
   Uses
      None
Comment: SHIP2 unused
SHIP3 20001120

Symbol: SHIP3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 14 in file WINORLOSE.s
   Uses
      None
Comment: SHIP3 unused
SHIP4 20001130

Symbol: SHIP4
   Definitions
      At line 15 in file WINORLOSE.s
   Uses
      None
Comment: SHIP4 unused
SHIP_MEMO 20001100

Symbol: SHIP_MEMO
   Definitions
      At line 8 in file WINORLOSE.s
   Uses
      None
Comment: SHIP_MEMO unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LOSER 00000000

Symbol: LOSER
   Definitions
      At line 37 in file WINORLOSE.s
   Uses
      At line 139 in file WINORLOSE.s
Comment: LOSER used once
WINNER 00000000

Symbol: WINNER
   Definitions
      At line 36 in file WINORLOSE.s
   Uses
      At line 143 in file WINORLOSE.s
Comment: WINNER used once
2 symbols
360 symbols in table
