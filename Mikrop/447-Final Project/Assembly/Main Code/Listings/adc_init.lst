


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    6 00000000         ; ADC Registers
    7 00000000 400FE638 
                       RCGCADC EQU              0x400FE638  ; ADC clock registe
                                                            r
    8 00000000         ; ADC0 base address EQU 0x40038000
    9 00000000 40038000 
                       ADC0_ACTSS
                               EQU              0x40038000  ; Sample sequencer 
                                                            (ADC0 base address)
                                                            
   10 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
   11 00000000 40038008 
                       ADC0_IM EQU              0x40038008  ; Interrupt select
   12 00000000 40038034 
                       ADC0_ISC
                               EQU              0x40038034  ; Interrupt status 
                                                            and clear
   13 00000000 40038014 
                       ADC0_EMUX
                               EQU              0x40038014  ; Trigger select
   14 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
   15 00000000 400380A0 
                       ADC0_SSMUX3
                               EQU              0x400380A0  ; Input channel sel
                                                            ect
   16 00000000 400380A4 
                       ADC0_SSCTL3
                               EQU              0x400380A4  ; Sample sequence c
                                                            ontrol
   17 00000000 400380A8 
                       ADC0_SSFIFO3
                               EQU              0x400380A8  ; Channel 3 results
                                                            
   18 00000000 40038FC4 
                       ADC0_PP EQU              0x40038FC4  ; Sample rate
   19 00000000 40038030 
                       ADC0_SAC
                               EQU              0x40038030  ; Sample rate
   20 00000000         ; GPIO Registers
   21 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   22 00000000         ; PORT E base address EQU 0x40024000
   23 00000000 4002451C 
                       PORTE_DEN
                               EQU              0x4002451C  ; Digital Enable
   24 00000000 4002452C 



ARM Macro Assembler    Page 2 


                       PORTE_PCTL
                               EQU              0x4002452C  ; Alternative funct
                                                            ion configuration
   25 00000000 40024420 
                       PORTE_AFSEL
                               EQU              0x40024420  ; Alternate functio
                                                            n select
   26 00000000 40024528 
                       PORTE_AMSEL
                               EQU              0x40024528  ; Enable analog
   27 00000000 20004000 
                       data    EQU              0x20004000
   28 00000000         
   29 00000000         ***************************
   30 00000000         ;ADC1 FOR SAMPLING AIN1
   31 00000000         ***********************
   32 00000000 40039000 
                       ADC1_ACTSS
                               EQU              0x40039000  ; Sample sequencer 
                                                            (ADC1 base address)
                                                            
   33 00000000 40039004 
                       ADC1_RIS
                               EQU              0x40039004  ; Interrupt status
   34 00000000 40039008 
                       ADC1_IM EQU              0x40039008  ; Interrupt select
   35 00000000 40039034 
                       ADC1_ISC
                               EQU              0x40039034  ; Interrupt status 
                                                            and clear
   36 00000000 40039014 
                       ADC1_EMUX
                               EQU              0x40039014  ; Trigger select
   37 00000000 40039028 
                       ADC1_PSSI
                               EQU              0x40039028  ; Initiate sample
   38 00000000 400390A0 
                       ADC1_SSMUX3
                               EQU              0x400390A0  ; Input channel sel
                                                            ect
   39 00000000 400390A4 
                       ADC1_SSCTL3
                               EQU              0x400390A4  ; Sample sequence c
                                                            ontrol
   40 00000000 400390A8 
                       ADC1_SSFIFO3
                               EQU              0x400390A8  ; Channel 3 results
                                                            
   41 00000000 40039FC4 
                       ADC1_PP EQU              0x40039FC4  ; Sample rate 
   42 00000000 40039030 
                       ADC1_SAC
                               EQU              0x40039030  ; Sample rate
   43 00000000         ; Start clocks for features to be used
   44 00000000         
   45 00000000         ;*******************************************************
                       ********
   46 00000000         ; INITIALIZE ADC FOR AIN0 AND AIN1 
   47 00000000         ;  PE3 AND PE2 IS GOIN TO BE USED



ARM Macro Assembler    Page 3 


   48 00000000         ;*******************************************************
                       ******** 
   49 00000000         ;*******************************************************
                       ********
   50 00000000         ; Program section           
   51 00000000         ;*******************************************************
                       ********
   52 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   53 00000000                 AREA             routines, READONLY, CODE
   54 00000000                 THUMB
   55 00000000                 EXPORT           ADC_INIT
   56 00000000         
   57 00000000         ;*******************************************************
                       ********
   58 00000000         ; ADC_INIT FUNCTION INITIALIZED ADC1 AND ADC0
   59 00000000         ;*******************************************************
                       ******** 
   60 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT    
   61 00000000         ADC_INIT
                               PROC
   62 00000000         
   63 00000000 B500            PUSH             {LR}
   64 00000002 496E            LDR              R1, =RCGCADC 
                                                            ; Turn on ADC clock
                                                            
   65 00000004 6808            LDR              R0, [R1]
   66 00000006 F040 0003       ORR              R0, R0, #0x03 ; set bit 0 to en
                                                            able ADC0 AND ADC1 
                                                            clock
   67 0000000A 6008            STR              R0, [R1]
   68 0000000C BF00            NOP
   69 0000000E BF00            NOP
   70 00000010 BF00            NOP                          ; Let clock stabili
                                                            ze
   71 00000012 496B            LDR              R1, =RCGCGPIO ; Turn on GPIO cl
                                                            ock
   72 00000014 6808            LDR              R0, [R1]
   73 00000016 F040 0010       ORR              R0, R0, #0x10 ; set bit 4 to en
                                                            able port E clock
   74 0000001A 6008            STR              R0, [R1]
   75 0000001C BF00            NOP
   76 0000001E BF00            NOP
   77 00000020 BF00            NOP                          ; Let clock stabili
                                                            ze
   78 00000022         ; Setup GPIO to make PE3 input for ADC0
   79 00000022         ; Enable alternate functions
   80 00000022 4968            LDR              R1, =PORTE_AFSEL
   81 00000024 6808            LDR              R0, [R1]
   82 00000026 F040 0006       ORR              R0, R0, #0x06 ; set bit 3 to en
                                                            able alt functions 
                                                            on PE3 AND SET BIT 
                                                            2 TO ENABLE PE2
   83 0000002A 6008            STR              R0, [R1]
   84 0000002C         ; PCTL does not have to be configured
   85 0000002C         ; since ADC0 is automatically selected when
   86 0000002C         ; port pin is set to analog. 
   87 0000002C         ; Disable digital on PE3
   88 0000002C 4966            LDR              R1, =PORTE_DEN
   89 0000002E 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 4 


   90 00000030 F020 0006       BIC              R0, R0, #0x06 ; clear bit 3 to 
                                                            disable analog on P
                                                            E3 AND PE2
   91 00000034 6008            STR              R0, [R1]
   92 00000036         ; Enable analog on PE3
   93 00000036 4965            LDR              R1, =PORTE_AMSEL
   94 00000038 6808            LDR              R0, [R1]
   95 0000003A F040 0006       ORR              R0, R0, #0x06 ; set bit 3 to en
                                                            able analog on PE3
   96 0000003E 6008            STR              R0, [R1]
   97 00000040         ; Disable sequencer while ADC setup
   98 00000040         
   99 00000040         
  100 00000040         ;;;ENABLE ADC0 AND ADC PORTS 
  101 00000040         ;;ADC SETUPS WILL BE DONE 
  102 00000040         
  103 00000040         
  104 00000040 4963            LDR              R1, =ADC0_ACTSS
  105 00000042 6808            LDR              R0, [R1]
  106 00000044 F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  107 00000048 6008            STR              R0, [R1]
  108 0000004A         ; Select trigger source
  109 0000004A 4962            LDR              R1, =ADC0_EMUX
  110 0000004C 6808            LDR              R0, [R1]
  111 0000004E F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select SOFTW
                                                            ARE trigger
  112 00000052 6008            STR              R0, [R1]
  113 00000054         ; Select input channel
  114 00000054 4960            LDR              R1, =ADC0_SSMUX3
  115 00000056 6808            LDR              R0, [R1]
  116 00000058         ;BIC R0, R0, #0x000F ; clear bits 3:0 to select AIN2
  117 00000058 F040 0002       ORR              R0, R0, #0x0002
  118 0000005C F020 000D       BIC              R0, R0, #0x000D
  119 00000060 6008            STR              R0, [R1]
  120 00000062         ; Config sample sequence
  121 00000062 495E            LDR              R1, =ADC0_SSCTL3
  122 00000064 6808            LDR              R0, [R1]
  123 00000066 F040 0006       ORR              R0, R0, #0x06 
                                                            ; set bit 1 (END0)
  124 0000006A 6008            STR              R0, [R1]
  125 0000006C         ; Set sample rate
  126 0000006C 495C            LDR              R1, =ADC0_PP
  127 0000006E 6808            LDR              R0, [R1]
  128 00000070 F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125k sps
  129 00000074 6008            STR              R0, [R1]
  130 00000076         ; Done with setup, enable sequencer
  131 00000076 495B            LDR              R1, =ADC0_SAC
  132 00000078 6808            LDR              R0, [R1]
  133 0000007A F040 0002       ORR              R0, R0, #0x02
  134 0000007E 6008            STR              R0, [R1]
  135 00000080         
  136 00000080 4953            LDR              R1, =ADC0_ACTSS
  137 00000082 6808            LDR              R0, [R1]
  138 00000084 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  139 00000088 6008            STR              R0, [R1]    ; sampling enabled 



ARM Macro Assembler    Page 5 


                                                            but not initiated y
                                                            et
  140 0000008A         
  141 0000008A         
  142 0000008A         
  143 0000008A         ; ADC1 INITIALIZATION
  144 0000008A         
  145 0000008A 4957            LDR              R1, =ADC1_ACTSS
  146 0000008C 6808            LDR              R0, [R1]
  147 0000008E F020 0008       BIC              R0, R0, #0x08 ; clear bit 3 to 
                                                            disable seq 3
  148 00000092 6008            STR              R0, [R1]
  149 00000094         ; Select trigger source
  150 00000094 4955            LDR              R1, =ADC1_EMUX
  151 00000096 6808            LDR              R0, [R1]
  152 00000098 F420 4070       BIC              R0, R0, #0xF000 ; clear bits 15
                                                            :12 to select SOFTW
                                                            ARE trigger
  153 0000009C 6008            STR              R0, [R1]
  154 0000009E         ; Select input channel
  155 0000009E 4954            LDR              R1, =ADC1_SSMUX3
  156 000000A0 6808            LDR              R0, [R1]
  157 000000A2 F040 0001       ORR              R0 , #0x1   ; 
  158 000000A6 F020 000E       BIC              R0, R0, #0x000E ; clear bits 3:
                                                            0 to select AIN1  0
                                                            0001
  159 000000AA 6008            STR              R0, [R1]
  160 000000AC         ; Config sample sequence
  161 000000AC 4951            LDR              R1, =ADC1_SSCTL3
  162 000000AE 6808            LDR              R0, [R1]
  163 000000B0 F040 0006       ORR              R0, R0, #0x06 
                                                            ; set bit 1 (END0)
  164 000000B4 6008            STR              R0, [R1]
  165 000000B6         ; Set sample rate
  166 000000B6 4950            LDR              R1, =ADC1_PP
  167 000000B8 6808            LDR              R0, [R1]
  168 000000BA F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125k sps
  169 000000BE 6008            STR              R0, [R1]
  170 000000C0         ; Done with setup, enable sequencer
  171 000000C0 494E            LDR              R1, =ADC1_SAC
  172 000000C2 6808            LDR              R0, [R1]
  173 000000C4 F040 0002       ORR              R0, R0, #0x02 ; set bit 3 to en
                                                            able seq 3
  174 000000C8 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  175 000000CA 4947            LDR              R1, =ADC1_ACTSS
  176 000000CC 6808            LDR              R0, [R1]
  177 000000CE F040 0008       ORR              R0, R0, #0x08 ; set bit 3 to en
                                                            able seq 3
  178 000000D2 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  179 000000D4         
  180 000000D4 4949            LDR              R1, =ADC1_SAC
  181 000000D6 6808            LDR              R0, [R1]
  182 000000D8 F040 0002       ORR              R0, R0, #0x02 ; set bit 3 to en
                                                            able seq 3



ARM Macro Assembler    Page 6 


  183 000000DC 6008            STR              R0, [R1]    ; sampling enabled 
                                                            but not initiated y
                                                            et
  184 000000DE F85D EB04       POP              {LR}
  185 000000E2 4770            BX               LR
  186 000000E4                 ENDP                         ;; END OF INITIALIZ
                                                            ATION
  187 000000E4         
  188 000000E4         
  189 000000E4         
  190 000000E4         ;*******************************************************
                       ********
  191 000000E4         ; ADC_READ_SHIP FUNCTION READS THE AIN0 AND AIN1 DATA 
  192 000000E4         ;   RETURNS YDATA XDATA IN R4 REGISTER
  193 000000E4         ;  COMPUTATION FOR SHIP PLACEMENT MADE IN THIS SUBMODULE
                       
  194 000000E4         ;*******************************************************
                       ******** 
  195 000000E4         ;LABEL  DIRECTIVE VALUE     COMMENT      
  196 000000E4         
  197 000000E4                 EXPORT           ADC_READ_SHIP
  198 000000E4         
  199 000000E4         ADC_READ_SHIP
                               PROC
  200 000000E4 B500            PUSH             {LR}
  201 000000E6         *******************************
  202 000000E6         ; READ AIN0 FIRST 
  203 000000E6         ; PE3 CONTROLS X DATA
  204 000000E6         ; VERTICAL MOVEMENT
  205 000000E6         ; KEEPS DATA IN R5
  206 000000E6         *******************************
  207 000000E6         
  208 000000E6 4B46            LDR              R3, =ADC0_RIS 
                                                            ; interrupt address
                                                            
  209 000000E8 4C46            LDR              R4, =ADC0_SSFIFO3 
                                                            ; result address
  210 000000EA 4A47            LDR              R2, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
  211 000000EC 4E47            LDR              R6,= ADC0_ISC ; interrupt statu
                                                            s and clear
  212 000000EE         ; initiate sampling by enabling sequencer 3 in ADC0_PSSI
                       
  213 000000EE 6810    Smpl0   LDR              R0, [R2]
  214 000000F0 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  215 000000F4 6010            STR              R0, [R2]
  216 000000F6         ; check for sample complete (bit 3 of ADC0_RIS set)
  217 000000F6 6818    Cont0   LDR              R0, [R3]
  218 000000F8 F010 0008       ANDS             R0, R0, #8  ;RIS bit
  219 000000FC D0FB            BEQ              Cont0
  220 000000FE 6825            LDR              R5,[R4]     ; R5 KEEPS THE ADC0
                                                             READING
  221 00000100 F04F 0008       MOV              R0, #8
  222 00000104 4E41            LDR              R6,= ADC0_ISC
  223 00000106 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  224 00000108         *******************************
  225 00000108         ; READ AIN1 



ARM Macro Assembler    Page 7 


  226 00000108         ; PE2 CONTROLS Y DATA
  227 00000108         ; HORIZONTAL MOVEMENT
  228 00000108         ; KEEPS DATA IN R1
  229 00000108         *******************************
  230 00000108         
  231 00000108         ADC1_READ
  232 00000108 4B41            LDR              R3, =ADC1_RIS 
                                                            ; interrupt address
                                                            
  233 0000010A 4C42            LDR              R4, =ADC1_SSFIFO3 
                                                            ; result address
  234 0000010C 4A42            LDR              R2, =ADC1_PSSI ; sample sequenc
                                                            e initiate address
  235 0000010E 4E43            LDR              R6,= ADC1_ISC ; interrupt statu
                                                            s and clear
  236 00000110         
  237 00000110 6810    Smpl1   LDR              R0, [R2]
  238 00000112 F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  239 00000116 6010            STR              R0, [R2]
  240 00000118         ; check for sample complete (bit 3 of ADC0_RIS set)
  241 00000118 6818    Cont1   LDR              R0, [R3]
  242 0000011A F010 0008       ANDS             R0, R0, #8  ;RIS bit
  243 0000011E D0FB            BEQ              Cont1
  244 00000120 6821            LDR              R1,[R4]     ; R1 KEEPS THE ADC1
                                                             READING
  245 00000122 F04F 0008       MOV              R0, #8
  246 00000126 4E3D            LDR              R6,= ADC1_ISC
  247 00000128 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  248 0000012A         
  249 0000012A         ****************
  250 0000012A         ; R1 KEEPS AIN1 READING
  251 0000012A         ; R5 KEEPS AIN0 READING
  252 0000012A         ; XDATA AND YDATA TRANSFORMS TO THE PIXEL VALUE
  253 0000012A         ; R4 KEEPS [YDATA, XDATA] 
  254 0000012A         ; LEAST SIGNIFICANT 4 BITS SHOWS X DATA
  255 0000012A         ; BITS FROM 3-7 SHOWS YDATA
  256 0000012A         
  257 0000012A         **********
  258 0000012A         
  259 0000012A         COMPUTE
  260 0000012A         
  261 0000012A F04F 0349       LDR              R3, =73     ; R3 IS THE DIVISOR
                                                            
  262 0000012E FBB5 F5F3       UDIV             R5, R5, R3  ; 
  263 00000132 F105 0506       ADD              R5, #6      ; R5 KEEPS THE X
  264 00000136         
  265 00000136 F04F 03AA       LDR              R3, =170    ;
  266 0000013A FBB1 F1F3       UDIV             R1, R1, R3  ;
  267 0000013E F101 0108       ADD              R1, #8      ;  ; R1 KEEPS THE Y
                                                             DATA
  268 00000142         
  269 00000142         
  270 00000142 EA4F 2101       LSL              R1,R1,#8    ; SHIFT Y DATA
  271 00000146 EB01 0405       ADD              R4, R1, R5  ; ADD XDATA YDATA 
  272 0000014A         ; R4 IS IN FROM [YDATA, XDATA]
  273 0000014A         
  274 0000014A         



ARM Macro Assembler    Page 8 


  275 0000014A         
  276 0000014A F85D EB04       POP{LR}                      ; END OF THE OPERAT
                                                            ION
  277 0000014E 4770            BX               LR
  278 00000150         
  279 00000150                 ENDP                         ; RETURN R4 
  280 00000150         
  281 00000150         
  282 00000150         
  283 00000150         
  284 00000150         
  285 00000150         ;*******************************************************
                       ********
  286 00000150         ; ADC_READ_CURSOR FUNCTION READS THE AIN0 AND AIN1 DATA 
                       
  287 00000150         ;   RETURNS YDATA XDATA IN R4 REGISTER
  288 00000150         ;  COMPUTATION FOR CURSOR PLACEMENT MADE IN THIS SUBMODU
                       LE
  289 00000150         ;*******************************************************
                       ******** 
  290 00000150         ;LABEL  DIRECTIVE VALUE     COMMENT      
  291 00000150         
  292 00000150                 EXPORT           ADC_READ_CURSOR
  293 00000150         
  294 00000150         ADC_READ_CURSOR
                               PROC
  295 00000150 B500            PUSH             {LR}
  296 00000152 4B2B            LDR              R3, =ADC0_RIS 
                                                            ; interrupt address
                                                            
  297 00000154 4C2B            LDR              R4, =ADC0_SSFIFO3 
                                                            ; result address
  298 00000156 4A2C            LDR              R2, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
  299 00000158 4E2C            LDR              R6,= ADC0_ISC ; interrupt statu
                                                            s and clear
  300 0000015A         ; initiate sampling by enabling sequencer 3 in ADC0_PSSI
                       
  301 0000015A 6810    Smpl0_CURSOR
                               LDR              R0, [R2]
  302 0000015C F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  303 00000160 6010            STR              R0, [R2]
  304 00000162         ; check for sample complete (bit 3 of ADC0_RIS set)
  305 00000162 6818    Cont0_CURSOR
                               LDR              R0, [R3]
  306 00000164 F010 0008       ANDS             R0, R0, #8  ;RIS bit
  307 00000168 D0C5            BEQ              Cont0
  308 0000016A 6825            LDR              R5,[R4]     ; R5 KEEPS THE ADC0
                                                             READING
  309 0000016C F04F 0008       MOV              R0, #8
  310 00000170 4E26            LDR              R6,= ADC0_ISC
  311 00000172 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  312 00000174         
  313 00000174         
  314 00000174         ADC1_READ_CURSOR
  315 00000174 4B26            LDR              R3, =ADC1_RIS 
                                                            ; interrupt address



ARM Macro Assembler    Page 9 


                                                            
  316 00000176 4C27            LDR              R4, =ADC1_SSFIFO3 
                                                            ; result address
  317 00000178 4A27            LDR              R2, =ADC1_PSSI ; sample sequenc
                                                            e initiate address
  318 0000017A 4E28            LDR              R6,= ADC1_ISC ; interrupt statu
                                                            s and clear
  319 0000017C         
  320 0000017C 6810    Smpl1_CURSOR
                               LDR              R0, [R2]
  321 0000017E F040 0008       ORR              R0, R0, #0x08 ; set bit 3 for S
                                                            S3 in PSSI
  322 00000182 6010            STR              R0, [R2]
  323 00000184         ; check for sample complete (bit 3 of ADC0_RIS set)
  324 00000184 6818    Cont1_CURSOR
                               LDR              R0, [R3]
  325 00000186 F010 0008       ANDS             R0, R0, #8  ;RIS bit
  326 0000018A D0C5            BEQ              Cont1
  327 0000018C 6821            LDR              R1,[R4]     ; R1 KEEPS THE ADC1
                                                             READING
  328 0000018E F04F 0008       MOV              R0, #8
  329 00000192 4E22            LDR              R6,= ADC1_ISC
  330 00000194 6030            STR              R0, [R6]    ; clear flag in ISC
                                                            
  331 00000196         
  332 00000196         ****************
  333 00000196         ; R1 KEEPS ADC1 READING
  334 00000196         ; R5 KEEPS ADC0 READING
  335 00000196         
  336 00000196         **********
  337 00000196         
  338 00000196         COMPUTE_CURSOR
  339 00000196         
  340 00000196 F04F 0343       LDR              R3, =67     ; R3 IS THE DIVISOR
                                                            
  341 0000019A FBB5 F5F3       UDIV             R5, R5, R3  ; 
  342 0000019E F105 0507       ADD              R5, #7      ; R5 KEEPS THE X
  343 000001A2         
  344 000001A2 F04F 0389       LDR              R3, =137    ;
  345 000001A6 FBB1 F1F3       UDIV             R1, R1, R3  ;
  346 000001AA F101 0109       ADD              R1, #9      ;  ; R1 KEEPS THE Y
                                                             DATA
  347 000001AE         
  348 000001AE         
  349 000001AE EA4F 2101       LSL              R1,R1,#8    ; SHIFT Y DATA
  350 000001B2 EB01 0405       ADD              R4, R1, R5  ; ADD XDATA YDATA 
  351 000001B6         ; R4 IS IN FROM [YDATA, XDATA]
  352 000001B6         
  353 000001B6 F85D EB04       POP{LR}                      ; RETURN R4 DATA 
  354 000001BA 4770            BX               LR
  355 000001BC         
  356 000001BC                 ENDP
  357 000001BC         
  358 000001BC                 ALIGN
  359 000001BC                 END
              400FE638 
              400FE608 
              40024420 
              4002451C 



ARM Macro Assembler    Page 10 


              40024528 
              40038000 
              40038014 
              400380A0 
              400380A4 
              40038FC4 
              40038030 
              40039000 
              40039014 
              400390A0 
              400390A4 
              40039FC4 
              40039030 
              40038004 
              400380A8 
              40038028 
              40038034 
              40039004 
              400390A8 
              40039028 
              40039034 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\adc_init.d -o.\objects\adc_init.o -I.\RTE\_Target_1 -
IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\AR
M\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA
 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\adc_init.lst ADC_INIT
.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ADC1_READ 00000108

Symbol: ADC1_READ
   Definitions
      At line 231 in file ADC_INIT.s
   Uses
      None
Comment: ADC1_READ unused
ADC1_READ_CURSOR 00000174

Symbol: ADC1_READ_CURSOR
   Definitions
      At line 314 in file ADC_INIT.s
   Uses
      None
Comment: ADC1_READ_CURSOR unused
ADC_INIT 00000000

Symbol: ADC_INIT
   Definitions
      At line 61 in file ADC_INIT.s
   Uses
      At line 55 in file ADC_INIT.s
Comment: ADC_INIT used once
ADC_READ_CURSOR 00000150

Symbol: ADC_READ_CURSOR
   Definitions
      At line 294 in file ADC_INIT.s
   Uses
      At line 292 in file ADC_INIT.s
Comment: ADC_READ_CURSOR used once
ADC_READ_SHIP 000000E4

Symbol: ADC_READ_SHIP
   Definitions
      At line 199 in file ADC_INIT.s
   Uses
      At line 197 in file ADC_INIT.s
Comment: ADC_READ_SHIP used once
COMPUTE 0000012A

Symbol: COMPUTE
   Definitions
      At line 259 in file ADC_INIT.s
   Uses
      None
Comment: COMPUTE unused
COMPUTE_CURSOR 00000196

Symbol: COMPUTE_CURSOR
   Definitions
      At line 338 in file ADC_INIT.s
   Uses
      None
Comment: COMPUTE_CURSOR unused
Cont0 000000F6

Symbol: Cont0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 217 in file ADC_INIT.s
   Uses
      At line 219 in file ADC_INIT.s
      At line 307 in file ADC_INIT.s

Cont0_CURSOR 00000162

Symbol: Cont0_CURSOR
   Definitions
      At line 305 in file ADC_INIT.s
   Uses
      None
Comment: Cont0_CURSOR unused
Cont1 00000118

Symbol: Cont1
   Definitions
      At line 241 in file ADC_INIT.s
   Uses
      At line 243 in file ADC_INIT.s
      At line 326 in file ADC_INIT.s

Cont1_CURSOR 00000184

Symbol: Cont1_CURSOR
   Definitions
      At line 324 in file ADC_INIT.s
   Uses
      None
Comment: Cont1_CURSOR unused
Smpl0 000000EE

Symbol: Smpl0
   Definitions
      At line 213 in file ADC_INIT.s
   Uses
      None
Comment: Smpl0 unused
Smpl0_CURSOR 0000015A

Symbol: Smpl0_CURSOR
   Definitions
      At line 301 in file ADC_INIT.s
   Uses
      None
Comment: Smpl0_CURSOR unused
Smpl1 00000110

Symbol: Smpl1
   Definitions
      At line 237 in file ADC_INIT.s
   Uses
      None
Comment: Smpl1 unused
Smpl1_CURSOR 0000017C

Symbol: Smpl1_CURSOR
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 320 in file ADC_INIT.s
   Uses
      None
Comment: Smpl1_CURSOR unused
routines 00000000

Symbol: routines
   Definitions
      At line 53 in file ADC_INIT.s
   Uses
      None
Comment: routines unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ACTSS 40038000

Symbol: ADC0_ACTSS
   Definitions
      At line 9 in file ADC_INIT.s
   Uses
      At line 104 in file ADC_INIT.s
      At line 136 in file ADC_INIT.s

ADC0_EMUX 40038014

Symbol: ADC0_EMUX
   Definitions
      At line 13 in file ADC_INIT.s
   Uses
      At line 109 in file ADC_INIT.s
Comment: ADC0_EMUX used once
ADC0_IM 40038008

Symbol: ADC0_IM
   Definitions
      At line 11 in file ADC_INIT.s
   Uses
      None
Comment: ADC0_IM unused
ADC0_ISC 40038034

Symbol: ADC0_ISC
   Definitions
      At line 12 in file ADC_INIT.s
   Uses
      At line 211 in file ADC_INIT.s
      At line 222 in file ADC_INIT.s
      At line 299 in file ADC_INIT.s
      At line 310 in file ADC_INIT.s

ADC0_PP 40038FC4

Symbol: ADC0_PP
   Definitions
      At line 18 in file ADC_INIT.s
   Uses
      At line 126 in file ADC_INIT.s
Comment: ADC0_PP used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 14 in file ADC_INIT.s
   Uses
      At line 210 in file ADC_INIT.s
      At line 298 in file ADC_INIT.s

ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 10 in file ADC_INIT.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 208 in file ADC_INIT.s
      At line 296 in file ADC_INIT.s

ADC0_SAC 40038030

Symbol: ADC0_SAC
   Definitions
      At line 19 in file ADC_INIT.s
   Uses
      At line 131 in file ADC_INIT.s
Comment: ADC0_SAC used once
ADC0_SSCTL3 400380A4

Symbol: ADC0_SSCTL3
   Definitions
      At line 16 in file ADC_INIT.s
   Uses
      At line 121 in file ADC_INIT.s
Comment: ADC0_SSCTL3 used once
ADC0_SSFIFO3 400380A8

Symbol: ADC0_SSFIFO3
   Definitions
      At line 17 in file ADC_INIT.s
   Uses
      At line 209 in file ADC_INIT.s
      At line 297 in file ADC_INIT.s

ADC0_SSMUX3 400380A0

Symbol: ADC0_SSMUX3
   Definitions
      At line 15 in file ADC_INIT.s
   Uses
      At line 114 in file ADC_INIT.s
Comment: ADC0_SSMUX3 used once
ADC1_ACTSS 40039000

Symbol: ADC1_ACTSS
   Definitions
      At line 32 in file ADC_INIT.s
   Uses
      At line 145 in file ADC_INIT.s
      At line 175 in file ADC_INIT.s

ADC1_EMUX 40039014

Symbol: ADC1_EMUX
   Definitions
      At line 36 in file ADC_INIT.s
   Uses
      At line 150 in file ADC_INIT.s
Comment: ADC1_EMUX used once
ADC1_IM 40039008

Symbol: ADC1_IM
   Definitions
      At line 34 in file ADC_INIT.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: ADC1_IM unused
ADC1_ISC 40039034

Symbol: ADC1_ISC
   Definitions
      At line 35 in file ADC_INIT.s
   Uses
      At line 235 in file ADC_INIT.s
      At line 246 in file ADC_INIT.s
      At line 318 in file ADC_INIT.s
      At line 329 in file ADC_INIT.s

ADC1_PP 40039FC4

Symbol: ADC1_PP
   Definitions
      At line 41 in file ADC_INIT.s
   Uses
      At line 166 in file ADC_INIT.s
Comment: ADC1_PP used once
ADC1_PSSI 40039028

Symbol: ADC1_PSSI
   Definitions
      At line 37 in file ADC_INIT.s
   Uses
      At line 234 in file ADC_INIT.s
      At line 317 in file ADC_INIT.s

ADC1_RIS 40039004

Symbol: ADC1_RIS
   Definitions
      At line 33 in file ADC_INIT.s
   Uses
      At line 232 in file ADC_INIT.s
      At line 315 in file ADC_INIT.s

ADC1_SAC 40039030

Symbol: ADC1_SAC
   Definitions
      At line 42 in file ADC_INIT.s
   Uses
      At line 171 in file ADC_INIT.s
      At line 180 in file ADC_INIT.s

ADC1_SSCTL3 400390A4

Symbol: ADC1_SSCTL3
   Definitions
      At line 39 in file ADC_INIT.s
   Uses
      At line 161 in file ADC_INIT.s
Comment: ADC1_SSCTL3 used once
ADC1_SSFIFO3 400390A8

Symbol: ADC1_SSFIFO3



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 40 in file ADC_INIT.s
   Uses
      At line 233 in file ADC_INIT.s
      At line 316 in file ADC_INIT.s

ADC1_SSMUX3 400390A0

Symbol: ADC1_SSMUX3
   Definitions
      At line 38 in file ADC_INIT.s
   Uses
      At line 155 in file ADC_INIT.s
Comment: ADC1_SSMUX3 used once
PORTE_AFSEL 40024420

Symbol: PORTE_AFSEL
   Definitions
      At line 25 in file ADC_INIT.s
   Uses
      At line 80 in file ADC_INIT.s
Comment: PORTE_AFSEL used once
PORTE_AMSEL 40024528

Symbol: PORTE_AMSEL
   Definitions
      At line 26 in file ADC_INIT.s
   Uses
      At line 93 in file ADC_INIT.s
Comment: PORTE_AMSEL used once
PORTE_DEN 4002451C

Symbol: PORTE_DEN
   Definitions
      At line 23 in file ADC_INIT.s
   Uses
      At line 88 in file ADC_INIT.s
Comment: PORTE_DEN used once
PORTE_PCTL 4002452C

Symbol: PORTE_PCTL
   Definitions
      At line 24 in file ADC_INIT.s
   Uses
      None
Comment: PORTE_PCTL unused
RCGCADC 400FE638

Symbol: RCGCADC
   Definitions
      At line 7 in file ADC_INIT.s
   Uses
      At line 64 in file ADC_INIT.s
Comment: RCGCADC used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 21 in file ADC_INIT.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 71 in file ADC_INIT.s
Comment: RCGCGPIO used once
data 20004000

Symbol: data
   Definitions
      At line 27 in file ADC_INIT.s
   Uses
      None
Comment: data unused
29 symbols
381 symbols in table
