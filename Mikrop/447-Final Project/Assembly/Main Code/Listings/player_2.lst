


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******** 
    2 00000000         ; EQU Directives
    3 00000000         ; These directives do not allocate memory
    4 00000000         ;*******************************************************
                       ********
    5 00000000         ;SYMBOL    DIRECTIVE VALUE   COMMENT
    6 00000000 00516155 
                       ONESEC  EQU              0x00516155  ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
    7 00000000 0028B0AA 
                       HALFSEC EQU              0x0028B0AA  ; approximately 0.5
                                                            s delay at ~16 MHz 
                                                            clock
    8 00000000 00145855 
                       QUARTERSEC
                               EQU              0x00145855  ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
    9 00000000 001046AA 
                       FIFTHSEC
                               EQU              0x001046AA  ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
   10 00000000 00082355 
                       TENTHSEC
                               EQU              0x00082355  ; approximately 0.1
                                                            s delay at ~16 MHz 
                                                            clock
   11 00000000         
   12 00000000 20000400 
                       EMPTY_FIELD
                               EQU              0x20000400  ;400-5F7
   13 00000000 20000600 
                       PLAYFIELD
                               EQU              0x20000600  ;600-7F7
   14 00000000 20001150 
                       MINE_MEMO
                               EQU              0x20001150  ;1150-1199
   15 00000000 20006000 
                       GP_MEMORY
                               EQU              0x20006000  ;6000-60FF Zero arr
                                                            ay for random use
   16 00000000         
   17 00000000         ;*******************************************************
                       ********
   18 00000000         ; Directives - This Data Section is part of the code
   19 00000000         ; It is in the read only section  so values cannot be ch
                       anged.
   20 00000000         ;*******************************************************
                       ******** 
   21 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   22 00000000                 AREA             sdata, DATA, READONLY
   23 00000000                 THUMB
   24 00000000         
   25 00000000         ;*******************************************************
                       ********
   26 00000000         ; Program section           



ARM Macro Assembler    Page 2 


   27 00000000         ;*******************************************************
                       ********
   28 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   29 00000000                 AREA             routines,READONLY,CODE
   30 00000000                 THUMB
   31 00000000                 ALIGN
   32 00000000                 EXTERN           ADC_READ_CURSOR ; INCLUDE ADC R
                                                            EADING MODULES
   33 00000000                 EXTERN           delay
   34 00000000                 EXTERN           PortF_Input
   35 00000000                 EXTERN           MINE_CURSOR
   36 00000000                 EXTERN           ADDRESS_CHANGE
   37 00000000                 EXTERN           DATA_WRITE
   38 00000000                 EXTERN           INIT_SYSTICK
   39 00000000                 EXPORT           PLAYER_2
   40 00000000         
   41 00000000         ;*******************************************************
                       ********
   42 00000000         ; Main Function
   43 00000000         ; PortF_Input reads button status to R0
   44 00000000         ; If R0 is 01 or 10 button is present the turn of second
                        player starts   
   45 00000000         ;*******************************************************
                       ******** 
   46 00000000         ;LABEL  DIRECTIVE VALUE     COMMENT
   47 00000000         
   48 00000000         PLAYER_2
                               PROC
   49 00000000 B500            PUSH             {LR}
   50 00000002         
   51 00000002 F7FF FFFE 
                       wait    BL               PortF_Input ; read all of the s
                                                            witches on Port F
   52 00000006 2800            CMP              R0,#0x00    ;  
   53 00000008 D0FB            BEQ              wait
   54 0000000A 2811            CMP              R0,#0x11    ;
   55 0000000C D0F9            BEQ              wait
   56 0000000E         
   57 0000000E F04F 0400       LDR              R4,=0x0000  ;Reset cursor locat
                                                            ion
   58 00000012 F7FF FFFE       BL               ADDRESS_CHANGE
   59 00000016         
   60 00000016 F44F 70FC       LDR              R0, =0x1F8
   61 0000001A 4D23            LDR              R5,= PLAYFIELD ; Write playfiel
                                                            d on the screen
   62 0000001C F815 4B01 
                       sneak_peak
                               LDRB             R4 ,[R5], #1 ; for sneak peak
   63 00000020 F7FF FFFE       BL               DATA_WRITE
   64 00000024 1E40            SUBS             R0, R0, #1
   65 00000026 D1F9            BNE              sneak_peak
   66 00000028         
   67 00000028 4820            LDR              R0, =HALFSEC ; R0 = FIFTHSEC (d
                                                            elay 0.2 second) 0.
                                                            1 DELAY
   68 0000002A F7FF FFFE       BL               delay
   69 0000002E         
   70 0000002E F44F 70FC       LDR              R0,=0x1F8
   71 00000032 4D1F            LDR              R5,=EMPTY_FIELD ; clears playfi



ARM Macro Assembler    Page 3 


                                                            eld for mine placem
                                                            ent
   72 00000034 F815 4B01 
                       clear_field
                               LDRB             R4,[R5],#1
   73 00000038 F7FF FFFE       BL               DATA_WRITE
   74 0000003C 1E40            SUBS             R0,R0,#1
   75 0000003E D1F9            BNE              clear_field
   76 00000040         
   77 00000040         
   78 00000040 F7FF FFFE       BL               INIT_SYSTICK ; Starts timer blo
                                                            ck for mine placeme
                                                            nt phase
   79 00000044         
   80 00000044         ;*******************************************************
                       ********
   81 00000044         
   82 00000044 481B            LDR              R0, =TENTHSEC ; R0 = FIFTHSEC (
                                                            delay 0.2 second) 0
                                                            .1 DELAY
   83 00000046 F7FF FFFE       BL               delay       ; delay at least (3
                                                            *R0) cycles
   84 0000004A         
   85 0000004A 4D1B            LDR              R5,=GP_MEMORY ; create a clear 
                                                            spot in memory 
   86 0000004C F04F 0000       MOV              R0,#00
   87 00000050 6028            STR              R0,[R5]
   88 00000052         
   89 00000052 F7FF FFFE 
                       read_loc
                               BL               ADC_READ_CURSOR ; READ CURSOR L
                                                            OCATION   
   90 00000056         
   91 00000056 4D18            LDR              R5,=GP_MEMORY
   92 00000058 6828            LDR              R0,[R5]
   93 0000005A 2800            CMP              R0,#0x00    ; if memory is empt
                                                            y read button data
   94 0000005C D11A            BNE              Skip_button ; else skip it
   95 0000005E         
   96 0000005E F7FF FFFE       BL               PortF_Input ; read all of the s
                                                            witches on Port F
   97 00000062 EA4F 6000       LSL              R0,R0, #24  ; SHIFT 24 TIMES
   98 00000066 4404            ADD              R4,R4, R0   ; R4 KEEPS STATUS O
                                                            F PUSHBUTTONS AND X
                                                            Y DATA  
   99 00000068 EA4F 6010       LSR              R0,#24      ; SHIFT RIGHT AGAIN
                                                            
  100 0000006C         
  101 0000006C         
  102 0000006C 2811            CMP              R0, #0x11
  103 0000006E D00E            BEQ              CONT        ; NO MINE 
  104 00000070 2800            CMP              R0, #0x00   ;
  105 00000072 D00C            BEQ              CONT        ; NO MINE
  106 00000074         
  107 00000074 4D10            LDR              R5,=GP_MEMORY
  108 00000076 F04F 000F       MOV              R0,#0x0F
  109 0000007A 6028            STR              R0,[R5]
  110 0000007C         
  111 0000007C         mine_memory



ARM Macro Assembler    Page 4 


  112 0000007C 4D0F            LDR              R5,=MINE_MEMO ; take to write m
                                                            emory address
  113 0000007E 6829            LDR              R1,[R5]     ; take pointer memo
                                                            ry address
  114 00000080 1B48            SUBS             R0,R1,R5    ; find the number o
                                                            f placed ships
  115 00000082 2814            CMP              R0,#0x14    ; if the 5th memory
                                                             location is receiv
                                                            ed
  116 00000084 D00A            BEQ              FINISH      ; do not write and 
                                                            skip to end
  117 00000086         
  118 00000086 600C            STR              R4,[R1]     ; store mine coordi
                                                            nate in pointed mem
                                                            ory 
  119 00000088 F101 0104       ADD              R1,R1,#4    ; increment R1 for 
                                                            next mine memory lo
                                                            cation
  120 0000008C 6029            STR              R1,[R5]     ; save next memory 
                                                            address  
  121 0000008E         
  122 0000008E F7FF FFFE 
                       CONT    BL               MINE_CURSOR
  123 00000092 E7DE            B                read_loc
  124 00000094         
  125 00000094         
  126 00000094 F1A0 0001 
                       Skip_button
                               SUB              R0,R0,#1    ; Decrement no read
                                                             counter at GP_MEMO
                                                            
  127 00000098 6028            STR              R0,[R5]
  128 0000009A E7F8            B                CONT
  129 0000009C         
  130 0000009C F1B9 0F00 
                       FINISH  CMP              R9, #0
  131 000000A0 D1FC            BNE              FINISH
  132 000000A2         
  133 000000A2 F85D EB04       POP              {LR}
  134 000000A6 4770            BX               LR
  135 000000A8         ;*******************************************************
                       ********
  136 000000A8         ; End of the program  section
  137 000000A8         ;*******************************************************
                       ********
  138 000000A8         ;LABEL      DIRECTIVE       VALUE                       
                           COMMENT
  139 000000A8                 ENDP
  140 000000A8                 ALIGN
  141 000000A8                 END
              20000600 
              0028B0AA 
              20000400 
              00082355 
              20006000 
              20001150 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\player_2.d -o.\objects\player_2.o -I.\RTE\_Target_1 -
IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 -IC:\Keil_v5\AR



ARM Macro Assembler    Page 5 


M\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA
 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\player_2.lst Player_2
.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

sdata 00000000

Symbol: sdata
   Definitions
      At line 22 in file Player_2.s
   Uses
      None
Comment: sdata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CONT 0000008E

Symbol: CONT
   Definitions
      At line 122 in file Player_2.s
   Uses
      At line 103 in file Player_2.s
      At line 105 in file Player_2.s
      At line 128 in file Player_2.s

FINISH 0000009C

Symbol: FINISH
   Definitions
      At line 130 in file Player_2.s
   Uses
      At line 116 in file Player_2.s
      At line 131 in file Player_2.s

PLAYER_2 00000000

Symbol: PLAYER_2
   Definitions
      At line 48 in file Player_2.s
   Uses
      At line 39 in file Player_2.s
Comment: PLAYER_2 used once
Skip_button 00000094

Symbol: Skip_button
   Definitions
      At line 126 in file Player_2.s
   Uses
      At line 94 in file Player_2.s
Comment: Skip_button used once
clear_field 00000034

Symbol: clear_field
   Definitions
      At line 72 in file Player_2.s
   Uses
      At line 75 in file Player_2.s
Comment: clear_field used once
mine_memory 0000007C

Symbol: mine_memory
   Definitions
      At line 111 in file Player_2.s
   Uses
      None
Comment: mine_memory unused
read_loc 00000052

Symbol: read_loc
   Definitions
      At line 89 in file Player_2.s
   Uses
      At line 123 in file Player_2.s
Comment: read_loc used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

routines 00000000

Symbol: routines
   Definitions
      At line 29 in file Player_2.s
   Uses
      None
Comment: routines unused
sneak_peak 0000001C

Symbol: sneak_peak
   Definitions
      At line 62 in file Player_2.s
   Uses
      At line 65 in file Player_2.s
Comment: sneak_peak used once
wait 00000002

Symbol: wait
   Definitions
      At line 51 in file Player_2.s
   Uses
      At line 53 in file Player_2.s
      At line 55 in file Player_2.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

EMPTY_FIELD 20000400

Symbol: EMPTY_FIELD
   Definitions
      At line 12 in file Player_2.s
   Uses
      At line 71 in file Player_2.s
Comment: EMPTY_FIELD used once
FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 9 in file Player_2.s
   Uses
      None
Comment: FIFTHSEC unused
GP_MEMORY 20006000

Symbol: GP_MEMORY
   Definitions
      At line 15 in file Player_2.s
   Uses
      At line 85 in file Player_2.s
      At line 91 in file Player_2.s
      At line 107 in file Player_2.s

HALFSEC 0028B0AA

Symbol: HALFSEC
   Definitions
      At line 7 in file Player_2.s
   Uses
      At line 67 in file Player_2.s
Comment: HALFSEC used once
MINE_MEMO 20001150

Symbol: MINE_MEMO
   Definitions
      At line 14 in file Player_2.s
   Uses
      At line 112 in file Player_2.s
Comment: MINE_MEMO used once
ONESEC 00516155

Symbol: ONESEC
   Definitions
      At line 6 in file Player_2.s
   Uses
      None
Comment: ONESEC unused
PLAYFIELD 20000600

Symbol: PLAYFIELD
   Definitions
      At line 13 in file Player_2.s
   Uses
      At line 61 in file Player_2.s
Comment: PLAYFIELD used once
QUARTERSEC 00145855



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: QUARTERSEC
   Definitions
      At line 8 in file Player_2.s
   Uses
      None
Comment: QUARTERSEC unused
TENTHSEC 00082355

Symbol: TENTHSEC
   Definitions
      At line 10 in file Player_2.s
   Uses
      At line 82 in file Player_2.s
Comment: TENTHSEC used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ADC_READ_CURSOR 00000000

Symbol: ADC_READ_CURSOR
   Definitions
      At line 32 in file Player_2.s
   Uses
      At line 89 in file Player_2.s
Comment: ADC_READ_CURSOR used once
ADDRESS_CHANGE 00000000

Symbol: ADDRESS_CHANGE
   Definitions
      At line 36 in file Player_2.s
   Uses
      At line 58 in file Player_2.s
Comment: ADDRESS_CHANGE used once
DATA_WRITE 00000000

Symbol: DATA_WRITE
   Definitions
      At line 37 in file Player_2.s
   Uses
      At line 63 in file Player_2.s
      At line 73 in file Player_2.s

INIT_SYSTICK 00000000

Symbol: INIT_SYSTICK
   Definitions
      At line 38 in file Player_2.s
   Uses
      At line 78 in file Player_2.s
Comment: INIT_SYSTICK used once
MINE_CURSOR 00000000

Symbol: MINE_CURSOR
   Definitions
      At line 35 in file Player_2.s
   Uses
      At line 122 in file Player_2.s
Comment: MINE_CURSOR used once
PortF_Input 00000000

Symbol: PortF_Input
   Definitions
      At line 34 in file Player_2.s
   Uses
      At line 51 in file Player_2.s
      At line 96 in file Player_2.s

delay 00000000

Symbol: delay
   Definitions
      At line 33 in file Player_2.s
   Uses
      At line 68 in file Player_2.s
      At line 83 in file Player_2.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

7 symbols
363 symbols in table
